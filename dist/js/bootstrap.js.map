{"version":3,"file":"bootstrap.js","sources":["config.js","bootstrap.js","utils/timer/timerStopper.js","utils/timer/timerDirective.js","utils/timer/timerNow.js","utils/timer/timer-module.js","utils/utils/preloaderService.js","utils/utils/preloaderDecorator.js","utils/utils/utilsModule.js","quest/directives/buttons/buttons.js","utils/database/template/templateFilter.js","utils/database/template/templateObjProvider.js","utils/database/template/templateModule.js","utils/console/consoleProvider.js","utils/console/consolePrototypeProvider.js","utils/console/console.html!text","utils/console/consoleDirective.js","utils/console/consoleModule.js","utils/modal/modal.html!text","utils/modal/modalService.js","utils/modal/modalModule.js","quest/directives/questController.js","quest/directives/piQuest/piQuest.html!text","quest/directives/piQuest/piQuest-directive.js","quest/directives/piQuest/piqPage.html!text","quest/directives/piQuest/piqPage-directive.js","quest/directives/wrapper/wrapper.html!text","quest/directives/wrapper/wrapper-directive.js","quest/directives/text/text.html!text","quest/directives/text/textarea.html!text","quest/directives/text/textDirective.js","text!quest/directives/text/text-number.html","quest/directives/text/text-number-directive.js","quest/directives/select/selectMixerProvider.js","quest/directives/select/dropdown.html!text","quest/directives/select/dropdownDirective.js","quest/directives/select/selectOne.html!text","quest/directives/select/selectOneDirective.js","quest/directives/select/selectMulti.html!text","quest/directives/select/selectMultiDirective.js","quest/directives/grid/grid.html!text","quest/directives/grid/gridDirective.js","quest/directives/grid/gridRow.html!text","quest/directives/grid/gridRowDirective.js","quest/directives/slider/slider.html!text","quest/directives/slider/sliderDirective.js","quest/directives/slider/slider.js","quest/directives/toRegexFilter.js","quest/directives/dfltUnitsFilter.js","quest/directives/questDirectivesModule.js","utils/logger/LoggerProvider.js","utils/logger/logger-module.js","utils/database/randomize/randomizeModule.js","utils/database/mixer/mixer.js","utils/database/mixer/mixerSequential.js","utils/database/mixer/mixerRecursive.js","utils/database/mixer/mixerSequenceProvider.js","utils/database/mixer/branching/dotNotation.js","utils/database/mixer/branching/mixerDotNotationProvider.js","utils/database/mixer/branching/mixerConditionProvider.js","utils/database/mixer/branching/mixerEvaluateProvider.js","utils/database/mixer/branching/mixerBranchingDecorator.js","utils/database/mixer/mixerModule.js","utils/database/collection/collectionProvider.js","utils/database/randomizer/randomizerProvider.js","utils/database/queryProvider.js","utils/database/inflateProvider.js","utils/database/store/storeProvider.js","utils/database/databaseProvider.js","utils/database/databaseSequenceProvider.js","utils/database/databaseModule.js","quest/task/questSequenceProvider.js","quest/task/taskProvider.js","quest/task/parseProvider.js","quest/task/dfltQuestLogger.js","quest/task/task-module.js","quest/questModule.js","message/messageDirective.js","message/messageDoneDirective.js","message/messageModule.js","taskManager/task/taskActivateProvider.js","taskManager/task/taskDirective.js","taskManager/task/taskModule.js","taskManager/canvas/canvasConstructor.js","taskManager/canvas/managerCanvasService.js","taskManager/canvas/canvasModule.js","utils/helperDirectives/piSwap/piSwapDirective.js","utils/helperDirectives/piSpinner/spinner.html!text","utils/helperDirectives/piSpinner/piSpinnerDirective.js","utils/helperDirectives/helperDirectivesModule.js","taskManager/managerService.js","taskManager/managerSequence.js","taskManager/managerLoadService.js","taskManager/managerGetScriptService.js","taskManager/managerTaskLoadService.js","taskManager/managerDirective.js","taskManager/managerTaskDirective.js","taskManager/managerModule.js","utils/animations/rafPolyfill.js","utils/animations/dropInAnimation.js","utils/animations/fadeAnimation.js","utils/animations/slideAnimation.js","utils/animations/animationModule.js","app.js","../../bower_components/PIPlayer/dist/js/extensions/dscore/Scorer.js","APIs/APIConstructor.js","APIs/pipAPI.js","APIs/questAPI.js","APIs/managerAPI.js"],"names":["define","noop","window","console","log","warn","require","config","paths","underscore","angular","animate","text","jquery","packages","name","location","main","shim","exports","deps","app","element","ready","setTimeout","resumeBootstrap","stopperProvider","now","Stopper","this","startTime","prototype","$inject","timerController","$timeout","TimerStopper","timerStart","options","_","isPlainObject","Error","$scope","ctrl","getScope","defaults","direction","template","show","removeOnEnd","duration","stopper","targetTime","tick","timerStop","cancel","timeoutId","remove","INTERVAL","timeLeft","$emit","currentTime","extend","milisToTime","Math","min","time","secs","floor","hours","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","current","milis","start","stop","timerDirective","$compile","controller","priority","link","$element","$attr","$timerElement","prepend","contents","localScope","$new","zeroPad","n","$on","nowFn","performance","mozNow","webkitNow","msNow","oNow","apply","Date","module","service","directive","value","preloaderService","$q","loaders","loaded","preloaderRegister","type","fn","isFunction","preloaderLoad","description","promise","resultObj","loader","getObj","push","call","isPromiseLike","then","result","preloaderLoadArr","descriptions","defs","isArray","map","load","all","preloaderGetObj","find","loadObj","preloaderGet","register","loadArr","get","preloaderDecorator","preloader","imageLoader","url","def","defer","img","Image","onload","bind","resolve","onerror","reject","src","$provide","decorator","$injector","piInvoke","locals","global","$rootScope","invoke","constant","activeClass","toggleEvent","buttonConfig","scope","attrs","ctrls","buttonsCtrl","ngModelCtrl","$render","toggleClass","equals","$modelValue","$eval","btnRadio","isActive","hasClass","isDefined","uncheckable","$apply","$setViewValue","getTrueValue","getCheckboxValue","btnCheckboxTrue","getFalseValue","btnCheckboxFalse","attributeValue","defaultValue","val","templateFilter","$log","defaultContext","input","context","indexOf","e","error","message","templateObjProvider","$filter","templateObj","deepTemplate","forEach","key","expand","deep","includes","isString","filter","mapValues","consoleProvider","consolePrototype","Console","tags","force","$console","create","consoleSetSettings","settings","setSettings","consolePrototypeProvider","shouldLog","level","targetLevel","targetTags","LOGFUNCTIONS","LEVELS","intersection","length","createLog","i","args","arguments","hideConsole","each","none","info","debug","replace","index","logs","splice","reverse","stringify","pretty","toJson","modalConstructor","$rootElement","$document","modalCleanup","$destroy","deferred","$backDrop","off","removeClass","modalOpener","close","on","header","body","button","addClass","$digest","open","questController","$parse","piConsole","registerModel","ngModel","correctValidator","response","correctValue","data","isNumber","isEqual","$setValidity","ngModelGet","dfltValue","hasOwnProperty","dflt","model","$parent","isUndefined","assign","self","serial","size","questions","$viewValue","$formatters","modelValue","$parsers","viewValue","latency","pristineLatency","$watch","newValue","oldValue","onChange","onDestroy","correct","onCreate","NaN","event","preventDefault","declined","undefined","submitLatency","onSubmit","onDecline","timeout","onTimeout","piQuestCtrl","Task","templateDefaultContext","mixerDefaultContext","next","target","task","prev","script","pageData","$animate","terminal","parentElement","attr","cleanupLastPage","previousElement","currentScope","currentElement","leave","newPage","page","newScope","tempElm","jqLite","addAnimations","enter","refresh","animationsStr","animations","split","animation","has","piqPageCtrl","piModal","pageRefresh","pageSetup","timer","timerEnd","$broadcast","pagesMeta","$meta","pagesData","$context","timerProceed","submit","submitOnEnd","harvest","lognow","q","$logged","skipValidation","valid","pageForm","$valid","submitAttempt","proceed","decline","$event","$el","notDoubleClick","setup","$ctrl","capitaliseFirstLetter","string","charAt","toUpperCase","slice","questElement","children","eq","attrName","PREFIX","kebabCase","textDirective","el","textTemplate","textareaTemplate","controllerAs","maxlengthLimit","$input","limit","maxlength","form","autoSubmit","which","minValidator","parseFloat","isNaN","maxValidator","max","selectMixerProvider","shuffle","mixer","selectMixer","answersArr","answers","answer","numericValues","randomize","order","quest","chooseText","requiredValidator","$isEmpty","html","required","unshift","buttons","style","listCss","listItemCss","listClass","listItemClass","lineHeight","minWidth","isEmpty","chosen","pluck","gridDirective","mapColumns","columns","objectify","column","tap","commit","noReverse","reverseValue","mapRows","rows","row","zerofill","thru","identity","stem","w","an","abs","digitCount","LN10","zeroString","pow","toString","substr","$watchCollection","responses","reduce","total","isFinite","gridRowDirective","newVal","$response","sliderDirective","root","factory","amd","join","setValue","percentage","steppedPercentage","steps","round","renderView","showHandle","handleDisplay","highlightDisplay","highlight","highlightStyle","right","display","handleStyle","left","toPercentage","range","fromPercentage","toFixed","onHandleMousedown","mouseMove","fixEvent","basePercentage","pageX","basePosition","prop","sliderHandleWidth","mouseUp","SLIDER_CHANGE_EVENT","stopPropagation","onSliderMouseDown","sliderWidth","sliderPosition","getBoundingClientRect","querySelector","clientWidth","pipWidth","labels","labelsWidth","getNumber","num","Array","eventDoc","doc","clientX","ownerDocument","document","documentElement","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","toRegexFilter","toRegex","err","isRegExp","RegExp","dfltUnits","unit","suffix","isNumeric","String","$sceProvider","enabled","transclude","unvalid","loggerProvider","$http","Logger","dfltLogFn","pending","sent","meta","suppress","a","logObj","logFn","logCounter","pulse","send","success","post","sendData","suppressPulse","getCount","$get","provider","random","mixProvider","mix","mixerName","mixers","remix","$parsed","wrapper","repeat","sequence","times","concat","clone","randomDeepMixer","arr","seq","choose","take","weightedRandom","total_weight","weights","cur","random_num","weight_sum","mixerSequentialProvider","mixerSequential","depth","mixed","shift","mixerRecursiveProvider","mixerRecursive","flatten","mixerSequenceProvider","MixerSequence","stack","add","pointer","subSequence","isNext","pop","number","outOf","memo","sub","dotNotation","chain","mixerDotNotationProvider","mixerDotNotation","escapeSeparatorRegex","test","mixerConditionProvider","mixerCondition","condition","operator","compare","to","evaluateProvider","evaluate","conditions","cond","and","every","nand","or","some","nor","mixerBranchingDecorator","branch","elseData","multiBranch","branches","collectionService","Collection","collection","first","last","end","previous","list","at","methods","method","coll","RandomizerProvider","randomizeInt","randomizeRange","Randomizer","_cache","exRandom","sequential","seed","cache","queryProvider","queryFn","query","randomizer","set","where","handle","namespace","JSON","inflateProvider","customize","source","inflate","recursive","parent","child","cloneDeep","inheritObj","inherit","merge","childProp","parentProp","storeProvider","Store","store","nameSpace","read","update","del","DatabaseProvider","DatabaseSequence","Database","createColl","getColl","$inflated","reinflate","$templated","regenerateTemplate","SequenceProvider","Sequence","db","mixerSequence","questionsArr","TaskProvider","QuestSequence","parse","dfltQuestLogger","logger","onEnd","nextObj","parseProvider","pagesSets","questionsSets","DEBUG","responseObj","onKeydown","keyArr","keys","charCodeAt","done","empty","events","$template","activators","taskActivateProvider","taskActivate","activator","destroy","$script","play","annotate","activateTask","canvas","$window","proceedListener","keyCode","ctrlKey","one","skipListener","proceedObject","bustCache","canvasOff","oldTitle","taskName","skip","piGlobal","title","activateProvider","activateQuest","$canvas","append","activateMessage","activatePIP","req","requirejs","uniqueId","baseUrl","backbone","activate","canvasContructor","offArr","rule","property","old","css","managerCanvasService","$body","background","canvasBackground","fontSize","fontColor","canvasConstructor","swapControler","swapDirective","compile","pre","$ctrls","$transclude","cleanupLast","opts","postLeave","props","spinner","managerService","ManagerSequence","taskLoad","manager","preloadImages","loadOptions","setBaseUrl","sequenceProvider","tasksSets","managerLoadService","getScript","managerLoadScript","when","getScriptProvider","isText","getTime","taskLoadService","managerGetScript","scriptUrl","templateUrl","promises","managerControler","ManagerService","managerLoad","init","getPath","path","substring","lastIndexOf","taskSource","loading","prevTask","currentTask","thisCtrl","$qSequence","onPreTask","swap","taskDone","ev","prms","piManager","piManagerTask","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","clearTimeout","topdx","raf","rafCancel","deltaTime","proportion","top","cancelId","canceled","opacity","submodules","run","globalAttr","Object","getPrototypeOf","__proto__","object","constructor","$$watchers","$$nextSibling","$$childHead","$$childTail","$$listeners","$$listenerCount","$id","$$childScopeClass","$$prevSibling","nextUid","proto","isolate","$root","$$asyncQueue","$$postDigestQueue","r","dataArray","AnalyzedVar","ErrorVar","condVar","cond1VarValues","cond2VarValues","parcelVar","parcelValue","fastRT","maxFastTrialsRate","minRT","maxRT","maxErrorParcelRate","errorLatency","use","penalty","useForSTD","postSettings","setComputeObject","setDataArray","messages","MessageDef","manyErrors","tooFast","notEnough","setMsgObject","getScoreMsg","t","o","s","c","cut","u","getMessage","parcelArray","scoreData","msgMan","Init","l","g","h","p","f","d","v","m","y","trialIData","validate","checkErrors","errorMessage","addPenalty","avgCon1","avgCon2","checkArray","avgAll","avgParcel","diff","avgBoth","varianceAll","varianceParcel","variance","scoreAll","scoreParcel","score","sqrt","computeData","parcelMng","addSettings","computeD","FBMsg","getFBMsg","DScore","postToServer","msg","dynamicPost","APIconstructor","API","sets","camelCase","add_set","setName","settingsObj","addSequence","addGlobal","getGlobal","addCurrent","getCurrent","addScript","defined","ajax","contentType","dataType","injector","setSetter","setArr","targetSets","api","addTrialSets","addTrialSet","addStimulusSets","addStimulusSet","addMediaSets","addMediaSet","getLogs"],"mappings":"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","sourcesContent":["/*jshint unused: vars */\ndefine('config',[],function(){\n\n\t// just make sure console is available\n\t// It prevents stuff from breaking\n\tvar noop = function(){};\n\twindow.console || (window.console = {});\n\twindow.console.log || (window.console.log = noop);\n\twindow.console.warn || (window.console.warn = noop);\n\n\trequire.config({\n\t\tpaths: {\n\t\t\t// libs\n\t\t\tunderscore: [\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min\",\"../../bower_components/lodash-compat/lodash.min\"],\n\t\t\t//angular: '../../bower_components/angular/angular',\n\t\t\tangular: ['//ajax.googleapis.com/ajax/libs/angularjs/1.2.26/angular.min','../../bower_components/angular/angular.min'],\n\t\t\tanimate: ['//ajax.googleapis.com/ajax/libs/angularjs/1.2.26/angular-animate.min', '../../bower_components/angular-animate/angular-animate.min'],\n\t\t\ttext: ['//cdnjs.cloudflare.com/ajax/libs/require-text/2.0.10/text.min','../../bower_components/requirejs-text/text'],\n\n\t\t\t// this lib is needed for pipScorer\n\t\t\tjquery: [\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min\",\"../../bower_components/jquery/dist/jquery.min\"]\n\t\t},\n\n\t\tpackages:[\n\t\t\t{\n\t\t\t\tname: 'pipScorer',\n\t\t\t\tlocation: '../../bower_components/PIPlayer/dist/js/extensions/dscore',\n\t\t\t\tmain: 'Scorer'\n\t\t\t}\n\t\t],\n\t\tshim: {\n\t\t\tangular : {exports : 'angular'},\n\t\t\tanimate : {deps: ['angular'], exports: 'angular'}\n\t\t},\n\t\tdeps: [\n\t\t\t// The APIs are preloaded into the app so we don't have to set them as dependencies here\n\t\t\t'angular', 'animate', 'underscore','text'\n\t\t]\n\t});\n\n\t//http://code.angularjs.org/1.2.1/docs/guide/bootstrap#overview_deferred-bootstrap\n\twindow.name = 'NG_DEFER_BOOTSTRAP!';\n});\n","/*jshint unused: vars */\ndefine('bootstrap',['./config'], function(){\n\n\trequire.config({\n\t\tpackages: [\n\t\t\t{name: 'pipAPI', location:'APIs', main:'pipAPI'},\n\t\t\t{name: 'questAPI', location:'APIs', main:'questAPI'},\n\t\t\t{name: 'managerAPI', location:'APIs', main:'managerAPI'}\n\t\t]\n\t});\n\n\t// resume boot strap\n\t// http://stackoverflow.com/a/25770449/1400366\n\t// The angular.js detects dom ready via JQLite. When the document loads, it triggers a method which defines the resumeBootstrap method.\n\t// The problem is that you cannot enforce processing order between domready and JQLite ready,\n\t// if domready already fulfills your dependency before the method gets defined, you are in trouble.\n\t// The workaround is to enforce javascript to execute all event handlers before your resumeBootstrap invocation.\n\t// I've used the setTimeout method to do so, e.g.: setTimeout(angular.resumeBootstrap, 0).\n\trequire(['angular','app'], function(angular, app) {\n\t\tangular.element().ready(function() {\n\t\t\tsetTimeout(function(){\n\t\t\t\tangular.resumeBootstrap([app.name]);\n\t\t\t},0);\n\t\t});\n\t});\n});\n","/**\n * a stopper\n */\n\ndefine('utils/timer/timerStopper',[],function(){\n\n\tstopperProvider.$inject = ['timerNow'];\n\tfunction stopperProvider(now){\n\t\tfunction Stopper(){\n\t\t\tthis.startTime = now();\n\t\t}\n\n\t\tStopper.prototype.now = function(){\n\t\t\treturn now() - this.startTime;\n\t\t};\n\n\t\treturn Stopper;\n\t}\n\n\treturn stopperProvider;\n\n});\n","/**\n * The piTimer directive lies dormant on its parent element\n * When \"start(options)\" is called it starts a timer\n *\n * options:\n * direction: up/down (default)\n * show: display counter\n * remove: remove counter when timer ends\n * duration: how long...\n *\n */\ndefine('utils/timer/timerDirective',['require','underscore','angular'],function (require) {\n\n\tvar _ = require('underscore');\n\tvar angular = require('angular');\n\n\ttimerController.$inject = ['$timeout','timerStopper'];\n\tfunction timerController($timeout, TimerStopper){\n\t\tvar ctrl = this;\n\t\tvar $scope = {}; // the local scope that we created (fake object for case we attempt to access scope before we set it...)\n\t\tctrl.start = timerStart;\n\t\tctrl.stop = timerStop;\n\n\t\tfunction timerStart(options){\n\t\t\tif (!_.isPlainObject(options)){\n\t\t\t\tthrow new Error('Timer options must be an object');\n\t\t\t}\n\n\t\t\t$scope = ctrl.getScope(); // get the local scope that we created\n\n\t\t\t$scope.options = _.defaults(options, {\n\t\t\t\tdirection : 'down',\n\t\t\t\ttemplate : 'normal',\n\t\t\t\tshow : true,\n\t\t\t\tremoveOnEnd : true,\n\t\t\t\tduration : 0 // in seconds\n\t\t\t});\n\n\t\t\t// translate duratio to ms\n\t\t\tctrl.stopper = new TimerStopper();\n\t\t\tctrl.targetTime = $scope.options.duration * 1000;\n\n\t\t\t$scope.options.show && ctrl.show();\n\n\t\t\t// activate the timer\n\t\t\ttick();\n\t\t}\n\n\t\tfunction timerStop(){\n\t\t\tvar options = $scope.options || {};\n\t\t\t$scope = ctrl.getScope(); // get the local scope that we created\n\t\t\t$timeout.cancel(ctrl.timeoutId);\n\t\t\toptions.removeOnEnd && ctrl.remove();\n\t\t}\n\n\t\tfunction tick(){\n\t\t\t// update scope\n\t\t\tvar INTERVAL = 100;\n\t\t\tvar options = $scope.options;\n\t\t\tvar now = ctrl.stopper.now();\n\t\t\tvar timeLeft = ctrl.targetTime - now;\n\n\n\t\t\tif (now >= ctrl.targetTime){\n\t\t\t\t$scope.$emit('timer-end');\n\t\t\t\toptions.removeOnEnd && ctrl.remove();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// time to show and parse\n\t\t\tvar currentTime = options.direction === 'up' ? now : timeLeft;\n\n\t\t\t// update scope with times\n\t\t\t_.extend($scope, milisToTime(currentTime));\n\t\t\tctrl.timeoutId = $timeout(tick, Math.min(INTERVAL,timeLeft));\n\t\t\t$scope.$emit('timer-tick');\n\t\t}\n\n\t\tfunction milisToTime(time){\n\t\t\tvar secs = Math.floor(time/1000);\n\t\t\tvar hours = Math.floor(secs / (60 * 60));\n\n\t\t\tvar divisor_for_minutes = secs % (60 * 60);\n\t\t\tvar minutes = Math.floor(divisor_for_minutes / 60);\n\n\t\t\tvar divisor_for_seconds = divisor_for_minutes % 60;\n\t\t\tvar seconds = Math.ceil(divisor_for_seconds);\n\n\t\t\tvar obj = {\n\t\t\t\tcurrent: time,\n\t\t\t\thours: hours,\n\t\t\t\tminutes: minutes,\n\t\t\t\tseconds: seconds,\n\t\t\t\tmilis: time % 1000\n\t\t\t};\n\t\t\treturn obj;\n\t\t}\n\t}\n\n\ttimerDirective.$inject = ['$compile'];\n\tfunction timerDirective($compile){\n\t\treturn {\n\t\t\tcontroller: timerController,\n\t\t\tpriority: 400,\n\t\t\tlink: function($scope, $element,$attr,ctrl){\n\t\t\t\tvar template = '<div class=\"pi-timer well well-sm text-center\" style=\"font-family: monospace;\">{{minutes}}:{{zeroPad(seconds)}}</div>';\n\t\t\t\tvar $timerElement;\n\t\t\t\tvar localScope = $scope.$new();\n\n\t\t\t\tctrl.show = show;\n\t\t\t\tctrl.remove = remove;\n\t\t\t\tctrl.getScope = function(){return localScope;};\n\n\t\t\t\tlocalScope.zeroPad = function pad(n){return n<10 ? '0'+n : n;};\n\t\t\t\t$scope.$on('$destroy',remove);\n\n\t\t\t\tfunction show(){\n\t\t\t\t\t$timerElement = angular.element(template);\n\t\t\t\t\t$element.prepend($timerElement);\n\t\t\t\t\t$compile($timerElement.contents())(localScope);\n\t\t\t\t}\n\n\t\t\t\tfunction remove(){\n\t\t\t\t\t$timerElement && $timerElement.remove();\n\t\t\t\t\t$timerElement = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn timerDirective;\n});\n","/* global performance */\n\n/**\n * Returns current time (uses performance if possible).\n * Notably, this function return either time since epoch or since startup. It is useful only for latency calculations.\n * @return {integer} [Time in ms]\n */\ndefine('utils/timer/timerNow',[],function(){\n\n\tvar nowFn;\n\n\t// if performance is set, look for the now function\n\tif (!!window.performance) {\n\t\tnowFn = performance.now ||\n\t\tperformance.mozNow ||\n\t\tperformance.webkitNow ||\n\t\tperformance.msNow ||\n\t\tperformance.oNow;\n\t}\n\n\t// if we have now proxy it (so it uses perfomance as \"this\")\n\t// otherwise use regular date/time\n\treturn nowFn ?\n\t\tfunction now(){return nowFn.apply(performance);}\n\t\t: function now(){ return +new Date();};\n\n});\n","define('utils/timer/timer-module',['require','angular','./timerStopper','./timerDirective','./timerNow'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('timer',[]);\n\n\tmodule.service('timerStopper', require('./timerStopper'));\n\tmodule.directive('piTimer', require('./timerDirective'));\n\tmodule.value('timerNow', require('./timerNow'));\n\n\treturn module;\n});\n","define('utils/utils/preloaderService',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tpreloaderService.$inject = ['$q'];\n\tfunction preloaderService($q){\n\t\tthis.$q = $q;\n\t\tthis.loaders = {};\n\t\tthis.loaded = [];\n\t}\n\n\t_.extend(preloaderService.prototype, {\n\t\tregister: preloaderRegister,\n\t\tload: preloaderLoad,\n\t\tloadArr: preloaderLoadArr,\n\t\tget: preloaderGet,\n\t\tgetObj: preloaderGetObj\n\t});\n\n\treturn preloaderService;\n\n\t/**\n\t * register loader\n\t * loader functions take a single parameter: the description\n\t * and return a promise to be resolved with the result.\n\t *\n\t * @param  {String}   type The loader type\n\t * @param  {Function} fn   The loader function itself (should return a promise to be resolved with the result)\n\t */\n\tfunction preloaderRegister(type, fn){\n\t\tif (!_.isFunction(fn)){\n\t\t\tthrow new Error('Fn is not a function');\n\t\t}\n\n\t\tthis.loaders[type] = fn;\n\t}\n\n\tfunction preloaderLoad(type, description){\n\t\tvar loader = this.loaders[type];\n\t\tvar promise, resultObj;\n\n\t\t// check if this description has already been loaded\n\t\tresultObj = this.getObj(type, description);\n\t\tif (!resultObj){\n\t\t\tresultObj = {type:type, description:description};\n\t\t\tthis.loaded.push(resultObj);\n\t\t} else {\n\t\t\treturn resultObj.promise;\n\t\t}\n\n\t\t// make sure loader was registered\n\t\tif (!_.isFunction(loader)){\n\t\t\tthrow new Error('Loader \"' + type + '\" was not registered.');\n\t\t}\n\n\t\t// call loader\n\t\tpromise = resultObj.promise = loader.call(this, description);\n\n\t\t// make sure loader returns a promise\n\t\tif (!isPromiseLike(promise)){\n\t\t\tthrow new Error('Loader \"' + type + '\" must return a promise.');\n\t\t}\n\n\t\t// save result into the loaded array (we use an array in order to allow non string descriptions)\n\t\tpromise.then(function(result){\n\t\t\tresultObj.promise = null; // so that the promise can be garbage collected\n\t\t\tresultObj.value = result;\n\t\t\treturn result;\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\tfunction preloaderLoadArr(type, descriptions){\n\t\tvar $q = this.$q;\n\t\tvar defs;\n\n\t\tif (!_.isArray(descriptions)){\n\t\t\tthrow new Error('descriptions must be an array.');\n\t\t}\n\n\t\tdefs = _.map(descriptions, function(description){\n\t\t\treturn this.load(type, description);\n\t\t}, this);\n\n\t\treturn $q.all(defs);\n\t}\n\n\tfunction preloaderGetObj(type, description){\n\t\t// get the\n\t\tvar result = _.find(this.loaded, function(loadObj){\n\t\t\treturn loadObj.type === type && loadObj.description === description;\n\t\t}, this);\n\n\t\treturn result;\n\t}\n\n\tfunction preloaderGet(type, description){\n\t\tvar result = this.getObj(type, description);\n\n\t\tif (!('value' in result)){\n\t\t\tthrow new Error('This object has not been loaded yet: \"' + description + '\"');\n\t\t}\n\n\t\treturn result.value;\n\t}\n\n\tfunction isPromiseLike(obj){\n\t\treturn _.isPlainObject(obj) && _.isFunction(obj.then);\n\t}\n});\n","define('utils/utils/preloaderDecorator',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tpreloaderDecorator.$inject = ['$delegate'];\n\tfunction preloaderDecorator(preloader){\n\t\tpreloader.register('image', imageLoader);\n\t\treturn preloader;\n\t}\n\n\tfunction imageLoader(url){\n\t\tvar def = this.$q.defer();\n\t\tvar img = new Image();\t// create img object\n\t\timg.onload = _.bind(def.resolve, def, img);\n\t\timg.onerror = _.bind(def.reject, def, img);\n\t\timg.src = url;\n\t\treturn def.promise;\n\t}\n\n\treturn preloaderDecorator;\n});\n","define('utils/utils/utilsModule',['require','angular','underscore','./preloaderService','./preloaderDecorator'],function(require){\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\tvar module = angular.module('pi.utils',[]);\n\n\tmodule.service('piPreloader', require('./preloaderService'));\n\tmodule.config(['$provide', function($provide){\n\t\t$provide.decorator('piPreloader', require('./preloaderDecorator'));\n\t}]);\n\n\n\n\t/**\n\t * Wrapper for angular invoke.\n\t * Injects global and current automatically.\n\t *\n\t * @param {Function} fn The function to invoke\n\t * @param {Object} locals Locals to add to angualr invoke\n\t */\n\tmodule.service('piInvoke', ['$injector',function($injector){\n\t\tvar $rootScope = $injector.get('$rootScope');\n\n\t\tfunction piInvoke(fn, locals){\n\t\t\tvar global = $rootScope.global || {};\n\n\t\t\t// if fn is undefined don't get all mushy about it\n\t\t\tif (!fn){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$injector.invoke(fn, null, _.extend(locals, {\n\t\t\t\tglobal: global,\n\t\t\t\tcurrent: global.current\n\t\t\t}));\n\t\t}\n\n\t\treturn piInvoke;\n\t}]);\n\n\treturn module;\n});\n","define('quest/directives/buttons/buttons',['require','angular'],function(require){\n\tvar angular = require('angular');\n\treturn angular\n\n\t.module('ui.bootstrap.buttons', [])\n\n\t.constant('buttonConfig', {\n\t\tactiveClass: 'active',\n\t\ttoggleEvent: 'click'\n\t})\n\n\t.controller('ButtonsController', ['buttonConfig', function(buttonConfig) {\n\t\tthis.activeClass = buttonConfig.activeClass || 'active';\n\t\tthis.toggleEvent = buttonConfig.toggleEvent || 'click';\n\t}])\n\n\t.directive('btnRadio', function () {\n\t\treturn {\n\t\t\trequire: ['btnRadio', 'ngModel'],\n\t\t\tcontroller: 'ButtonsController',\n\t\t\tlink: function (scope, element, attrs, ctrls) {\n\t\t\t\tvar buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n\t\t\t\t//model -> UI\n\t\t\t\tngModelCtrl.$render = function () {\n\t\t\t\t\telement.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n\t\t\t\t};\n\n\t\t\t\t//ui->model\n\t\t\t\telement.bind(buttonsCtrl.toggleEvent, function () {\n\t\t\t\t\tvar isActive = element.hasClass(buttonsCtrl.activeClass);\n\n\t\t\t\t\tif (!isActive || angular.isDefined(attrs.uncheckable)) {\n\t\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\t\tngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.btnRadio));\n\t\t\t\t\t\t\tngModelCtrl.$render();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})\n\n\t.directive('btnCheckbox', function () {\n\t\treturn {\n\t\t\trequire: ['btnCheckbox', 'ngModel'],\n\t\t\tcontroller: 'ButtonsController',\n\t\t\tlink: function (scope, element, attrs, ctrls) {\n\t\t\t\tvar buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n\t\t\t\tfunction getTrueValue() {\n\t\t\t\t\treturn getCheckboxValue(attrs.btnCheckboxTrue, true);\n\t\t\t\t}\n\n\t\t\t\tfunction getFalseValue() {\n\t\t\t\t\treturn getCheckboxValue(attrs.btnCheckboxFalse, false);\n\t\t\t\t}\n\n\t\t\t\tfunction getCheckboxValue(attributeValue, defaultValue) {\n\t\t\t\t\tvar val = scope.$eval(attributeValue);\n\t\t\t\t\treturn angular.isDefined(val) ? val : defaultValue;\n\t\t\t\t}\n\n\t\t\t\t//model -> UI\n\t\t\t\tngModelCtrl.$render = function () {\n\t\t\t\t\telement.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n\t\t\t\t};\n\n\t\t\t\t//ui->model\n\t\t\t\telement.bind(buttonsCtrl.toggleEvent, function () {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n\t\t\t\t\t\tngModelCtrl.$render();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n});\n","define('utils/database/template/templateFilter',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttemplateFilter.$inject = ['$log','templateDefaultContext'];\n\tfunction templateFilter($log, defaultContext){\n\n\t\tfunction template(input, context){\n\n\t\t\t// if there is no template just return the string\n\t\t\tif (!~input.indexOf('<%')){\n\t\t\t\treturn input;\n\t\t\t}\n\n\t\t\t// build context (extend it with the default context)\n\t\t\tcontext = _.extend(context || {}, defaultContext);\n\n\t\t\t// filters don't throw errors when used from within templates\n\t\t\t// therefore we need catch any errors here... (we may decide to drop this if it hits performance too mutch...)\n\t\t\ttry{\n\t\t\t\treturn _.template(input)(context);\n\t\t\t} catch(e){\n\t\t\t\t$log.error(\"ERROR: \\\"\" + e.message + \"\\\" in the following template: \", input);\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t}\n\n\t\treturn template;\n\n\t}\n\n\treturn templateFilter;\n});\n","define('utils/database/template/templateObjProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttemplateObjProvider.$inject = ['$filter'];\n\tfunction templateObjProvider($filter){\n\t\tvar filter = $filter('template');\n\n\t\tfunction templateObj(obj, context, options){\n\t\t\toptions || (options = {});\n\t\t\tvar deepTemplate = obj.deepTemplate;\n\n\t\t\t_.forEach(obj, function(value,key,obj){\n\t\t\t\tobj[key] = expand(value, context, {deep: _.includes(deepTemplate, key)});\n\t\t\t});\n\n\t\t\treturn obj;\n\t\t}\n\n\t\treturn templateObj;\n\n\t\tfunction expand(value, context, options){\n\t\t\tvar deep = options && options.deep;\n\n\t\t\tif (_.isString(value)){\n\t\t\t\treturn filter(value, context);\n\t\t\t}\n\n\t\t\tif (deep && _.isArray(value)){\n\t\t\t\treturn _.map(value, _.bind(expand, null, _, context, options));\n\t\t\t}\n\n\t\t\tif (deep && _.isPlainObject(value)){\n\t\t\t\treturn _.mapValues(value, _.bind(expand, null, _, context, options));\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t}\n\n\n\treturn templateObjProvider;\n});\n","define('utils/database/template/templateModule',['require','angular','./templateFilter','./templateObjProvider'],function(require){\n\tvar angular = require('angular');\n\n\tvar module = angular.module('template', []);\n\n\tmodule.filter('template', require('./templateFilter'));\n\tmodule.service('templateObj', require('./templateObjProvider'));\n\tmodule.constant('templateDefaultContext',{});\n\n\treturn module;\n});\n","/**\n * A factory for $console\n *\n * each $console is prototyped on `consolePrototype`\n */\ndefine('utils/console/consoleProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tconsoleProvider.$inject = ['piConsolePrototype'];\n\n\tfunction consoleProvider(consolePrototype){\n\n\t\t// decorate Console with a simple settings manager\n\t\tConsole.setSettings = consoleSetSettings;\n\n\t\treturn Console;\n\n\t\tfunction Console(tags, force){\n\t\t\tvar $console = _.create(consolePrototype);\n\n\t\t\t_.extend($console, {\n\t\t\t\ttags: _.isArray(tags) ? tags : [tags], // make sure tags is an array\n\t\t\t\tforce: !!force\n\t\t\t});\n\n\t\t\treturn $console;\n\t\t}\n\n\t\t// a mehtod of console\n\t\tfunction consoleSetSettings (settings) {\n\t\t\tconsolePrototype.settings = settings;\n\t\t}\n\n\t}\n\n\treturn consoleProvider;\n});\n","/**\n * This is our $console object.\n * It is a bit weird as it is supposed to work in concert with the consoleProvider.\n *\n * it depends on `tags` {Array} and `force` {Boolean} to be set externaly.\n *\n * {\n * \t\tlog: logFn\n * \t\tinfo: infoFn\n * \t\tshouldLog: fn that test whether as specific level should be logged\n * \t\tsettings: settingsObj ==> to be set from piConsole\n * \t\ttags: ['tag1'] // to be compared to settings.tags ==> to be set from piConsole\n * \t\tforce: false // ignore tags and level ==> to be set from piConsole\n * }\n */\ndefine('utils/console/consolePrototypeProvider',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\tvar LOGFUNCTIONS = ['log', 'info', 'warn', 'error', 'debug'];\n\tvar LEVELS = {none:9, error:1, warn:2, info:3, log:4, debug:4};\n\n\tconsolePrototypeProvider.$inject = ['$log', '$rootScope'];\n\tfunction consolePrototypeProvider ($log, $rootScope) {\n\t\t/**\n\t\t * Create the prototype for the instances of piConsole\n\t\t */\n\t\tvar consolePrototype = {};\n\n\t\t// add logging function\n\t\t_.each(LOGFUNCTIONS, function(level){\n\t\t\tconsolePrototype[level] = createLog(level);\n\t\t});\n\n\t\t// default settings\n\t\tconsolePrototype.settings = {};\n\n\t\t// the function that checks if this instance\n\t\tconsolePrototype.shouldLog = shouldLog;\n\n\t\t// if we want the individual functions to be seperable sometime...\n\t\t//_.bindAll(consolePrototype);\n\n\t\treturn consolePrototype;\n\n\t\t/**\n\t\t * This function is a method of the consolePrototype.\n\t\t * It accesses the global settings, and the definitions set by Console and returns whether we should log\n\t\t *\n\t\t * @param  {String} level \tThe level of logging we are testing\n\t\t * @return {Boolean}\t\tWhether to log this or not\n\t\t */\n\t\tfunction shouldLog(level){\n\t\t\tvar targetLevel = this.settings.level || 'error'; // levels set to show\n\t\t\tvar targetTags = this.settings.tags || 'all'; // tags set to show\n\t\t\tvar tags = this.tags;\n\t\t\tvar force = this.force;\n\n\t\t\tif (force){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check if this level should *not* be logged\n\t\t\tif (!~_.indexOf(LOGFUNCTIONS, targetLevel)){\n\t\t\t\tthis.settings.level = 'error';\n\t\t\t\tthis.error('Unknow DEBUG level: \"' + targetLevel + '\". The valid levels are debug>info>warn>error>none');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (LEVELS[level] > LEVELS[targetLevel]){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// check if these tags should be logged (fit targetTags)\n\t\t\tif (targetTags !== 'all' && !_.intersection(tags, _.isArray(targetTags) ? targetTags : [targetTags]).length){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// if we were not regected, this should be logged\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * Builds the log functions for consolePrototype\n\t\t * @param  {String} level \tLevel name\n\t\t * @return {Function}       A logging function\n\t\t */\n\t\tfunction createLog (level) {\n\t\t\treturn function(){\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar i, args = [];\n\n\t\t\t\tif (this.shouldLog(level)){\n\t\t\t\t\t// get arguments (so that we don't leak the arguments object)\n\t\t\t\t\tfor (i=0; i < arguments.length; i++){args[i] = arguments[i];}\n\n\t\t\t\t\t// do the actual logging\n\t\t\t\t\t$log[level].apply(null, args);\n\n\t\t\t\t\tif (settings.hideConsole){return;}\n\n\t\t\t\t\t// broadcast to the piConsole directive\n\t\t\t\t\t$rootScope.$emit('console:log',{\n\t\t\t\t\t\ttime: new Date(),\n\t\t\t\t\t\ttype: level,\n\t\t\t\t\t\targs: args,\n\t\t\t\t\t\ttags: this.tags\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\treturn consolePrototypeProvider;\n\n});\n","\ndefine('text!utils/console/console.html',[],function () { return '<div>\\n\\t<div\\n\\t\\tng-repeat=\"log in logs | orderBy:\\'time\\':true\"\\n\\t\\tclass=\"alert\"\\n\\t\\tng-class=\"{\\n\\t\\t\\t\\'alert-warning\\':log.type == \\'warn\\',\\n\\t\\t\\t\\'alert-danger\\':log.type == \\'error\\',\\n\\t\\t\\t\\'alert-info\\':log.type == \\'info\\',\\n\\t\\t\\t\\'alert-success\\':log.type == \\'log\\',\\n\\t\\t\\t\\'alert-success\\':log.type == \\'debug\\'\\n\\n\\t\\t}\"\\n\\t\\trole=\"alert\"\\n\\t>\\n\\t\\t<button ng-click=\"remove(log)\" type=\"button\" class=\"close\" data-dismiss=\"alert\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n\\t\\t<strong>{{ log.type | uppercase}}:</strong> <i class=\"text-danger\">{{log.time | date : \\'HH:mm:ss:sss\\'}}</i> - <strong>{{log.tags.join(\\' \\')}}</strong>:</br>\\n\\t\\t<span\\n\\t\\t\\tng-repeat=\"arg in log.args track by $index\"\\n\\t\\t\\tng-click=\"pre = !pre\"\\n\\t\\t\\tng-class=\"{pre:pre}\"\\n\\t\\t\\tng-bind-html=\"arg | stringify:pre\"\\n\\t\\t></span>\\n\\n\\t</div>\\n</div>';});\n\n","define('utils/console/consoleDirective',['require','text!./console.html','underscore'],function (require) {\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./console.html');\n\tvar _ = require('underscore');\n\n\tdirective.$inject = ['$rootScope'];\n\tfunction directive($rootScope){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\tlink: function(scope) {\n\t\t\t\tvar logs = scope.logs = [];\n\n\t\t\t\tscope.remove = remove;\n\t\t\t\tscope.reverse = true;\n\n\t\t\t\t$rootScope.$on('console:log', function(scope, log){\n\t\t\t\t\tlogs.push(log);\n\t\t\t\t});\n\n\t\t\t\tfunction remove(log){\n\t\t\t\t\tvar index = _.indexOf(logs, log);\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tlogs.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('utils/console/consoleModule',['require','angular','./consoleProvider','./consolePrototypeProvider','./consoleDirective'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('piConsole',[]);\n\n\tmodule.service('piConsole', require('./consoleProvider'));\n\tmodule.service('piConsolePrototype', require('./consolePrototypeProvider'));\n\tmodule.directive('piConsole', require('./consoleDirective'));\n\n\tmodule.filter('stringify', function(){\n\t\treturn stringify;\n\t});\n\n\treturn module;\n\n\tfunction stringify(value, pretty) {\n\t\tif (value == null) { // null || undefined\n\t\t\treturn '<i class=\"text-muted\">undefined</i>';\n\t\t}\n\t\tif (value === '') {\n\t\t\treturn '<i class=\"text-muted\">an empty string</i>';\n\t\t}\n\n\t\tswitch (typeof value) {\n\t\t\tcase 'string':\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\t\tvalue = '' + value;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\t// display the error message not the full thing...\n\t\t\t\tif (value instanceof Error){\n\t\t\t\t\tvalue = value.message;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tvalue = '<a href=\"javascript:void(0)\">' + angular.toJson(value, !!pretty) + '</a>';\n\t\t}\n\n\t\treturn value;\n\t}\n});\n\n\n\n","\ndefine('text!utils/modal/modal.html',[],function () { return '<div class=\"modal in\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\\n\\t<div class=\"modal-dialog\">\\n\\t\\t<div class=\"modal-content\">\\n\\t\\t\\t<div class=\"modal-header\" ng-ifs=\"header\">\\n\\t\\t\\t\\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\\n\\t\\t\\t\\t<h4 class=\"modal-title\" id=\"myModalLabel\">{{ header || \"Heads Up!\" }}</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"modal-body\">{{body}}</div>\\n\\t\\t\\t<div class=\"modal-footer\">\\n\\t\\t\\t\\t<button type=\"button\" class=\"btn btn-default\" ng-click=\"close()\">{{button || \"Close\"}}</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>';});\n\n","define('utils/modal/modalService',['require','underscore','text!./modal.html','angular'],function(require){\n\n\tvar _ = require('underscore');\n\tvar template = require('text!./modal.html');\n\n\tvar angular = require('angular');\n\n\tmodalConstructor.$inject = ['$rootScope', '$rootElement', '$compile', '$q', '$document'];\n\tfunction modalConstructor($rootScope, $rootElement, $compile, $q, $document){\n\t\tvar $element, $scope, deferred;\n\t\tvar $backDrop = angular.element('<div class=\"modal-backdrop in\"/>');\n\n\t\tthis.open = modalOpener;\n\t\tthis.close = modalCleanup;\n\n\t\tfunction modalCleanup(){\n\t\t\tif ($element){\n\t\t\t\t$element.remove();\n\t\t\t}\n\n\t\t\tif ($scope){\n\t\t\t\t$scope.$destroy();\n\t\t\t}\n\n\t\t\tif (deferred){\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\n\t\t\t$backDrop.remove();\n\t\t\t$document.off('keydown', modalCleanup);\n\t\t\t$rootElement.removeClass('modal-open');\n\t\t}\n\n\t\tfunction modalOpener(options){\n\t\t\tvar context = options.context || {};\n\n\t\t\t// close any existing modals\n\t\t\tmodalCleanup();\n\n\t\t\t// create deferred\n\t\t\tdeferred = $q.defer();\n\n\t\t\t// create new scope\n\t\t\t$scope = (options.$scope || $rootScope).$new();\n\t\t\t// set up scope methods\n\t\t\t$scope.close = modalCleanup;\n\t\t\t$document.on('keydown', modalCleanup);\n\n\n\t\t\t// set scope texts + template\n\t\t\t$scope.header = _.template(options.header)(context);\n\t\t\t$scope.body = _.template(options.body)(context);\n\t\t\t$scope.button = _.template(options.button)(context);\n\n\t\t\t// create new element\n\t\t\t$element = angular.element(template);\n\t\t\t$rootElement.addClass('modal-open');\n\n\t\t\t// compile and activate\n\t\t\t$rootElement.prepend($backDrop);\n\t\t\t$rootElement.prepend($element);\n\t\t\t$compile($element.contents())($scope);\n\t\t\t$scope.$digest();\n\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\tfunction onEsc(e){\n\t\t\tvar which = e.which || e.keyCode;\n\n\t\t\tif(which == 27) {\n\t\t\t\t$document.one('keydown', skipListener);\n\t        }\n\n\t\t}\n\t}\n\n\treturn modalConstructor;\n\n});\n","define('utils/modal/modalModule',['require','angular','./modalService'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.modal',[]);\n\n\tmodule.service('piModal', require('./modalService'));\n\n\treturn module;\n});\n","/**\n * This is the default controller for all questions.\n * It exposes the local scope, and a `value` method that the harvester can use.\n */\n\ndefine('quest/directives/questController',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tquestController.$inject = ['$scope', 'timerStopper', '$parse', '$attrs','piConsole', 'piInvoke', '$rootScope'];\n\tfunction questController($scope, Stopper, $parse, $attr, piConsole, invoke, $rootScope){\n\t\tvar self = this;\n\t\tvar log;\n\t\tvar data;\n\t\tvar defaults = {\n\t\t\tdflt: NaN,\n\t\t\tdata: $scope.data\n\t\t};\n\n\t\tthis.scope = $scope;\n\t\tthis.stopper = new Stopper();\n\n\n\t\tthis.registerModel = registerModel;\n\n\t\t/**\n\t\t * Listen for quest events\n\t\t */\n\t\t$scope.$on('quest:submit', function(event){\n\t\t\tevent.preventDefault();\n\t\t\tlog.declined = undefined;\n\t\t\tlog.submitLatency = self.stopper.now();\n\t\t\tinvoke(data.onSubmit, {log:log});\n\t\t});\n\n\t\t$scope.$on('quest:decline', function(event){\n\t\t\tevent.preventDefault();\n\t\t\tlog.declined = true;\n\t\t\tlog.submitLatency = self.stopper.now();\n\t\t\tinvoke(data.onDecline, {log:log});\n\t\t});\n\n\t\t$scope.$on('quest:timeout', function(event){\n\t\t\tevent.preventDefault();\n\t\t\tlog.timeout = true;\n\t\t\tinvoke(data.onTimeout, {log:log});\n\t\t});\n\n\n\t\t/**\n\t\t * Get the model and options from the directive\n\t\t * @param  {Object} ngModel\n\t\t * @param  {Object} options\n\t\t */\n\t\tfunction registerModel(ngModel, options){\n\t\t\toptions = _.defaults(options || {}, defaults);\n\t\t\tdata = options.data;\n\n\t\t\tvar ngModelGet = $parse($attr.ngModel);\n\t\t\tvar dfltValue = data.hasOwnProperty('dflt') ? data.dflt : options.dflt;\n\n\t\t\t// make model accesable from within scope\n\t\t\t$scope.model = ngModel;\n\n\t\t\t// has to be evaluated in the context of the parent scope because we're assuming that the quest directives have an isolated scope\n\t\t\tlog = ngModelGet($scope.$parent);\n\n\t\t\t// init log\n\t\t\t// ********\n\t\t\t// create log if it doesn't exist yet\n\t\t\tif (_.isUndefined(log)){\n\t\t\t\tlog = {};\n\t\t\t\tngModelGet.assign($scope.$parent, log);\n\t\t\t} else {\n\t\t\t\tpiConsole(['question']).warn('This question has already been in use: \"' + log.name + '\"');\n\t\t\t}\n\n\t\t\t// expose all the stuff...\n\t\t\tself.log = ngModel.$modelValue = log;\n\n\t\t\t_.defaults(log,{\n\t\t\t\tname: data.name,\n\t\t\t\tresponse: dfltValue,\n\t\t\t\t// @TODO: this is a bit fragile and primitive.\n\t\t\t\t// besides, who says this is where \"current\" will be...\n\t\t\t\t// we should probably create a unique ID service of some sort...\n\t\t\t\t// maybe just grab it off of rootscope\n\t\t\t\tserial: _.size($rootScope.current && $rootScope.current.questions)\n\t\t\t});\n\n\t\t\t$scope.response = ngModel.$viewValue = log.response;\n\n\t\t\t// model --> view\n\t\t\t// should probably never be called (since our model is an object and not a primitive)\n\t\t\tngModel.$formatters.push(function(modelValue) {\n\t\t\t\treturn modelValue.response;\n\t\t\t});\n\n\t\t\t// view --> model\n\t\t\tngModel.$parsers.push(function(viewValue){\n\t\t\t\t// don't know exactly why this is needed!\n\t\t\t\t// probably has to do with our use of nested ng-module\n\t\t\t\tif (_.isUndefined(viewValue)){\n\t\t\t\t\treturn log;\n\t\t\t\t}\n\t\t\t\tvar latency = self.stopper.now();\n\n\t\t\t\tlog.response = viewValue;\n\t\t\t\tlog.latency = latency;\n\n\t\t\t\t// if this is the first change\n\t\t\t\tif (!log.pristineLatency){\n\t\t\t\t\tlog.pristineLatency = latency;\n\t\t\t\t}\n\n\t\t\t\treturn log;\n\t\t\t});\n\n\t\t\t$scope.$watch('response',function(newValue, oldValue /*, scope*/){\n\t\t\t\tif (!_.isEqual(newValue, oldValue)){\n\t\t\t\t//if (newValue !== oldValue){\n\t\t\t\t\tngModel.$setViewValue(newValue);\n\t\t\t\t\tinvoke(data.onChange, {log:log});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.$on('$destroy', function(){\n\t\t\t\tinvoke(data.onDestroy, {log:log});\n\t\t\t});\n\n\t\t\tif (data.correct) {\n\t\t\t\tngModel.$parsers.push(correctValidator);\n\t\t\t\tdata.response = correctValidator(this.log);\n\t\t\t}\n\n\t\t\tinvoke(data.onCreate, {log:log});\n\n\t\t\tfunction correctValidator(value) {\n\t\t\t\tvar response = value.response;\n\t\t\t\tvar correctValue = data.correctValue;\n\n\t\t\t\t// make sure numbers are always treated as strings\n\t\t\t\t_.isNumber(correctValue) && (correctValue+=\"\");\n\t\t\t\t_.isNumber(response) && (response+=\"\");\n\n\t\t\t\tif (_.isEqual(correctValue, response)) {\n\t\t\t\t\tngModel.$setValidity('correct', true);\n\t\t\t\t} else {\n\t\t\t\t\tngModel.$setValidity('correct', false);\n\t\t\t\t\t//value.response = dfltValue;\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t}\n\t}\n\n\treturn questController;\n});\n","\ndefine('text!quest/directives/piQuest/piQuest.html',[],function () { return '<div piq-page ng-module=\"page\"></div>';});\n\n","/**\n * Main tag for piQuest component.\n * All you need in order to use it is set a script in the $rootScope and insert the tag.\n *\n * This directive is responsible for:\n *\t\t1. Creating the task object.\n *\t\t2. Relaying pages from the sequence to piqPage.\n *\t\t3. For now, deal with the end of a task (redirect, callback, broadcast etc. - later this should move into the task)\n *\n * @name piQuest\n\t*/\ndefine('quest/directives/piQuest/piQuest-directive',['require','underscore','text!./piQuest.html','angular'],function (require) {\n\tvar _ = require('underscore');\n\tvar template = require('text!./piQuest.html');\n\tvar jqLite = require('angular').element;\n\n\tpiQuestCtrl.$inject = ['$scope','$rootScope','Task','templateDefaultContext', 'mixerDefaultContext'];\n\tfunction piQuestCtrl($scope, $rootScope, Task, templateDefaultContext, mixerDefaultContext){\n\t\tvar self = this;\n\t\tvar task = self.task = new Task($scope.script);\n\t\tvar defaultContext; // for templates and the mixer\n\t\tvar global = $rootScope.global; // setup in app.run\n\t\tvar current = $rootScope.current || {}; // setup in taskDirective\n\n\t\tcurrent.questions = {};\n\n\t\t// create default context\n\t\tdefaultContext = {\n\t\t\tglobal: global,\n\t\t\tcurrent: current,\n\t\t\tquestions: current.questions\n\t\t};\n\n\t\t// set default contexts\n\t\t_.extend(templateDefaultContext,defaultContext);\n\t\t_.extend(mixerDefaultContext,defaultContext);\n\n\t\t// setup the first page\n\t\ttask.next();\n\n\t\t$scope.$on('quest:next', next);\n\t\t$scope.$on('quest:prev', prev);\n\n\t\t$scope.$on('quest:log', function(event, log, pageData){\n\t\t\ttask.log(log, pageData, $scope.global);\n\t\t});\n\n\t\tfunction next(event, target){\n\t\t\ttask.next(target);\n\t\t\t$scope.$emit('quest:newPage');\n\t\t}\n\n\t\tfunction prev(event, target){\n\t\t\ttask.prev(target);\n\t\t\t$scope.$emit('quest:newPage');\n\t\t}\n\n\t}\n\n\tdirective.$inject = ['$compile', '$animate','$injector','piConsole'];\n\tfunction directive($compile, $animate, $injector, piConsole){\n\t\treturn {\n\t\t\tcontroller: piQuestCtrl,\n\t\t\tterminal:true,\n\t\t\tpriority: 500,\n\t\t\tlink: function(scope, parentElement, attr, ctrl) {\n\t\t\t\tvar task = ctrl.task,\n\t\t\t\t\tcurrentScope,\n\t\t\t\t\tcurrentElement,\n\t\t\t\t\tpreviousElement;\n\n\t\t\t\tscope.$on('quest:refresh', refresh); // just refresh the object\n\t\t\t\tscope.$on('quest:newPage', newPage); // new element, new object and animation\n\t\t\t\tnewPage();\n\n\t\t\t\tfunction cleanupLastPage() {\n\t\t\t\t\tif(previousElement) {\n\t\t\t\t\t\tpreviousElement.remove();\n\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentScope) {\n\t\t\t\t\t\tcurrentScope.$destroy();\n\t\t\t\t\t\tcurrentScope = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentElement) {\n\t\t\t\t\t\t$animate.leave(currentElement, function() {\n\t\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpreviousElement = currentElement;\n\t\t\t\t\t\tcurrentElement = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction newPage(){\n\t\t\t\t\tvar page = task.current();\n\n\t\t\t\t\tif (page){\n\t\t\t\t\t\tvar newScope = scope.$new();\n\t\t\t\t\t\tvar tempElm = jqLite(template); // create a new element here so we can add the animation classes before linking\n\n\t\t\t\t\t\tnewScope.page = page;\n\t\t\t\t\t\taddAnimations(tempElm, page.animate);\n\n\t\t\t\t\t\t// first send away the previous element (if it exists)\n\t\t\t\t\t\tcleanupLastPage();\n\n\t\t\t\t\t\t// enter: new element\n\t\t\t\t\t\tcurrentElement = $compile(tempElm)(newScope);\n\n\t\t\t\t\t\t$animate.enter(currentElement, parentElement);\n\n\t\t\t\t\t\tcurrentScope = newScope;\n\t\t\t\t\t\tcurrentScope.$emit('quest:updated');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcleanupLastPage();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction refresh(){\n\t\t\t\t\tcurrentScope.page = task.current();\n\t\t\t\t}\n\n\t\t\t\tfunction addAnimations(element, animationsStr){\n\t\t\t\t\tif (!animationsStr){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar animations = animationsStr.split(\" \");\n\n\t\t\t\t\t_.each(animations, function(animation){\n\t\t\t\t\t\t// Make sure that this animation exists\n\t\t\t\t\t\tif (!$injector.has(\".\" + animation + '-animation')){\n\t\t\t\t\t\t\tpiConsole(['page','animation']).error('Unknown animation type: \"' + animation + '\"');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\telement.addClass(animationsStr);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/piQuest/piqPage.html',[],function () { return '<div ng-form name=\"pageForm\" pi-timer>\\n\\t<div pi-timer=\"page.timer\"></div>\\n\\t<div ng-if=\"page.progressBar\" class=\"text-center\" ng-bind-html=\"page.progressBar\"></div>\\n\\t<h3 ng-if=\"page.header\" ng-bind-html=\"page.header\" ng-style=\"page.headerStyle\"></h3>\\n\\t<div ng-bind-html=\"page.text\"></div>\\n\\t<ol ng-class=\"{\\'list-unstyled\\':!page.numbered}\" start=\"{{page.numberStart}}\">\\n\\t\\t<li ng-repeat=\"quest in page.questions\">\\n\\t\\t\\t<div quest-wrapper quest-data=\"quest\" quest-current=\"current\"></div>\\n\\t\\t</li>\\n\\t</ol>\\n\\n\\t<div class=\"pull-right\" ng-class=\"{\\'btn-group\\': !page.v1style, \\'btn-toolbar\\': page.v1style}\">\\n\\t\\t<button\\n\\t\\t\\tng-click=\"prev()\"\\n\\t\\t\\tdata-role=\"submit\"\\n\\t\\t\\tclass=\"btn\"\\n\\t\\t\\tng-if=\"page.prev && page.$meta.number > 1\"\\n\\t\\t>{{page.prevText || \"Go Back\"}}</button>\\n\\n\\t\\t<button\\n\\t\\t\\tng-click=\"submit()\"\\n\\t\\t\\tdata-role=\"submit\"\\n\\t\\t\\tclass=\"btn btn-primary\"\\n\\t\\t\\tng-if=\"!page.noSubmit\"\\n\\t\\t>{{page.submitText || \"Submit\"}}</button>\\n\\n\\t\\t<button\\n\\t\\t\\tng-click=\"decline($event)\"\\n\\t\\t\\tdata-role=\"submit\"\\n\\t\\t\\tclass=\"btn btn-warning\"\\n\\t\\t\\tng-class=\"{\\'btn-active-accented\\':page.v1style}\"\\n\\t\\t\\tng-if=\"page.decline\"\\n\\t\\t>{{page.declineText || \"Decline to Answer\"}}</button>\\n\\t</div>\\n</div>';});\n\n","/**\n * Main tag for piqPage component.\n * Used automaticaly from within the piQuest directive.\n *\n * This directive is responsible for:\n * 1. Displaying page questions.\n * 2. Detecting the end of a page (submit, TO).\n * 3. Harvesting information from the questions.\n * 4. Suplying information to the logger.\n *\n * @name piqPage\n  */\ndefine('quest/directives/piQuest/piqPage-directive',['require','text!./piqPage.html','underscore','angular'],function (require) {\n\tvar template = require('text!./piqPage.html');\n\tvar _ = require('underscore');\n\tvar angular = require('angular');\n\n\tpiqPageCtrl.$inject = ['$scope','$timeout', '$rootScope', 'piModal'];\n\tfunction piqPageCtrl($scope,$timeout, $rootScope, piModal){\n\t\tvar self = this;\n\n\t\t$scope.global = $rootScope.global;\n\t\t$scope.current = $rootScope.current;\n\n\t\t/**\n\t\t * Harvest piqPage questions, and log them.\n\t\t * by default logging is deferred to the end (so that we can go back to questions...)\n\t\t * This can be changed by setting lognow to true (page.lognow)\n\t\t */\n\t\tthis.harvest = function(lognow){\n\t\t\tvar questions = $scope.current.questions;\n\n\t\t\t_.each($scope.page.questions, function(q){\n\t\t\t\t// don't log if we don't have a name or if lognow is'nt true\n\t\t\t\tif (!q.name || !(lognow || q.lognow)){return;}\n\n\t\t\t\t// get the appropriate log object\n\t\t\t\tvar log = questions[q.name];\n\n\t\t\t\t// don't log if this has already been logged\n\t\t\t\tif (log.$logged){return;}\n\n\t\t\t\t// emit to quest directive\n\t\t\t\t$scope.$emit('quest:log', log, self.log);\n\t\t\t\tlog.$logged = true;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Proceed to next page.\n\t\t *\n\t\t * @name submit\n\t\t * @param  {Boolean} skipValidation [Should skip validation of the form before submitting?]\n\t\t */\n\t\t$scope.submit = function(skipValidation){\n\t\t\tvar valid = $scope.pageForm.$valid;\n\n\t\t\t// mark this attempt for submitting\n\t\t\t// useful for validation...\n\t\t\t$scope.submitAttempt = true;\n\n\t\t\tif (!valid && skipValidation !== true){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// broadcast to the quest controller\n\t\t\t// so that it can set submit latency\n\t\t\t$scope.$broadcast('quest:submit');\n\n\t\t\tself.proceed();\n\n\t\t\t// emit to the piQuest directive so that it knows to advance to the next page\n\t\t\t$scope.$emit('quest:next');\n\t\t};\n\n\t\t/**\n\t\t * Decline to answer. mark all questions on this page as declined\n\t\t */\n\t\t$scope.decline = function($event){\n\t\t\tvar $el = angular.element($event.target);\n\t\t\tvar notDoubleClick = (this.page.decline !== 'double');\n\n\t\t\t// decline and proceed to next page\n\t\t\t// unless this is a double style decline and then simply set \"active\".\n\t\t\tif (notDoubleClick || $el.hasClass('active')){\n\t\t\t\t// broadcast to the quest controller (so that it marks logs as declined and marks decline time)\n\t\t\t\t$scope.$broadcast('quest:decline');\n\t\t\t\tself.proceed();\n\t\t\t\t$scope.$emit('quest:next');\n\t\t\t} else {\n\t\t\t\t$el.addClass('active');\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Go back to previous page.\n\t\t */\n\t\t$scope.prev = function(){\n\t\t\t// broadcast to the quest controller\n\t\t\tself.proceed();\n\t\t\t$scope.$broadcast('quest:prev');\n\t\t};\n\n\n\t\t/**\n\t\t * Wraps up page setup\n\t\t * Closes timer stuff.\n\t\t * Harvests if needed.\n\t\t */\n\t\tthis.proceed = function(){\n\n\t\t\t// remove timeout if needed\n\t\t\tself.timer.stop();\n\n\t\t\t// by default, harvest after every page..\n\t\t\tself.harvest($scope.page.lognow);\n\t\t};\n\n\t\tthis.setup = pageSetup;\n\n\t\t// refresh page on question change (deep watch)\n\t\t// should refresh this directive without animating the whole page in...\n\t\t$scope.$watch('current.questions', pageRefresh, true);\n\n\t\t// listen for auto submit calls (from textDirective etc.)\n\t\t$scope.$on('quest:submit:now', function(){\n\t\t\t$scope.submit();\n\t\t});\n\n\t\t// refresh $scope.page\n\t\t// indirectly triggers pageSetup\n\t\tfunction pageRefresh(){\n\t\t\t$scope.$emit('quest:refresh');\n\t\t}\n\n\t\tfunction pageSetup(timer){\n\t\t\tvar newPage = $scope.page;\n\t\t\tself.timer = timer;\n\n\t\t\t// set the page log object\n\t\t\tself.log = {\n\t\t\t\tname: newPage.name,\n\t\t\t\tstartTime: +new Date()\n\t\t\t};\n\n\t\t\t// If there is a timeout set, submit when it runs out.\n\t\t\tif (newPage.timer){\n\t\t\t\ttimer.start(newPage.timer);\n\t\t\t\ttimer.getScope().$on('timer-end', timerEnd);\n\t\t\t}\n\n\t\t\tfunction timerEnd(){\n\t\t\t\tvar message = newPage.timer.message; // timer must be defined to get here...\n\t\t\t\tvar context;\n\t\t\t\t// mark logs as timeout\n\t\t\t\tself.log.timeout = true;\n\t\t\t\t$scope.$broadcast('quest:timeout');\n\n\t\t\t\t// proceed\n\t\t\t\tif (message){\n\t\t\t\t\t// create context for message tempates\n\t\t\t\t\tcontext = {\n\t\t\t\t\t\tpagesMeta: newPage.$meta,\n\t\t\t\t\t\tpagesData: newPage.data,\n\t\t\t\t\t\tglobal: $rootScope.global,\n\t\t\t\t\t\tcurrent: $rootScope.current\n\t\t\t\t\t};\n\n\t\t\t\t\t// create message object out of string\n\t\t\t\t\t_.isString(message) && (message = {body: message});\n\n\t\t\t\t\t// extend message object with scope and context\n\t\t\t\t\t_.defaults(message, {\n\t\t\t\t\t\theader: 'Timer Done',\n\t\t\t\t\t\t$context: context,\n\t\t\t\t\t\t$scope: $scope\n\t\t\t\t\t});\n\n\t\t\t\t\t// activate message and only then proceed\n\t\t\t\t\tpiModal.open(message).then(timerProceed);\n\t\t\t\t} else {\n\t\t\t\t\t// if there is no messgae proceed imidiately\n\t\t\t\t\ttimerProceed();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction timerProceed(){\n\t\t\t\tvar submit = newPage.timer.submitOnEnd || _.isUndefined(newPage.timer.submitOnEnd);\n\t\t\t\tsubmit && $scope.submit(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction directive(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\tcontroller: piqPageCtrl,\n\t\t\ttemplate:template,\n\t\t\trequire: ['piqPage','piTimer'],\n\t\t\tlink: function($scope, $el, $attr, $ctrl){\n\t\t\t\t$ctrl[0].setup($ctrl[1]);\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/wrapper/wrapper.html',[],function () { return '<div class=\"form-group\">\\n\\t<label ng-hide=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<div ng-bind-html=\"data.description\"></div>\\n\\t<div quest-data=\"data\" ng-model=\"current.questions[data.name]\" ng-style=\"{\\'max-width\\':data.maxWidth}\"></div>\\n\\t<p class=\"help-block\" ng-if=\"data.help\" ng-bind-html=\"data.helpText\"></p>\\n</div>';});\n\n","/*\n * The directive for creating the generic question layout (stub, surrounding etc.).\n */\ndefine('quest/directives/wrapper/wrapper-directive',['require','text!./wrapper.html','underscore'],function (require) {\n\n\tvar PREFIX = 'quest';\n\tvar template = require('text!./wrapper.html');\n\tvar _ = require('underscore');\n\n\tfunction capitaliseFirstLetter(string){\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\n\t}\n\n\tdirective.$inject = ['$compile', '$injector'];\n\tfunction directive($compile, $injector){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\tpriority: 5, // Allows the wrapper to use the same scope as the questions\n\t\t\tscope:{\n\t\t\t\tdata: '=questData',\n\t\t\t\tcurrent: '=questCurrent'\n\t\t\t},\n\t\t\tlink: function(scope,element) {\n\t\t\t\tvar type = scope.data.type || 'text';\n\t\t\t\tvar questElement = element.children().eq(2);\n\t\t\t\tvar attrName = PREFIX + capitaliseFirstLetter(type);\n\n\t\t\t\t// Make sure that this directive exists\n\t\t\t\tif (!$injector.has(attrName + 'Directive')){\n\t\t\t\t\tthrow new Error ('Unknown question type: \"' + type + '\"');\n\t\t\t\t}\n\n\t\t\t\t// snake case the attr name\n\t\t\t\tattrName = _.kebabCase(attrName);\n\n\t\t\t\t// add the appropriate attribute to the directive and compile it\n\t\t\t\tquestElement.attr(attrName,true);\n\t\t\t\t$compile(questElement)(scope);\n\t\t\t}\n\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/text/text.html',[],function () { return '<div ng-form ng-class=\"{\\'form-inline\\':data.inline}\">\\n\\t<label ng-show=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<input\\n\\t \\ttype=\"text\"\\n\\t\\tng-model=\"response\"\\n\\t\\tng-minlength=\"{{data.minLength || data.minlength}}\"\\n\\t\\tng-maxlength=\"{{data.maxlength}}\"\\n\\t\\tng-pattern=\"data.pattern | toRegex\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t\\tclass=\"form-control\"\\n\\t\\tng-attr-style=\"width:{{data.width | dfltUnits}}\"\\n\\n\\t\\tng-keydown=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t\\tng-keyup=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t/>\\n\\t<div pi-quest-validation=\"form.$error.minlength\">{{data.errorMsg.minLength || data.errorMsg.minlength || \"Too short!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.maxlength\">{{data.errorMsg.maxlength || \"Too long!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.pattern\">{{data.errorMsg.pattern || \"wrong pattern!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","\ndefine('text!quest/directives/text/textarea.html',[],function () { return '<div ng-form ng-class=\"{\\'form-inline\\':data.inline}\">\\n\\t<label ng-show=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<textarea\\n\\t \\ttype=\"text\"\\n\\t\\tng-model=\"response\"\\n\\t\\tng-minlength=\"{{data.minLength || data.minlength}}\"\\n\\t\\tng-maxlength=\"{{data.maxlength}}\"\\n\\t\\tng-pattern=\"data.pattern | toRegex\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t\\tclass=\"form-control\"\\n\\n\\t\\tng-attr-style=\"resize:none;width:{{data.columns? \\'auto\\' : data.width | dfltUnits}};\"\\n\\t\\tcols=\"{{data.columns}}\"\\n\\t\\trows=\"{{data.rows}}\"\\n\\n\\t\\tng-keydown=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t\\tng-keyup=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t/>\\n\\t<div pi-quest-validation=\"form.$error.minlength\">{{data.errorMsg.minLength || data.errorMsg.minlength || \"Too short!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.maxlength\">{{data.errorMsg.maxlength || \"Too long!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.pattern\">{{data.errorMsg.pattern || \"wrong pattern!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating text inputs.\n */\ndefine('quest/directives/text/textDirective',['require','text!./text.html','text!./textarea.html','angular'],function (require) {\n\t// This is the only way to get a non js file relatively\n\tvar textTemplate = require('text!./text.html');\n\tvar textareaTemplate = require('text!./textarea.html');\n\tvar angular = require('angular');\n\n\tfunction textDirective(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate: function(el,attr){\n\t\t\t\treturn 'questText' in attr ? textTemplate : textareaTemplate;\n\t\t\t},\n\t\t\trequire: ['form', 'ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar form = ctrls[0];\n\t\t\t\tvar ngModel = ctrls[1];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tscope.form = form;\n\t\t\t\tscope.maxlengthLimit = maxlengthLimit;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: \"\"\n\t\t\t\t});\n\n\t\t\t\tdata.autoSubmit && element.bind(\"keydown keypress\", function (event) {\n\t\t\t\t\tif(event.which === 13) {\n\t\t\t\t\t\tscope.$apply(function(){\n\t\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// limit the length of the input string\n\t\t\t\t// essentially a formatter for the input ngModel\n\t\t\t\tfunction maxlengthLimit($event){\n\t\t\t\t\tvar $input = angular.element($event.target);\n\t\t\t\t\tvar response = $input.val();\n\t\t\t\t\tvar limit = data.maxlength || response.length; // in case maxlength isn't defined...\n\t\t\t\t\t// update the scope\n\t\t\t\t\tscope.response = response.slice(0,limit);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn textDirective;\n});\n","\ndefine('text!quest/directives/text/text-number.html',[],function () { return '<div ng-form ng-class=\"{\\'form-inline\\':data.inline}\">\\n\\t<label ng-show=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<input\\n\\t \\ttype=\"number\"\\n\\t\\tng-model=\"response\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t\\tclass=\"form-control\"\\n\\t\\tng-attr-style=\"width:{{data.width | dfltUnits}}\"\\n\\t>\\n\\t<div pi-quest-validation=\"form.$error.number\">{{data.errorMsg.number || \"Must be a number!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.qstMin\">{{data.errorMsg.min || \"Too small!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.qstMax\">{{data.errorMsg.max || \"Too big!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","\n/*\n * The directive for creating textNumber inputs.\n */\ndefine('quest/directives/text/text-number-directive',['require','text!./text-number.html'],function (require) {\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./text-number.html');\n\n\tvar directive = function(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: ['form', 'ngModel', '^?piqPage'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\n\t\t\t\tvar form = ctrls[0];\n\t\t\t\tvar input = element.find('input');\n\t\t\t\tvar ngModel = input.eq(0).controller('ngModel');\n\n\t\t\t\tscope.form = form;\n\n\t\t\t\tscope.ctrl.registerModel(ctrls[1], {\n\t\t\t\t\tdflt: \"\"\n\t\t\t\t});\n\n\t\t\t\tscope.data.autoSubmit && element.bind(\"keydown keypress\", function (event) {\n\t\t\t\t\tif(event.which === 13) {\n\t\t\t\t\t\tscope.$apply(function(){\n\t\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// we have a specific problem with min max that don't take internal\n\t\t\t\t// http://stackoverflow.com/questions/15656617/validation-not-triggered-when-data-binding-a-number-inputs-min-max-attributes\n\t\t\t\tvar minValidator = function(value) {\n\t\t\t\t\tvar min = parseFloat(scope.data.min);\n\t\t\t\t\tif (!isNaN(min) && value < min) {\n\t\t\t\t\t\tngModel.$setValidity('qstMin', false);\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tngModel.$setValidity('qstMin', true);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tngModel.$parsers.push(minValidator);\n\t\t\t\tngModel.$formatters.push(minValidator);\n\n\t\t\t\tvar maxValidator = function(value) {\n\t\t\t\t\tvar max = parseFloat(scope.data.max);\n\t\t\t\t\tif (!isNaN(max) && value > max) {\n\t\t\t\t\t\tngModel.$setValidity('qstMax', false);\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tngModel.$setValidity('qstMax', true);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tngModel.$parsers.push(maxValidator);\n\t\t\t\tngModel.$formatters.push(maxValidator);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn directive;\n});\n","define('quest/directives/select/selectMixerProvider',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tselectMixerProvider.$inject = ['randomizeShuffle', 'mixerRecursive'];\n\tfunction selectMixerProvider(shuffle, mixer){\n\n\t\tfunction selectMixer(answersArr, options){\n\t\t\tvar answers = mixer(answersArr);\n\n\t\t\t// inject values\n\t\t\tanswers = _.map(answers, function(answer, index){\n\n\t\t\t\tif (!_.isPlainObject(answer)){\n\t\t\t\t\tanswer = {text:answer};\n\t\t\t\t}\n\n\t\t\t\tif (_.isUndefined(answer.value)){\n\t\t\t\t\tanswer.value = options.numericValues ? index + 1 : answer.text;\n\t\t\t\t}\n\t\t\t\treturn answer;\n\t\t\t});\n\n\t\t\tif (options.reverse){\n\t\t\t\tanswers = _(answers).reverse().value();\n\t\t\t}\n\n\t\t\tif (options.randomize){\n\t\t\t\tanswers = shuffle(answers);\n\t\t\t}\n\n\t\t\t_.each(answers, function(answer,index){\n\t\t\t\tanswer.order = index;\n\t\t\t});\n\n\t\t\treturn answers;\n\t\t}\n\n\t\treturn selectMixer;\n\t}\n\n\treturn selectMixerProvider;\n});\n","\ndefine('text!quest/directives/select/dropdown.html',[],function () { return '<div ng-form>\\n\\t<select\\n\\t\\tng-model=\"response\"\\n\\t\\tng-options=\"answer.value as answer.text group by answer.group for answer in quest.answers\"\\n\\t\\tng-required=\"data.required\"\\n\\t\\tng-change=\"data.autoSubmit && autoSubmit($event)\"\\n\\t\\tclass=\"form-control\"\\n\\t\\t>\\n\\t\\t<option value=\"\">{{chooseText || \"-- Choose an option --\"}}</option>\\n\\t</select>\\n\\t<div pi-quest-validation=\"model.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating dropdown inputs.\n * scope.response is the value of the chosen response\n */\ndefine('quest/directives/select/dropdownDirective',['require','text!./dropdown.html'],function (require) {\n\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./dropdown.html');\n\n\tdirective.$inject = ['questSelectMixer','$timeout'];\n\tfunction directive(mixer,$timeout){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: ['ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: NaN\n\t\t\t\t});\n\n\t\t\t\t// render quest if needed\n\t\t\t\tscope.quest = {\n\t\t\t\t\tanswers: mixer(scope.data.answers || [], scope.data)\n\t\t\t\t};\n\n\t\t\t\t// createChooseText\n\t\t\t\tscope.chooseText = \"chooseText\" in scope.data && scope.data.chooseText;\n\n\t\t\t\t/**\n\t\t\t\t * Manage auto submit\n\t\t\t\t */\n\t\t\t\tscope.autoSubmit = function(){\n\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/select/selectOne.html',[],function () { return '<div>\\n\\t<div ng-class=\"listClass\" ng-style=\"listCss\">\\n\\t\\t<!-- track by in the ng-repeat allows us to keep the repeated object clean so that angular doesn\\'t add a $$hashkey property -->\\n\\t\\t<!-- using interpolation within class, so that we can keep the style info separate within the directive -->\\n\\t\\t<a\\n\\t\\t\\ttabindex=\"-1\"\\n\\t\\t\\tng-repeat=\"answer in quest.answers track by answer.order\"\\n\\t\\t\\tng-model=\"$parent.responseObj\"\\n\\t\\t\\tbtn-radio=\"answer\"\\n\\t\\t\\tng-class=\"$parent.listItemClass\"\\n\\t\\t\\tng-style=\"listItemCss\"\\n\\t\\t\\tclass=\"{{ $parent.response == answer.value ? \\'active\\' : \\'\\' }}\"\\n\\t\\t\\tuncheckable\\n\\t\\t\\tng-click=\"data.autoSubmit && autoSubmit($event)\"\\n\\t\\t\\tng-bind-html=\"answer.text\"\\n\\t\\t\\tunselectable=\"on\"\\n\\t\\t></a>\\n\\t</div>\\n\\t<div pi-quest-validation=\"model.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating selectOne inputs.\n *\n * scope.response is the value of the chosen response\n * scope.responseObj is the full answer object or undefined\n */\ndefine('quest/directives/select/selectOneDirective',['require','angular','underscore','text!./selectOne.html'],function (require) {\n\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\tvar template = require('text!./selectOne.html');\n\n\tdirective.$inject = ['questSelectMixer', 'buttonConfig', '$compile'];\n\tfunction directive(mixer, buttonConfig, $compile){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\trequire: ['ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\t// compile the template (this is currently the only way to use a scope dependent template)\n\t\t\t\telement.html(template);\n\t\t\t\t$compile(element.contents())(scope);\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: NaN\n\t\t\t\t});\n\n\t\t\t\t// render quest if needed\n\t\t\t\tscope.quest = {\n\t\t\t\t\tanswers: mixer(scope.data.answers || [], scope.data)\n\t\t\t\t};\n\n\t\t\t\t// update controller with the response\n\t\t\t\tscope.$watch('responseObj',function(newValue, oldValue){\n\t\t\t\t\tif (newValue === oldValue){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.response = newValue && newValue.value;\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Required\n\t\t\t\t * Since we don't control the ngModel element any more we need to manually create a required validation\n\t\t\t\t * we don't implement $observe since in our case required is static\n\t\t\t\t */\n\n\t\t\t\tif (scope.data.required){\n\t\t\t\t\tngModel.$formatters.push(requiredValidator);\n\t\t\t\t\tngModel.$parsers.unshift(requiredValidator);\n\t\t\t\t\trequiredValidator(scope.response); // check validity at the begining - without need for change...\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Compute list styles\n\t\t\t\t */\n\n\t\t\t\t// back support for \"buttons\"\n\t\t\t\t// @DEPRICATED\n\t\t\t\tif (scope.data.buttons){\n\t\t\t\t\tscope.data.style = 'horizontal';\n\t\t\t\t} else {\n\t\t\t\t\tscope.data.style == 'horizontal' && (scope.data.buttons = true);\n\t\t\t\t}\n\n\t\t\t\t// some specific css added to the list\n\t\t\t\tscope.listCss = {};\n\t\t\t\tscope.listItemCss = {};\n\n\t\t\t\tswitch (data.style){\n\t\t\t\t\tcase 'horizontal' :\n\t\t\t\t\t\tscope.listClass = 'btn-group btn-group-justified btn-group-lg';\n\t\t\t\t\t\tscope.listItemClass = 'btn btn-select';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'multiButtons':\n\t\t\t\t\t\tscope.listClass = 'btn-toolbar';\n\t\t\t\t\t\tscope.listItemClass = 'btn  btn-select';\n\t\t\t\t\t\tscope.listCss.lineHeight = 2.8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'list':\n\t\t\t\t\t\t/* fall through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscope.listClass = 'list-group';\n\t\t\t\t\t\tscope.listItemClass = 'list-group-item';\n\t\t\t\t}\n\n\t\t\t\tdata.minWidth && (scope.listItemCss.minWidth = data.minWidth);\n\n\t\t\t\t/**\n\t\t\t\t * Manage auto submit\n\t\t\t\t * @param  {event} e [description]\n\t\t\t\t */\n\t\t\t\tscope.autoSubmit = function(e){\n\t\t\t\t\tif (!scope.data.autoSubmit){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isActive = angular.element(e.target).hasClass(buttonConfig.activeClass);\n\n\t\t\t\t\tif (isActive){\n\t\t\t\t\t\t// this whole function happens within a digest cycle, so we don't need to $apply\n\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction requiredValidator(value){\n\t\t\t\t\tvar ctrl = ngModel;\n\t\t\t\t\tif (ctrl.$isEmpty(value)) {\n\t\t\t\t\t\tctrl.$setValidity('required', false);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctrl.$setValidity('required', true);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/select/selectMulti.html',[],function () { return '<div required=\"{{data.required}}\">\\n\\t<div ng-class=\"listClass\" ng-style=\"listCss\">\\n\\t\\t<!-- track by in the ng-repeat allows us to keep the repeated object clean so that angular doesn\\'t add a $$hashkey property -->\\n\\t\\t<a\\n\\t\\t\\thref=\"javascript:void(0);\"\\n\\t\\t\\tng-repeat=\"answer in quest.answers track by answer.order\"\\n\\t\\t\\tng-model=\"answer.chosen\"\\n\\t\\t\\tbtn-checkbox\\n\\t\\t\\tng-class=\"$parent.listItemClass\"\\n\\t\\t\\tng-style=\"listItemCss\"\\n\\t\\t\\tclass=\"{{ answer.chosen ? \\'active\\' : \\'\\' }}\"\\n\\t\\t\\tuncheckable\\n\\t\\t\\tng-bind-html=\"answer.text\"\\n\\t\\t\\tunselectable=\"on\"\\n\\t\\t>\\n\\t\\t</a>\\n\\t</div>\\n\\t<div pi-quest-validation=\"model.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating selectMulti inputs.\n */\ndefine('quest/directives/select/selectMultiDirective',['require','underscore','text!./selectMulti.html'],function (require) {\n\tvar _ = require('underscore');\n\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./selectMulti.html');\n\n\tdirective.$inject = ['questSelectMixer'];\n\tfunction directive(mixer){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: ['^?piqPage', 'ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar ngModel = ctrls[1];\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: []\n\t\t\t\t});\n\n\t\t\t\tngModel.$isEmpty = function(){\n\t\t\t\t\treturn _.isEmpty(ngModel.$viewValue);\n\t\t\t\t};\n\n\t\t\t\t// render questions\n\t\t\t\tscope.quest = {\n\t\t\t\t\tanswers: mixer(scope.data.answers || [], scope.data)\n\t\t\t\t};\n\n\t\t\t\t// mark the chosen questions\n\t\t\t\t_.each(scope.quest.answers, function(answer){\n\t\t\t\t\t// mark it chosen if\n\t\t\t\t\tif (~_.indexOf(scope.response, answer.value)){\n\t\t\t\t\t\tanswer.chosen = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Compute list styles\n\t\t\t\t */\n\n\t\t\t\t// back support for \"buttons\"\n\t\t\t\t// @DEPRICATED\n\t\t\t\tif (scope.data.buttons){\n\t\t\t\t\tscope.data.style = 'horizontal';\n\t\t\t\t} else {\n\t\t\t\t\tscope.data.style == 'horizontal' && (scope.data.buttons = true);\n\t\t\t\t}\n\n\t\t\t\t// some specific css added to the list\n\t\t\t\tscope.listCss = {};\n\t\t\t\tscope.listItemCss = {};\n\n\t\t\t\tswitch (data.style){\n\t\t\t\t\tcase 'horizontal' :\n\t\t\t\t\t\tscope.listClass = 'btn-group btn-group-justified btn-group-lg';\n\t\t\t\t\t\tscope.listItemClass = 'btn btn-select';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'multiButtons':\n\t\t\t\t\t\tscope.listClass = 'btn-toolbar';\n\t\t\t\t\t\tscope.listItemClass = 'btn  btn-select';\n\t\t\t\t\t\tscope.listCss.lineHeight = 2.8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'list':\n\t\t\t\t\t\t/* fall through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscope.listClass = 'list-group';\n\t\t\t\t\t\tscope.listItemClass = 'list-group-item';\n\t\t\t\t}\n\n\t\t\t\tdata.minWidth && (scope.listItemCss.minWidth = data.minWidth);\n\n\n\t\t\t\t// update controller with the response\n\t\t\t\tscope.$watch('quest.answers',function(newValue, oldValue){\n\t\t\t\t\tif (newValue === oldValue){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// get chosen answers\n\t\t\t\t\tscope.response = _(newValue)\n\t\t\t\t\t\t.filter(function(answer){return answer.chosen;})\n\t\t\t\t\t\t.pluck('value')\n\t\t\t\t\t\t.value();\n\t\t\t\t},true); // deep watch\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/grid/grid.html',[],function () { return '<div ng-form class=\"table-responsive\" ng-class=\"{\\'pi-page-submitted\\':$parent.$parent.submitAttempt}\">\\n\\t<table class=\"table table-hover\">\\n\\t\\t<thead ng-if=\"!data.columnStemHide\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th ng-style=\"data.columnStemCss\"></th>\\n\\t\\t\\t\\t<th\\n\\t\\t\\t\\t\\tng-repeat=\"column in columns\"\\n\\t\\t\\t\\t\\tng-bind-html=\"column.stem\"\\n\\t\\t\\t\\t\\tng-style=\"data.columnStemCss\"\\n\\t\\t\\t\\t></th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr\\n\\t\\t\\t\\tng-repeat=\"row in rows\"\\n\\t\\t\\t\\tquest-grid-row=\"row\"\\n\\t\\t\\t\\tquest-grid-data=\"data\"\\n\\t\\t\\t\\tng-model=\"$parent.$parent.current.questions[row.name]\"\\n\\t\\t\\t\\tng-required=\"{{data.required || row.required}}\"\\n\\t\\t\\t></tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n</div>';});\n\n","define('quest/directives/grid/gridDirective',['require','underscore','text!./grid.html'],function (require) {\n\tvar _ = require('underscore');\n\n\tgridDirective.$inject = ['questShuffle'];\n\tfunction gridDirective(shuffle){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate: require('text!./grid.html'),\n\t\t\trequire: ['ngModel','form'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData',\n\t\t\t\tcurrent: '=questCurrent'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tscope.form = ctrls[1];\n\n\t\t\t\tscope.columns = mapColumns(data.columns);\n\t\t\t\tscope.rows = mapRows(data.rows, data);\n\n\t\t\t\tscope.$watchCollection(function getResponses(){\n\t\t\t\t\treturn _.pluck(scope.rows, '$response');\n\t\t\t\t}, function sumResponses(responses){\n\t\t\t\t\tscope.response = _.reduce(responses, function(total, response) {\n\t\t\t\t\t\treturn _.isFinite(response) ? total + response : total;\n\t\t\t\t\t},0);\n\t\t\t\t});\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: 0\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\n\t\tfunction mapColumns(columns){\n\t\t\treturn _(columns || [])\n\t\t\t\t.map(objectify)\n\t\t\t\t.each(function setType(column){\n\t\t\t\t\tcolumn.hasOwnProperty('type') || (column.type = 'checkbox');\n\t\t\t\t})\n\t\t\t\t.tap(function setValues(columns){\n\t\t\t\t\t_(columns)\n\t\t\t\t\t\t.filter(function hasValue(column){return column.type != 'text';})\n\t\t\t\t\t\t.each(function setValue(column, index){\n\t\t\t\t\t\t\tcolumn.hasOwnProperty('value') || (column.value = index+1);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.commit();\n\t\t\t\t})\n\t\t\t\t.tap(function setReverseValues(columns){\n\t\t\t\t\t_(columns)\n\t\t\t\t\t\t.filter(function(column){return !column.noReverse;}) // ignore columns that shouldn't be reveresed\n\t\t\t\t\t\t.filter(function hasValue(column){return column.type != 'text';})\n\t\t\t\t\t\t.each(function(column, index, columns){\n\t\t\t\t\t\t\tcolumn.reverseValue = columns[columns.length - index - 1].value; // set the value from the mirroring column\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.commit(); // activate chain, since we aren't using _.value here\n\t\t\t\t})\n\t\t\t\t.value();\n\t\t}\n\n\t\tfunction mapRows(rows, data){\n\t\t\treturn _(rows || [])\n\t\t\t\t.map(objectify)\n\t\t\t\t.each(function setRowName(row, index){\n\t\t\t\t\trow.hasOwnProperty('name') || (row.name = data.name + zerofill(index+1,3));\n\t\t\t\t})\n\t\t\t\t.thru(data.shuffle ? shuffle : _.identity)\n\t\t\t\t.value();\n\t\t}\n\n\t\tfunction objectify(target){\n\t\t\treturn _.isPlainObject(target) ? target : {stem:target};\n\t\t}\n\n\t\t/**\n\t\t * Zero fills a number\n\t\t * http://stackoverflow.com/questions/1267283/how-can-i-create-a-zerofilled-value-using-javascript\n\t\t *\n\t\t * WARNING!! fails if n===0\n\t\t *\n\t\t * @param  {Number} n The number to zerofill\n\t\t * @param  {Number} w The width of the fill\n\t\t * @return {String}   Zerofilled number\n\t\t */\n\t\tfunction zerofill(n, w) {\n\t\t\tvar an = Math.abs(n);\n\t\t\tvar digitCount = 1 + Math.floor(Math.log(an) / Math.LN10);\n\t\t\tif (digitCount >= w) {\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tvar zeroString = Math.pow(10, w - digitCount).toString().substr(1);\n\t\t\treturn n < 0 ? '-' + zeroString + an : zeroString + an;\n\t\t}\n\t}\n\n\treturn gridDirective;\n});\n","\ndefine('text!quest/directives/grid/gridRow.html',[],function () { return '<tr>\\n\\t<th\\n\\t\\tscope=\"row\"\\n\\t\\tng-if=\"!data.rowStemHide\"\\n\\t\\tng-bind-html=\"row.stem\"\\n\\t\\tng-style=\"data.rowStemCss\"\\n\\t></th>\\n\\t<td ng-repeat=\"column in $parent.columns\">\\n\\t\\t<div ng-switch=\"column.type\">\\n\\t\\t\\t<button\\n\\t\\t\\t\\tng-switch-when=\"checkbox\"\\n\\t\\t\\t\\tbtn-radio=\"row.reverse && !column.noReverse ? column.reverseValue : column.value\"\\n\\t\\t\\t\\tng-model=\"$parent.$parent.response\"\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\n\\t\\t\\t\\tuncheckable\\n\\t\\t\\t></button>\\n\\t\\t\\t<div\\n\\t\\t\\t\\tclass=\"text\"\\n\\t\\t\\t\\tng-switch-when=\"text\"\\n\\t\\t\\t\\tng-bind-html=\"row[column.textProperty]\"\\n\\t\\t\\t></div>\\n\\t\\t</div>\\n\\t\\t<div\\n\\t\\t\\tclass=\"cell-labels\"\\n\\t\\t\\tng-if=\"data.cellLabels\"\\n\\t\\t\\tng-bind-html=\"column.stem\"\\n\\t\\t></div>\\n\\t</td>\\n</tr>';});\n\n","define('quest/directives/grid/gridRowDirective',['require','text!./gridRow.html'],function (require) {\n\tfunction gridRowDirective(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate: require('text!./gridRow.html'),\n\t\t\trequire: ['ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope: {\n\t\t\t\trow: '=questGridRow',\n\t\t\t\tdata: '=questGridData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\n\t\t\t\tscope.model = ngModel;\n\n\t\t\t\t// keep row updated with response so that we can watch it from the grid directive\n\t\t\t\tscope.$watch('response', function(newVal){\n\t\t\t\t\tscope.row.$response = newVal;\n\t\t\t\t});\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdata: scope.row\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\treturn gridRowDirective;\n});\n","\ndefine('text!quest/directives/slider/slider.html',[],function () { return '<div ng-form>\\n\\t<div\\n\\t\\tpi-slider\\n\\t\\tng-model=\"response\"\\n\\t\\tpi-slider-options=\"data\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t></div>\\n\\t<h4 ng-if=\"data.displayValue\" class=\"text-center\"><span class=\"label label-info\">{{ response | number }}</span></h4>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n</div>';});\n\n","define('quest/directives/slider/sliderDirective',['require','underscore','text!./slider.html'],function(require){\n\n\tvar _ = require('underscore');\n\t_;\n\n\n\tsliderDirective.$inject = [];\n\tfunction sliderDirective(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate: require('text!./slider.html'),\n\t\t\trequire: ['form', 'ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar form = ctrls[0];\n\t\t\t\tvar ngModel = ctrls[1];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tscope.form = form;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: undefined\n\t\t\t\t});\n\n\t\t\t\tdata.autoSubmit && scope.$on('slider:change', function(){\n\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\t}\n\n\treturn sliderDirective;\n});\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define('quest/directives/slider/slider',[], factory);\n    } else {\n        var app = angular.module('pi', []);\n        app.directive('piSlider', factory(root.angular));\n    }\n}(this, function () {\n  var SLIDER_CHANGE_EVENT = 'slider:change';\n\n  sliderDirective.$inject = [\"$document\", \"$sce\"];\n  function sliderDirective($document) {\n    return {\n      scope: {\n        options: '=piSliderOptions'\n      },\n      replace: true,\n      require: 'ngModel',\n      template: ['<div class=\"slider\" ng-mousedown=\"onSliderMouseDown($event)\">',\n            '<div class=\"slider-label-left\">{{options.leftLabel}}</div>',\n            '<div class=\"slider-label-right\">{{options.rightLabel}}</div>',\n            '<div class=\"slider-container\">',\n              '<div class=\"slider-bar\">',\n                '<div class=\"slider-bar-highlight\" ng-style=\"highlightStyle\"></div>',\n              '</div>',\n              '<div class=\"slider-handle\" ng-mousedown=\"onHandleMousedown($event)\" ng-style=\"handleStyle\"></div>',\n            '</div>',\n            '<ul class=\"slider-pips\" ng-if=\"!options.hidePips\">',\n                '<li ng-repeat=\"i in getNumber(steps) track by $index\" ng-style=\"{width: pipWidth + \\'%\\'}\" ng-class=\"{last:$last}\"></li>',\n            '</ul>',\n            '<ul class=\"slider-labels\">',\n                '<li ng-repeat=\"label in labels track by $index\" ng-style=\"{width: labelsWidth + \\'%\\'}\" ng-class=\"{first:$first, last:$last}\">{{label}}</li>',\n            '</ul>',\n          '</div>'].join('\\n'),\n\n      link: function(scope, element, attr, ngModel) {\n        var sliderHandleWidth;\n        var options = scope.options || {};\n\n        sliderHandleWidth = element[0].querySelector('.slider-handle').clientWidth;\n\n        scope.ngModel = ngModel;\n\n        scope.min = options.min || 0;\n        scope.max = options.max || (scope.min + 100);\n        scope.range = scope.max - scope.min;\n\n        scope.steps = options.steps ? options.steps - 1 : 0;\n        scope.pipWidth = options.steps && 100/scope.steps;\n\n        scope.labels = options.labels;\n        scope.labelsWidth = options.labels && 100 / options.labels.length;\n\n        ngModel.$isEmpty = isEmpty;\n        ngModel.$render = renderView;\n        ngModel.$formatters.push(toPercentage);\n        ngModel.$parsers.push(fromPercentage);\n\n        scope.onHandleMousedown = onHandleMousedown;\n        scope.onSliderMouseDown = onSliderMouseDown;\n\n        // helper for ngRepeat\n        // http://stackoverflow.com/questions/16824853/way-to-ng-repeat-defined-number-of-times-instead-of-repeating-over-array\n        scope.getNumber = function getNumber(num){return new Array(num);};\n\n        function setValue(percentage){\n          ngModel.$setViewValue(percentage);\n          ngModel.$render();\n        }\n\n        // limit percenatge by step size\n        function steppedPercentage(percentage){\n          if (!scope.steps || ngModel.$isEmpty(percentage)){\n            return percentage;\n          }\n\n          return Math.round(percentage * scope.steps) / scope.steps;\n        }\n\n        // manage placing the handle as well as the highlight correctly\n        function renderView() {\n          var percentage = steppedPercentage(ngModel.$viewValue);\n          var showHandle = !isNaN(percentage);\n          var handleDisplay = showHandle ? 'block' : 'none';\n          var highlightDisplay = showHandle && options.highlight ? 'block' : 'none';\n          scope.highlightStyle = { right: (100 - percentage * 100) + '%', display: highlightDisplay};\n          scope.handleStyle = { left: (percentage * 100) + '%', display: handleDisplay};\n        }\n\n        // formater model => view\n        function toPercentage(modelValue){\n          // if this isn't a number we can't compute percentage...\n          if (ngModel.$isEmpty(modelValue)){\n            return NaN;\n          }\n\n          // limit model size\n          modelValue = Math.min(Math.max(modelValue, scope.min), scope.max);\n          return (modelValue - scope.min) / scope.range;\n        }\n\n        // parser view => model\n        function fromPercentage(percentage){\n          return +(scope.min + (steppedPercentage(percentage) * scope.range)).toFixed(4);\n        }\n\n        // handle drag\n        function onHandleMousedown(event) {\n          fixEvent(event);\n          var basePercentage, basePosition;\n          event.preventDefault();\n          event.stopPropagation(); // prevent propogation to slider so that change is fired for the beginin of a drag interaction\n          basePosition = event.pageX;\n          basePercentage = ngModel.$viewValue;\n\n          $document.on('mousemove', mouseMove);\n          $document.on('mouseup', mouseUp);\n\n          // drag\n          function mouseMove(event) {\n            fixEvent(event);\n            event.preventDefault();\n            var percentage = basePercentage + (event.pageX - basePosition) / (element.prop('clientWidth') - sliderHandleWidth);\n            // don't allow extending beyond slider size\n            percentage = Math.min(percentage, 1);\n            percentage = Math.max(percentage, 0);\n\n            scope.$apply(function(){\n              setValue(percentage);\n            });\n          }\n\n          // drop\n          function mouseUp() {\n            $document.off('mousemove', mouseMove);\n            $document.off('mouseup', mouseUp);\n            scope.$emit(SLIDER_CHANGE_EVENT, ngModel.$viewValue); // emit only on mouse drop\n          }\n        }\n\n        // slider click\n        function onSliderMouseDown(event){\n          fixEvent(event);\n          event.preventDefault();\n          var sliderWidth = element.prop('clientWidth');\n          var sliderPosition = element[0].getBoundingClientRect().left;\n          var percentage = (event.pageX - sliderPosition - sliderHandleWidth/2) / (sliderWidth - sliderHandleWidth);\n          // don't allow extending beyond slider size\n          percentage = Math.min(percentage, 1);\n          percentage = Math.max(percentage, 0);\n\n          // auto \"$apply\" by ng-mousedown\n          setValue(percentage);\n          scope.$emit(SLIDER_CHANGE_EVENT, ngModel.$viewValue);\n        }\n\n\n      }\n    };\n  }\n\n  return sliderDirective;\n\n  // fix IE8 events (missing pageX) - from jquery\n  function fixEvent(event){\n    var eventDoc, doc, body;\n    // Calculate pageX/Y if missing and clientX/Y available\n    if ( event.pageX == null && event.clientX != null ) {\n      eventDoc = event.target.ownerDocument || document;\n      doc = eventDoc.documentElement;\n      body = eventDoc.body;\n\n      event.pageX = event.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n      event.pageY = event.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n    }\n  }\n\n  function isEmpty(n){\n    return isNaN(parseFloat(n)) || !isFinite(n);\n  }\n}));\n\n\n\n","define('quest/directives/toRegexFilter',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttoRegexFilter.$inject = ['piConsole'];\n\tfunction toRegexFilter($console){\n\t\treturn toRegex;\n\n\t\tfunction toRegex(value) {\n\t\t\tvar err;\n\n\t\t\tif (_.isUndefined(value)){\n\t\t\t\treturn /(?:)/;\n\t\t\t}\n\n\t\t\tif (_.isRegExp(value) || _.isString(value)){\n\t\t\t\treturn new RegExp(value);\n\t\t\t} else {\n\t\t\t\terr = new Error('Question pattern is not a valid regular expression');\n\t\t\t\t$console('text').error(err, value);\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn toRegexFilter;\n});\n","define('quest/directives/dfltUnitsFilter',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\treturn function(){\n\t\treturn dfltUnits;\n\t};\n\n\tfunction dfltUnits(value, unit) {\n\t\tvar suffix;\n\n\t\t// if value is empty (unless it equals 0)\n\t\tif (!value && value !== 0 && value !== '0'){\n\t\t\treturn '';\n\t\t}\n\n\t\tif (isNumeric(value)){\n\t\t\tsuffix = _.isUndefined(unit) ? 'px' : String(unit);\n\t\t\treturn value + suffix;\n\t\t}\n\t\treturn value;\n\t}\n\n\t// taken from jquery\n\tfunction isNumeric(obj){\n\t\treturn !_.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t}\n});\n","define('quest/directives/questDirectivesModule',['require','angular','underscore','utils/timer/timer-module','utils/utils/utilsModule','./buttons/buttons','utils/database/template/templateModule','utils/console/consoleModule','utils/modal/modalModule','./questController','./piQuest/piQuest-directive','./piQuest/piqPage-directive','./wrapper/wrapper-directive','./text/textDirective','./text/textDirective','./text/text-number-directive','./select/selectMixerProvider','./select/dropdownDirective','./select/selectOneDirective','./select/selectMultiDirective','./grid/gridDirective','./grid/gridRowDirective','./slider/sliderDirective','./slider/slider','./toRegexFilter','./dfltUnitsFilter'],function(require){\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\n\t// set modules that are requirements for the quest module\n\tvar module = angular.module('questDirectives',[\n\t\trequire('utils/timer/timer-module').name,\n\t\trequire('utils/utils/utilsModule').name,\n\t\trequire('./buttons/buttons').name,\n\t\trequire('utils/database/template/templateModule').name,\n\t\trequire('utils/console/consoleModule').name,\n\t\trequire('utils/modal/modalModule').name\n\t]);\n\n\tmodule.controller('questController', require('./questController'));\n\tmodule.directive('piQuest', require('./piQuest/piQuest-directive'));\n\tmodule.directive('piqPage', require('./piQuest/piqPage-directive'));\n\tmodule.directive('questWrapper', require('./wrapper/wrapper-directive'));\n\n\tmodule.directive('questText', require('./text/textDirective'));\n\tmodule.directive('questTextarea', require('./text/textDirective')); // uses the same directive as questText\n\tmodule.directive('questTextNumber', require('./text/text-number-directive'));\n\n\tmodule.service('questSelectMixer', require('./select/selectMixerProvider'));\n\tmodule.directive('questDropdown',require('./select/dropdownDirective'));\n\tmodule.directive('questSelectOne',require('./select/selectOneDirective'));\n\tmodule.directive('questSelectMulti',require('./select/selectMultiDirective'));\n\n\tmodule.value('questShuffle', _.shuffle); // we already have this in database but I don't want the directives to be too interdependant\n\tmodule.directive('questGrid', require('./grid/gridDirective'));\n\tmodule.directive('questGridRow', require('./grid/gridRowDirective'));\n\n\tmodule.directive('questSlider',require('./slider/sliderDirective'));\n\tmodule.directive('piSlider',require('./slider/slider'));\n\n\t// @TODO: move to utils or something\n\tmodule.config(['$sceProvider', function($sceProvider){\n\t\t$sceProvider.enabled(false);\n\t}]);\n\n\tmodule.directive('piQuestValidation', function(){\n\t\treturn {\n\t\t\treplace:true,\n\t\t\ttransclude: true,\n\t\t\tscope: {unvalid:'=piQuestValidation'},\n\t\t\ttemplate: [\n\t\t\t\t'<div class=\"alert alert-danger\" role=\"alert\" ng-show=\"unvalid\">',\n\t\t\t  \t\t'<span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>',\n\t\t\t  \t\t'<span ng-transclude></span>',\n\t\t\t\t'</div>'\n\t\t\t].join('')\n\t\t};\n\t});\n\n\t// filters\n\tmodule.filter('toRegex', require('./toRegexFilter'));\n\tmodule.filter('dfltUnits', require('./dfltUnitsFilter'));\n\n\n\treturn module;\n\n\n});\n\n","/*\n *\tThe logger Object\n *\tLogger(settings)\n *\t@param settings: the settings for this logger (defaults to the settings defined on loggerProvider.settings)\n *\tsettings = {\n *\t\tpulse: 34, // after how many objects should we post\n *\t\turl: '/my/url', // where should we post to\n *\t\tmeta: an object that extends each log\n  *\t}\n *\n *\tmethods:\n *\n *\tlog(obj) - add an object to the log stack\n *\t@param obj: any object that we want to log (as long as it is defined)\n *\n *\tsend() - send any remaining objects to the server\n *\n  */\ndefine('utils/logger/LoggerProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tloggerProvider.$inject = ['$http','$q', 'piConsole'];\n\tfunction loggerProvider($http, $q, piConsole){\n\t\tvar self = this;\n\n\t\tfunction Logger(dfltLogFn){\n\t\t\tthis.pending = [];\n\t\t\tthis.sent = [];\n\t\t\tthis.settings = {};\n\t\t\tthis.meta = {};\n\t\t\tthis.suppress = false; // don't suppress send\n\t\t\tthis.dfltLogFn = dfltLogFn || function(a){return a;};\n\t\t}\n\n\t\t_.extend(Logger.prototype, {\n\t\t\tlog: function(){\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar logObj = (settings.logFn || this.dfltLogFn).apply(settings, arguments);\n\n\t\t\t\tif (!_.isEmpty(this.meta) && !_.isPlainObject(logObj)){\n\t\t\t\t\tpiConsole(['logger']).debug(logObj);\n\t\t\t\t\tthrow new Error('Logger: in order to use \"meta\" the log must be an object.');\n\t\t\t\t}\n\n\t\t\t\t_.extend(logObj, this.meta);\n\n\t\t\t\t// if debug, then log this object\n\t\t\t\tpiConsole(['logger']).debug('Logged: ', logObj);\n\n\t\t\t\tthis.pending.push(logObj);\n\t\t\t\tself.logCounter++;\n\t\t\t\tif (settings.pulse && !this.suppress && this.pending.length >= settings.pulse){\n\t\t\t\t\tthis.send();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsend: function(){\n\t\t\t\tvar i;\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar sendData = this.pending;\n\t\t\t\tvar def = $q.defer();\n\n\t\t\t\t// if there are no records to send...\n\t\t\t\tif (sendData.length === 0){\n\t\t\t\t\tdef.resolve();\n\t\t\t\t\treturn def.promise;\n\t\t\t\t}\n\n\t\t\t\tif (_.isUndefined(settings.url)){\n\t\t\t\t\tpiConsole('logger').warn('The logger url is not set.');\n\t\t\t\t\tdef.resolve();\n\t\t\t\t\treturn def.promise;\n\t\t\t\t}\n\n\t\t\t\t// empty the pending stack\n\t\t\t\tthis.pending = [];\n\n\t\t\t\t$http.post(settings.url, sendData).then(success, error);\n\n\t\t\t\t// move everything pending to the sent stack\n\t\t\t\tfor (i = 0; i<sendData.length; i++){\n\t\t\t\t\tthis.sent.push(sendData[i]);\n\t\t\t\t}\n\n\t\t\t\treturn def.promise;\n\n\t\t\t\tfunction success(){\n\t\t\t\t\tdef.resolve();\n\t\t\t\t}\n\n\t\t\t\tfunction error(){\n\t\t\t\t\t// try again\n\t\t\t\t\treturn $http.post(settings.url, sendData).then(success, function(){\n\t\t\t\t\t\tpiConsole(['logger']).error('Failed to send data, it seems the backend is not responding. (sending to: \"' + settings.url +'\")');\n\t\t\t\t\t\tdef.reject();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * suppress pulse\n\t\t\t * sets suppress to `suppress`, or to true by default.\n\t\t\t */\n\t\t\tsuppressPulse: function (suppress) {\n\t\t\t\tthis.suppress = _.isUndefined(suppress) ? true : suppress;\n\t\t\t},\n\n\t\t\tgetCount: function(){\n\t\t\t\treturn self.logCounter;\n\t\t\t},\n\n\t\t\tsetSettings: function(settings){\n\t\t\t\tif (arguments.length === 0){\n\t\t\t\t\treturn this.settings;\n\t\t\t\t}\n\n\t\t\t\t// inherit settings both from settings obj, and the global settings\n\t\t\t\tthis.settings = _.defaults({}, settings, self.settings);\n\n\t\t\t\tif (!_.isUndefined(settings.meta) && !_.isPlainObject(settings.meta)){\n\t\t\t\t\tthrow new Error('Logger: \"meta\" must be an object.');\n\t\t\t\t}\n\n\t\t\t\t// inherit meta settings\n\t\t\t\tthis.meta = _.defaults({}, settings.meta, self.meta);\n\t\t\t}\n\t\t});\n\n\t\treturn Logger;\n\t}\n\n\treturn function(){\n\t\tthis.$get = loggerProvider;\n\t\tthis.settings = {};\n\t\tthis.meta = {};\n\t\tthis.logCounter = 0;\n\t};\n});\n","define('utils/logger/logger-module',['require','angular','./LoggerProvider','utils/console/consoleModule'],function(require){\n\tvar angular = require('angular');\n\tvar Logger = require('./LoggerProvider');\n\n\tvar module = angular.module('logger', [require('utils/console/consoleModule').name]);\n\tmodule.provider('Logger', Logger);\n\n\treturn module;\n});\n","/**\n * An assortment of useful randomization functions.\n * Good so we can easily mock them...\n */\ndefine('utils/database/randomize/randomizeModule',['require','angular','underscore'],function(require){\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\tvar module = angular.module('randomize', []);\n\n\t/**\n\t * Just plain random\n\t */\n\n\tmodule.value('randomizeRandom', Math.random);\n\n\t/**\n\t * Just lodash shuffle...\n\t */\n\tmodule.value('randomizeShuffle', _.shuffle);\n\n\t/*\n\t * a function that returns a random integer between 0 and length\n\t * @param length: the upper boundary to the randomization.\n\t */\n\tmodule.value('randomizeInt', function randomInt(length){\n\t\treturn Math.floor(Math.random()*length);\n\t});\n\n\t/**\n\t * a function that returns a random array of integers between 0 and length\n\t * @param length: the upper boundary to the randomization.\n\t */\n\tmodule.value('randomizeRange', function randomArr(length){\n\t\treturn _.shuffle(_.range(length));\n\t});\n\n\treturn module;\n});\n","define('utils/database/mixer/mixer',['underscore'],function(_){\n\n\t/**\n\t * A function that maps a mixer object into a sequence.\n\t *\n\t * The basic structure of such an obect is:\n\t * {\n\t *\t\tmixer: 'functionType',\n\t *\t\tremix : false,\n\t *\t\tdata: [task1, task2]\n\t *\t}\n\t *\n\t * The results of the mix are set into `$parsed` within the original mixer object.\n\t * if remix is true $parsed is returned instead of recomputing\n\t *\n\t * @param {Object} [obj] [a mixer object]\n\t * @returns {Array} [An array of mixed objects]\n\t */\n\n\tmixProvider.$inject = ['randomizeShuffle', 'randomizeRandom'];\n\tfunction mixProvider(shuffle, random){\n\n\t\tfunction mix(obj){\n\t\t\tvar mixerName = obj.mixer;\n\n\t\t\t// if this isn't a mixer\n\t\t\t// make sure we catch mixers that are set with undefined by accident...\n\t\t\tif (!(_.isPlainObject(obj) && 'mixer' in obj)){\n\t\t\t\treturn [obj];\n\t\t\t}\n\n\t\t\tif (_.isUndefined(mix.mixers[mixerName])){\n\t\t\t\tthrow new Error('Mixer: unknow mixer type = ' + mixerName);\n\t\t\t}\n\n\t\t\tif (!obj.remix && obj.$parsed) {\n\t\t\t\treturn obj.$parsed;\n\t\t\t}\n\n\t\t\tobj.$parsed = mix.mixers[mixerName].apply(null, arguments);\n\n\t\t\treturn obj.$parsed;\n\t\t}\n\n\t\tmix.mixers = {\n\t\t\twrapper : function(obj){\n\t\t\t\treturn obj.data;\n\t\t\t},\n\n\t\t\trepeat: function(obj){\n\t\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\t\tvar result = [], i;\n\t\t\t\t\tfor (i=0; i < obj.times; i++){\n\t\t\t\t\t\tresult = result.concat(_.clone(sequence,true));\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t// randomize any elements\n\t\t\trandom: function(obj, context){\n\n\t\t\t\tfunction randomDeepMixer(sequence){\n\t\t\t\t\treturn _.reduce(sequence, function(arr,value){\n\t\t\t\t\t\tif (_.isPlainObject(value) && 'mixer' in value && value.mixer != 'wrapper'){\n\t\t\t\t\t\t\tvar seq = mix(value, context);\n\t\t\t\t\t\t\treturn arr.concat(seq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn arr.concat([value]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, []);\n\t\t\t\t}\n\n\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\treturn shuffle(randomDeepMixer(sequence));\n\t\t\t},\n\n\t\t\tchoose: function(obj){\n\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\treturn _.take(shuffle(sequence), obj.n ? obj.n : 1);\n\t\t\t},\n\n\t\t\tweightedRandom: function(obj){\n\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\tvar i;\n\t\t\t\tvar total_weight = _.reduce(obj.weights,function (prev, cur) {\n\t\t\t\t\treturn prev + cur;\n\t\t\t\t});\n\n\t\t\t\tvar random_num = random() * total_weight; // cutoff - when we reach this sum - we've reached the desired weight\n\t\t\t\tvar weight_sum = 0;\n\n\t\t\t\tfor (i = 0; i < sequence.length; i++) {\n\t\t\t\t\tweight_sum += obj.weights[i];\n\t\t\t\t\tweight_sum = +weight_sum.toFixed(3);\n\n\t\t\t\t\tif (random_num <= weight_sum) {\n\t\t\t\t\t\treturn [obj.data[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Mixer: something went wrong with weightedRandom');\n\t\t\t}\n\t\t};\n\n\t\treturn mix;\n\t}\n\n\treturn mixProvider;\n});\n","define('utils/database/mixer/mixerSequential',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerSequentialProvider.$inject = ['mixer'];\n\tfunction mixerSequentialProvider(mix){\n\t\tfunction mixerSequential(sequence, context, depth){\n\t\t\tvar mixed;\n\t\t\tvar obj = sequence[0];\n\n\t\t\tdepth = depth || 0;\n\t\t\tif (depth++ >= 10){\n\t\t\t\tthrow new Error('Mixer: the mixer allows a maximum depth of 10');\n\t\t\t}\n\n\t\t\tif (_.isUndefined(obj.mixer)){\n\t\t\t\treturn sequence;\n\t\t\t}\n\n\t\t\t// mix obj\n\t\t\tmixed = mix(obj, context);\n\n\t\t\t// remove obj from sequence\n\t\t\tsequence.shift();\n\n\t\t\t// concat mixed and sequence\n\t\t\tmixed = mixed.concat(sequence);\n\n\t\t\treturn _.isUndefined(mixed[0]) || _.isUndefined(mixed[0].mixer) ? mixed : mixerSequential(mixed, context, depth);\n\t\t}\n\n\t\treturn mixerSequential;\n\t}\n\n\treturn mixerSequentialProvider;\n});\n","define('utils/database/mixer/mixerRecursive',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerRecursiveProvider.$inject = ['mixer'];\n\tfunction mixerRecursiveProvider(mix){\n\t\tfunction mixerRecursive(sequence, context, depth){\n\t\t\tvar mixed = [];\n\n\t\t\tdepth = depth || 0;\n\t\t\tif (depth++ >= 10){\n\t\t\t\tthrow new Error('Mixer: the mixer allows a maximum depth of 10');\n\t\t\t}\n\n\t\t\tmixed = _(sequence)\n\t\t\t\t.map(function(obj){\n\n\t\t\t\t\tif (_.isUndefined(obj.mixer)){\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}\n\n\t\t\t\t\t// mix object, and recursively mix the result\n\t\t\t\t\treturn mixerRecursive(mix(obj, context), context, depth);\n\t\t\t\t})\n\t\t\t\t.flatten()\n\t\t\t\t.value();\n\n\t\t\treturn mixed;\n\t\t}\n\n\t\treturn mixerRecursive;\n\t}\n\n\treturn mixerRecursiveProvider;\n});\n","define('utils/database/mixer/mixerSequenceProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerSequenceProvider.$inject = ['mixer'];\n\tfunction mixerSequenceProvider(mix){\n\n\t\t/**\n\t\t * MixerSequence takes an mixer array and allows browsing back and forth within it\n\t\t * @param {Array} arr [a mixer array]\n\t\t */\n\t\tfunction MixerSequence(arr){\n\t\t\tthis.sequence = arr;\n\t\t\tthis.stack = [];\n\t\t\tthis.add(arr);\n\t\t\tthis.pointer = 0;\n\t\t}\n\n\t\t_.extend(MixerSequence.prototype, {\n\t\t\t/**\n\t\t\t * Add sequence to mixer\n\t\t\t * @param {[type]} arr     Sequence\n\t\t\t * @param {[type]} reverse Whether to start from begining or end\n\t\t\t */\n\t\t\tadd: function(arr, reverse){\n\t\t\t\tthis.stack.push({pointer:reverse ? arr.length : -1,sequence:arr});\n\t\t\t},\n\n\t\t\tproceed: function(direction, context){\n\t\t\t\t// get last subSequence\n\t\t\t\tvar subSequence = this.stack[this.stack.length-1];\n\t\t\t\tvar isNext = (direction === 'next');\n\n\t\t\t\t// if we ran out of sequence\n\t\t\t\t// add the original sequence back in\n\t\t\t\tif (!subSequence) {\n\t\t\t\t\tthrow new Error ('mixerSequence: subSequence not found');\n\t\t\t\t}\n\n\t\t\t\tsubSequence.pointer += isNext ? 1 : -1;\n\n\t\t\t\tvar el = subSequence.sequence[subSequence.pointer];\n\n\t\t\t\t// if we ran out of elements, go to previous level (unless we are on the root sequence)\n\t\t\t\tif (_.isUndefined(el) && this.stack.length > 1){\n\t\t\t\t\tthis.stack.pop();\n\t\t\t\t\treturn this.proceed.call(this,direction,context);\n\t\t\t\t}\n\n\t\t\t\t// if element is a mixer, mix it\n\t\t\t\tif (el && el.mixer){\n\t\t\t\t\tthis.add(mix(el,context), !isNext);\n\t\t\t\t\treturn this.proceed.call(this,direction,context);\n\t\t\t\t}\n\n\t\t\t\t// regular element or undefined (end of sequence)\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tnext: function(context){\n\t\t\t\tthis.pointer++;\n\t\t\t\treturn this.proceed.call(this, 'next',context);\n\t\t\t},\n\n\t\t\tprev: function(context){\n\t\t\t\tthis.pointer--;\n\t\t\t\treturn this.proceed.call(this, 'prev',context);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Return current element\n\t\t\t * should **never** return a mixer - supposed to abstract them away\n\t\t\t * @return {[type]} undefined or element\n\t\t\t */\n\t\t\tcurrent:function(){\n\t\t\t\t// get last subSequence\n\t\t\t\tvar subSequence = this.stack[this.stack.length-1];\n\n\t\t\t\tif (!subSequence) {\n\t\t\t\t\tthrow new Error ('mixerSequence: subSequence not found');\n\t\t\t\t}\n\n\t\t\t\tvar el = subSequence.sequence[subSequence.pointer];\n\n\t\t\t\tif (!el){\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// extend element with meta data\n\t\t\t\tel.$meta = this.meta();\n\n\t\t\t\treturn el;\n\t\t\t},\n\n\t\t\tmeta: function(){\n\t\t\t\treturn {\n\t\t\t\t\tnumber: this.pointer,\n\n\t\t\t\t\t// sum of sequence length, minus one (the mixer) for each level of stack except the last\n\t\t\t\t\toutOf:  _.reduce(this.stack, function(memo,sub){return memo + sub.sequence.length-1;},0)+1\n\t\t\t\t};\n\t\t\t}\n\n\t\t});\n\n\t\treturn MixerSequence;\n\t}\n\n\treturn mixerSequenceProvider;\n});\n\n\n\n\n\n\n","define('utils/database/mixer/branching/dotNotation',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tfunction dotNotation(chain, obj){\n\n\t\tif (_.isString(chain)){\n\t\t\tchain = chain.split('.');\n\t\t}\n\n\t\treturn _.reduce(chain, function(result, link){\n\n\t\t\tif (_.isPlainObject(result) || _.isArray(result)){\n\t\t\t\treturn result[link];\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t}, obj);\n\t}\n\n\treturn dotNotation;\n});\n","define('utils/database/mixer/branching/mixerDotNotationProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerDotNotationProvider.$inject = ['dotNotation'];\n\tfunction mixerDotNotationProvider(dotNotation){\n\n\t\tfunction mixerDotNotation(chain, obj){\n\n\t\t\tvar escapeSeparatorRegex= /[^\\/]\\./;\n\n\t\t\tif (!_.isString(chain)){\n\t\t\t\treturn chain;\n\t\t\t}\n\n\t\t\t// We do not have a non escaped dot: we treat this as a string\n\t\t\tif (!escapeSeparatorRegex.test(chain)){\n\t\t\t\treturn chain.replace('/.','.');\n\t\t\t}\n\n\t\t\treturn dotNotation(chain, obj);\n\t\t}\n\n\t\treturn mixerDotNotation;\n\t}\n\n\treturn mixerDotNotationProvider;\n\n});\n","define('utils/database/mixer/branching/mixerConditionProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerConditionProvider.$inject = ['mixerDotNotation', 'piConsole'];\n\tfunction mixerConditionProvider(dotNotation, piConsole){\n\n\t\tfunction mixerCondition(condition, context){\n\t\t\tvar left, right, operator;\n\n\t\t\t// support a condition that is a plain function\n\t\t\tif (_.isFunction(condition)){\n\t\t\t\toperator = condition;\n\t\t\t} else {\n\t\t\t\t// @TODO angular.$parse may be a better candidate for doing this...\n\t\t\t\tleft = dotNotation(condition.compare,context);\n\t\t\t\tright = dotNotation(condition.to,context);\n\t\t\t\toperator = condition.operator;\n\t\t\t}\n\n\t\t\tpiConsole(['conditions']).info('Condition: ', left, operator || 'equals', right, condition);\n\n\t\t\tif (_.isFunction(operator)){\n\t\t\t\treturn !! operator.apply(context,[left, right, context]);\n\t\t\t}\n\n\t\t\tswitch(operator){\n\t\t\t\tcase 'greaterThan':\n\t\t\t\t\tif (_.isNumber(left) && _.isNumber(right)){\n\t\t\t\t\t\treturn +left > +right;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\tcase 'greaterThanOrEqual':\n\t\t\t\t\tif (_.isNumber(left) && _.isNumber(right)){\n\t\t\t\t\t\treturn +left >= +right;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\tcase 'in':\n\t\t\t\t\tif (_.isArray(right)){\n\t\t\t\t\t\t// binary operator to turn indexOf into binary.\n\t\t\t\t\t\treturn ~_.indexOf(right, left);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\tcase 'exactly':\n\t\t\t\t\treturn left === right;\n\n\t\t\t\tcase 'equals':\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault:\n\t\t\t\t\tif (_.isUndefined(right)){\n\t\t\t\t\t\treturn !!left;\n\t\t\t\t\t}\n\t\t\t\t\treturn _.isEqual(left, right);\n\t\t\t}\n\n\t\t\treturn operator;\n\t\t}\n\n\t\treturn mixerCondition;\n\t}\n\n\treturn mixerConditionProvider;\n});\n","define('utils/database/mixer/branching/mixerEvaluateProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tevaluateProvider.$inject = ['mixerCondition'];\n\tfunction evaluateProvider(condition){\n\t\t/**\n\t\t * Checks if a conditions set is true\n\t\t * @param  {Array} conditions [an array of conditions]\n\t\t * @param  {Object} context   [A context for the condition checker]\n\t\t * @return {Boolean}          [Are these conditions true]\n\t\t */\n\n\t\tfunction evaluate(conditions,context){\n\t\t\t// make && the default\n\t\t\t_.isArray(conditions) && (conditions = {and:conditions});\n\n\t\t\tfunction test(cond){return evaluate(cond,context);}\n\n\t\t\t// && objects\n\t\t\tif (conditions.and){\n\t\t\t\treturn _.every(conditions.and, test);\n\t\t\t}\n\t\t\tif (conditions.nand){\n\t\t\t\treturn !_.every(conditions.nand, test);\n\t\t\t}\n\n\t\t\t// || objects\n\t\t\tif (conditions.or){\n\t\t\t\treturn _.some(conditions.or, test);\n\t\t\t}\n\t\t\tif (conditions.nor){\n\t\t\t\treturn !_.some(conditions.nor, test);\n\t\t\t}\n\n\t\t\treturn condition(conditions, context);\n\t\t}\n\n\t\treturn evaluate;\n\t}\n\n\treturn evaluateProvider;\n});\n","/**\n * Registers the branching mixers with the mixer\n * @return {function}         [mixer decorator]\n */\ndefine('utils/database/mixer/branching/mixerBranchingDecorator',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tmixerBranchingDecorator.$inject = ['$delegate','mixerEvaluate','mixerDefaultContext'];\n\tfunction mixerBranchingDecorator(mix, evaluate, mixerDefaultContext){\n\n\t\tmix.mixers.branch = branch;\n\t\tmix.mixers.multiBranch = multiBranch;\n\n\t\treturn mix;\n\n\t\t/**\n\t\t * Branching mixer\n\t\t * @return {Array}         [A data array with objects to continue with]\n\t\t */\n\t\tfunction branch(obj, context){\n\t\t\tcontext = _.extend(context || {}, mixerDefaultContext);\n\t\t\treturn evaluate(obj.conditions, context) ? obj.data || [] : obj.elseData || [];\n\t\t}\n\n\t\t/**\n\t\t * multiBranch mixer\n\t\t * @return {Array}         [A data array with objects to continue with]\n\t\t */\n\t\tfunction multiBranch(obj, context){\n\t\t\tcontext = _.extend(context || {}, mixerDefaultContext);\n\t\t\tvar row;\n\n\t\t\trow = _.find(obj.branches, function(branch){\n\t\t\t\treturn evaluate(branch.conditions, context);\n\t\t\t});\n\n\t\t\tif (row) {\n\t\t\t\treturn row.data || [];\n\t\t\t}\n\n\t\t\treturn obj.elseData || [];\n\t\t}\n\t}\n\n\treturn mixerBranchingDecorator;\n});\n","define('utils/database/mixer/mixerModule',['require','angular','../randomize/randomizeModule','utils/console/consoleModule','./mixer','./mixerSequential','./mixerRecursive','./mixerSequenceProvider','./branching/dotNotation','./branching/mixerDotNotationProvider','./branching/mixerConditionProvider','./branching/mixerEvaluateProvider','./branching/mixerBranchingDecorator'],function(require){\n\n\tvar angular = require('angular');\n\n\tvar module = angular.module('mixer',[\n\t\trequire('../randomize/randomizeModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.service('mixer', require('./mixer'));\n\tmodule.service('mixerSequential', require('./mixerSequential')); // is this even in use?\n\tmodule.service('mixerRecursive', require('./mixerRecursive')); // is this even in use?\n\tmodule.service('MixerSequence', require('./mixerSequenceProvider'));\n\n\tmodule.value('dotNotation', require('./branching/dotNotation'));\n\tmodule.service('mixerDotNotation', require('./branching/mixerDotNotationProvider'));\n\tmodule.service('mixerCondition', require('./branching/mixerConditionProvider'));\n\tmodule.service('mixerEvaluate', require('./branching/mixerEvaluateProvider'));\n\tmodule.config(['$provide', function($provide){\n\t\t$provide.decorator('mixer', require('./branching/mixerBranchingDecorator'));\n\t}]);\n\tmodule.constant('mixerDefaultContext', {});\n\n\treturn module;\n});\n","define('utils/database/collection/collectionProvider',['underscore'],function(_){\n\t/*\n\t * The constructor for an Array wrapper\n\t */\n\n\tfunction collectionService(){\n\n\t\tfunction Collection (arr) {\n\t\t\tif (arr instanceof Collection) {\n\t\t\t\treturn arr;\n\t\t\t}\n\n\t\t\t// Make sure we are creating this array out of a valid argument\n\t\t\tif (!_.isUndefined(arr) && !_.isArray(arr) && !(arr instanceof Collection)) {\n\t\t\t\tthrow new Error('Collections can only be constructed from arrays');\n\t\t\t}\n\n\t\t\tthis.collection = arr || [];\n\t\t\tthis.length = this.collection.length;\n\n\t\t\t// pointer to the current location within the array\n\t\t\t// we start with -1 so that the initial next points to the begining of the array\n\t\t\tthis.pointer = -1;\n\t\t}\n\n\t\t_.extend(Collection.prototype,{\n\n\t\t\tfirst : function first(){\n\t\t\t\tthis.pointer = 0;\n\t\t\t\treturn this.collection[this.pointer];\n\t\t\t},\n\n\t\t\tlast : function last(){\n\t\t\t\tthis.pointer = this.collection.length - 1;\n\t\t\t\treturn this.collection[this.pointer];\n\t\t\t},\n\n\t\t\tend : function end(){\n\t\t\t\tthis.pointer = this.collection.length;\n\t\t\t\treturn undefined;\n\t\t\t},\n\n\t\t\tcurrent : function(){\n\t\t\t\treturn this.collection[this.pointer];\n\t\t\t},\n\n\t\t\tnext : function(){\n\t\t\t\treturn this.collection[++this.pointer];\n\t\t\t},\n\n\t\t\tprevious : function(){\n\t\t\t\treturn this.collection[--this.pointer];\n\t\t\t},\n\n\t\t\t// add list of items to the collection\n\t\t\tadd : function(list){\n\t\t\t\t// dont allow adding nothing\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\t// make sure list is as an array\n\t\t\t\tlist = _.isArray(list) ? list : [list];\n\t\t\t\tthis.collection = this.collection.concat(list);\n\n\t\t\t\tthis.length = this.collection.length;\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// return the item at index\n\t\t\tat: function(index){\n\t\t\t\treturn this.collection[index];\n\t\t\t}\n\t\t});\n\n\n\t\t// Stuff we took out of bootstrap that can augment the collection\n\t\t// **************************************************************\n\t\tvar methods = ['where','filter'];\n\t\tvar slice = Array.prototype.slice;\n\n\t\t// Mix in each Underscore method as a proxy to `Collection#models`.\n\t\t_.each(methods, function(method) {\n\t\t\tCollection.prototype[method] = function() {\n\t\t\t\tvar args = slice.call(arguments);\n\t\t\t\targs.unshift(this.collection);\n\t\t\t\tvar coll = _[method].apply(_,args);\n\t\t\t\treturn new Collection(coll);\n\t\t\t};\n\t\t});\n\n\t\treturn Collection;\n\t}\n\n\treturn collectionService;\n\n\n});\n","define('utils/database/randomizer/randomizerProvider',['underscore'],function(_){\n\n\t// @TODO: repeat currently repeats only the last element, we need repeat = 'set' or something in order to prevent re-randomizing of exRandom...\n\n\tRandomizerProvider.$inject = ['randomizeInt', 'randomizeRange', 'Collection'];\n\tfunction RandomizerProvider(randomizeInt, randomizeRange, Collection){\n\n\t\tfunction Randomizer(){\n\t\t\tthis._cache = {\n\t\t\t\trandom : {},\n\t\t\t\texRandom : {},\n\t\t\t\tsequential : {}\n\t\t\t};\n\t\t}\n\n\t\t_.extend(Randomizer.prototype, {\n\t\t\trandom: random,\n\t\t\texRandom: exRandom,\n\t\t\tsequential: sequential\n\t\t});\n\n\t\treturn Randomizer;\n\n\t\tfunction random(length, seed, repeat){\n\t\t\tvar cache  = this._cache.random;\n\n\t\t\tif (repeat && !_.isUndefined(cache[seed])) {\n\t\t\t\treturn cache[seed];\n\t\t\t}\n\n\t\t\t// save result in cache\n\t\t\tcache[seed] = randomizeInt(length);\n\n\t\t\treturn cache[seed];\n\t\t}\n\n\t\tfunction sequential(length, seed, repeat){\n\t\t\tvar cache = this._cache.sequential;\n\t\t\tvar coll = cache[seed];\n\t\t\tvar result;\n\n\t\t\t// if needed create collection and set it in seed\n\t\t\tif (_.isUndefined(coll)){\n\t\t\t\tcoll = cache[seed] = new Collection(_.range(length));\n\t\t\t\treturn coll.first();\n\t\t\t}\n\n\t\t\tif (coll.length !== length){\n\t\t\t\tthrow new Error(\"This seed  (\"+ seed +\") points to a collection with the wrong length, you can only use a seed for sets of the same length\");\n\t\t\t}\n\n\t\t\t// if this is a repeated element:\n\t\t\tif (repeat) {\n\t\t\t\treturn coll.current();\n\t\t\t}\n\n\t\t\t// if we've reached the end\n\t\t\tresult = coll.next();\n\n\t\t\t// if we've reached the end of the collection (next)\n\t\t\tif (_.isUndefined(result)){\n\t\t\t\treturn coll.first();\n\t\t\t} else {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tfunction exRandom(length, seed, repeat){\n\t\t\tvar cache = this._cache.exRandom;\n\t\t\tvar coll = cache[seed];\n\t\t\tvar result;\n\n\t\t\t// if needed create collection and set it in seed\n\t\t\tif (_.isUndefined(coll)){\n\t\t\t\tcoll = cache[seed] = new Collection(randomizeRange(length));\n\t\t\t\treturn coll.first();\n\t\t\t}\n\n\t\t\tif (coll.length !== length){\n\t\t\t\tthrow new Error(\"This seed  (\"+ seed +\") points to a collection with the wrong length, you can only use a seed for sets of the same length\");\n\t\t\t}\n\n\t\t\t// if this is a repeated element:\n\t\t\tif (repeat) {\n\t\t\t\treturn coll.current();\n\t\t\t}\n\n\t\t\t// if we've reached the end\n\t\t\tresult = coll.next();\n\n\t\t\t// if we've reached the end of the collection (next)\n\t\t\t// we should re-randomize\n\t\t\tif (_.isUndefined(result)){\n\t\t\t\tcoll = cache[seed] = new Collection(randomizeRange(length));\n\t\t\t\treturn coll.first();\n\t\t\t} else {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn RandomizerProvider;\n\n});\n","define('utils/database/queryProvider',['underscore'],function(_){\n\n\tqueryProvider.$inject = ['Collection','piConsole'];\n\tfunction queryProvider(Collection, $console){\n\n\t\tfunction queryFn(query, collection, randomizer){\n\t\t\tvar coll = new Collection(collection);\n\n\t\t\t// shortcuts:\n\t\t\t// ****************************\n\n\t\t\t// use function instead of query object.\n\t\t\tif (_.isFunction(query)){\n\t\t\t\treturn query(collection);\n\t\t\t}\n\n\t\t\t// pure string query\n\t\t\tif (_.isString(query) || _.isNumber(query)){\n\t\t\t\tquery = {set:query, type:'random'};\n\t\t\t}\n\n\t\t\t// narrow down by set\n\t\t\t// ****************************\n\t\t\tif (query.set){\n\t\t\t\tcoll = coll.where({set:query.set});\n\t\t\t}\n\n\t\t\t// narrow down by data\n\t\t\t// ****************************\n\t\t\tif (_.isString(query.data)){\n\t\t\t\tcoll = coll.filter(function(q){\n\t\t\t\t\treturn q.handle === query.data || (q.data && q.data.handle === query.data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (_.isPlainObject(query.data)){\n\t\t\t\tcoll = coll.where({data:query.data});\n\t\t\t}\n\n\t\t\tif (_.isFunction(query.data)){\n\t\t\t\tcoll = coll.filter(query.data);\n\t\t\t}\n\n\t\t\t// pick by type\n\t\t\t// ****************************\n\n\t\t\t// the default seed is namespace specific just to minimize the situations where seeds clash across namespaces\n\t\t\tvar seed = query.seed || ('$' + collection.namespace + query.set);\n\t\t\tvar length = coll.length;\n\t\t\tvar repeat = query.repeat;\n\t\t\tvar at;\n\t\t\tvar err;\n\n\t\t\tswitch (query.type){\n\t\t\t\tcase undefined:\n\t\t\t\tcase 'byData':\n\t\t\t\tcase 'random':\n\t\t\t\t\tat = randomizer.random(length,seed,repeat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'exRandom':\n\t\t\t\t\tat = randomizer.exRandom(length,seed,repeat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'sequential':\n\t\t\t\t\tat = randomizer.sequential(length,seed,repeat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'first':\n\t\t\t\t\tat = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'last':\n\t\t\t\t\tat = length-1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknow query type: ' + query.type);\n\t\t\t}\n\n\t\t\tif (_.isUndefined(coll.at(at))) {\n\t\t\t\terr = new Error('Query failed, object (' + JSON.stringify(query) +\t') not found. If you are trying to apply a template, you should know that they are not supported for inheritance.');\n\t\t\t\t$console('query').error(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\treturn coll.at(at);\n\t\t}\n\n\t\treturn queryFn;\n\t}\n\n\treturn queryProvider;\n});\n","/*\n * inflates an object\n * this function is responsible for inheritance\n *\n * function inflate(source,coll, randomizer, recursive, counter)\n * @param source: the object to inflate\n * @param coll: a collection to inherit from\n * @param randomizer: a randomizer object for the query\n * @param recursive: private use only, is this inside the recursion (true) or top level (false)\n * @param depth: private use only, a counter for the depth of the recursion\n */\ndefine('utils/database/inflateProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tinflateProvider.$inject = ['databaseQuery','$rootScope','piConsole'];\n\tfunction inflateProvider(query, $rootScope, $console){\n\n\t\tfunction customize(source){\n\t\t\t// check for a custom function and run it if it exists\n\t\t\tif (_.isFunction(source.customize)){\n\t\t\t\tsource.customize.apply(source, [source, $rootScope.global]);\n\t\t\t}\n\t\t\treturn source;\n\t\t}\n\n\t\t// @param source - object to inflate\n\t\t// @param type - trial stimulus or media\n\t\t// @param recursive - whether this is a recursive call or not\n\t\tfunction inflate(source, coll, randomizer, recursive, depth){\n\n\t\t\t// protection against infinte loops\n\t\t\t// ***********************************\n\t\t\tdepth = recursive ? --depth : 10;\n\n\t\t\tif (!depth) {\n\t\t\t\tthrow new Error('Inheritance loop too deep, you can only inherit up to 10 levels down');\n\t\t\t}\n\n\t\t\tif (!_.isPlainObject(source)){\n\t\t\t\tthrow new Error('You are trying to inflate a non object');\n\t\t\t}\n\n\t\t\tvar parent\n\t\t\t\t// create child\n\t\t\t\t, child = _.cloneDeep(source)\n\t\t\t\t, err\n\t\t\t\t, inheritObj = child.inherit;\n\n\n\t\t\t// no inheritance\n\t\t\t// ***********************************\n\n\t\t\t// if we do not need to inherit anything, simply return source\n\t\t\tif (!child.inherit) {\n\t\t\t\t// customize only on the last call (non recursive)\n\t\t\t\t!recursive && customize(child);\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\t// get parent\n\t\t\t// ***********************************\n\t\t\tparent = query(inheritObj, coll, randomizer);\n\n\t\t\t// if inherit target was not found\n\t\t\tif (!parent){\n\t\t\t\terr = new Error('Query failed, object (' + JSON.stringify(inheritObj) +\t') not found.');\n\t\t\t\t$console('query').error(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\t// inflate parent (recursively)\n\t\t\tparent = inflate(\n\t\t\t\tparent,\n\t\t\t\tcoll,\n\t\t\t\trandomizer,\n\t\t\t\ttrue,\n\t\t\t\tdepth\n\t\t\t);\n\n\t\t\t// extending the child\n\t\t\t// ***********************************\n\t\t\tif (inheritObj.merge && !_.isArray(inheritObj.merge)){\n\t\t\t\tthrow new Error('Inheritance error: inherit.merge must be an array.');\n\t\t\t}\n\n\t\t\t// start inflating child (we have to extend selectively...)\n\t\t\t_.each(parent, function(value, key){\n\t\t\t\tvar childProp, parentProp;\n\t\t\t\t// if this key is not set yet, copy it out of the parent\n\t\t\t\tif (!(key in child)){\n\t\t\t\t\tchild[key] = _.isFunction(value) ? value : _.cloneDeep(value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// if we have a merge array,\n\t\t\t\tif (_.indexOf(inheritObj.merge, key) != -1){\n\t\t\t\t\tchildProp = child[key];\n\t\t\t\t\tparentProp = value;\n\n\t\t\t\t\tif (_.isArray(childProp)){\n\t\t\t\t\t\tif (!_.isArray(parentProp)){\n\t\t\t\t\t\t\tthrow new Error('Inheritance error: You tried merging an array with an non array (for \"' + key + '\")');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchild[key] = childProp.concat(parentProp);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_.isPlainObject(childProp)){\n\t\t\t\t\t\tif (!_.isPlainObject(parentProp)){\n\t\t\t\t\t\t\tthrow new Error('Inheritance error: You tried merging an object with an non object (for \"' + key + '\")');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_.extend(childProp, parentProp);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// we want to extend the childs data even if it already exists\n\t\t\t// its ok to shallow extend here (because by definition parent was created for this inflation)\n\t\t\tif (parent.data){\n\t\t\t\tchild.data = _.extend(parent.data, child.data || {});\n\t\t\t}\n\n\t\t\t// Personal customization functions - only if this is the last iteration of inflate\n\t\t\t// This way the customize function gets called only once.\n\t\t\t!recursive && customize(child);\n\n\t\t\t// return inflated trial\n\t\t\treturn child;\n\t\t}\n\n\t\treturn inflate;\n\t}\n\n\treturn inflateProvider;\n});\n","/*\n *\tThe store is a collection of collection devided into namespaces.\n *\tYou can think of every namespace/collection as a table.\n */\ndefine('utils/database/store/storeProvider',['underscore'],function(_){\n\n\tstoreProvider.$inject = ['Collection'];\n\tfunction storeProvider(Collection){\n\n\t\tfunction Store(){\n\t\t\tthis.store = {};\n\t\t}\n\n\t\t_.extend(Store.prototype, {\n\t\t\tcreate: function create(nameSpace){\n\t\t\t\tif (this.store[nameSpace]){\n\t\t\t\t\tthrow new Error('The name space ' + nameSpace + ' already exists');\n\t\t\t\t}\n\t\t\t\tthis.store[nameSpace] = new Collection();\n\t\t\t\tthis.store[nameSpace].namespace = nameSpace;\n\t\t\t},\n\n\t\t\tread: function read(nameSpace){\n\t\t\t\tif (!this.store[nameSpace]){\n\t\t\t\t\tthrow new Error('The name space ' + nameSpace + ' does not exist');\n\t\t\t\t}\n\t\t\t\treturn this.store[nameSpace];\n\t\t\t},\n\n\t\t\tupdate: function update(nameSpace, data){\n\t\t\t\tvar coll = this.read(nameSpace);\n\t\t\t\tcoll.add(data);\n\t\t\t},\n\n\t\t\tdel: function del(nameSpace){\n\t\t\t\tthis.store[nameSpace] = undefined;\n\t\t\t}\n\t\t});\n\n\t\treturn Store;\n\t}\n\n\treturn storeProvider;\n});\n","define('utils/database/databaseProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tDatabaseProvider.$inject = ['DatabaseStore', 'DatabaseRandomizer', 'databaseInflate', 'templateObj', 'databaseSequence'];\n\tfunction DatabaseProvider(Store, Randomizer, inflate, templateObj, DatabaseSequence){\n\n\t\tfunction Database(){\n\t\t\tthis.store = new Store();\n\t\t\tthis.randomizer = new Randomizer();\n\t\t}\n\n\t\t_.extend(Database.prototype, {\n\t\t\tcreateColl: function(namespace){\n\t\t\t\tthis.store.create(namespace);\n\t\t\t},\n\n\t\t\tgetColl: function(namespace){\n\t\t\t\treturn this.store.read(namespace);\n\t\t\t},\n\n\t\t\tadd: function(namespace, query){\n\t\t\t\tvar coll = this.store.read(namespace);\n\t\t\t\tcoll.add(query);\n\t\t\t},\n\n\t\t\tinflate: function(namespace, query, context){\n\t\t\t\tvar coll = this.getColl(namespace);\n\n\t\t\t\t// inflate\n\t\t\t\tif (!query.$inflated || query.reinflate) {\n\t\t\t\t\tquery.$inflated = inflate(query, coll, this.randomizer);\n\t\t\t\t}\n\n\t\t\t\t// interpolate\n\t\t\t\tif (!query.$templated || query.regenerateTemplate){\n\t\t\t\t\tcontext[namespace + 'Data'] = query.$inflated.data || {};\n\t\t\t\t\tcontext[namespace + 'Meta'] = query.$meta;\n\t\t\t\t\tquery.$templated = templateObj(query.$inflated, context);\n\t\t\t\t}\n\n\t\t\t\treturn query.$templated;\n\t\t\t},\n\n\t\t\tsequence: function(namespace, arr){\n\t\t\t\tif (!_.isArray(arr)){\n\t\t\t\t\tthrow new Error('Sequence must be an array.');\n\t\t\t\t}\n\t\t\t\treturn new DatabaseSequence(namespace, arr, this);\n\t\t\t}\n\t\t});\n\n\t\treturn Database;\n\t}\n\n\treturn DatabaseProvider;\n});\n","define('utils/database/databaseSequenceProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tSequenceProvider.$inject = ['MixerSequence'];\n\tfunction SequenceProvider(MixerSequence){\n\n\t\t/**\n\t\t * Sequence Constructor:\n\t\t * Manage the progression of a sequence, including parsing (mixing, inheritance and templating).\n\t\t * @param  {String  } namespace [pages or questions (the type of db.Store)]\n\t\t * @param  {Array   } arr       [a sequence to manage]\n\t\t * @param  {Database} db        [the db itself]\n\t\t */\n\n\t\tfunction Sequence(namespace, arr,db){\n\t\t\tthis.namespace = namespace;\n\t\t\tthis.mixerSequence = new MixerSequence(arr);\n\t\t\tthis.db = db;\n\t\t}\n\n\t\t_.extend(Sequence.prototype, {\n\t\t\t// only mix\n\t\t\tnext: function(context){\n\t\t\t\tthis.mixerSequence.next(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// anti mix\n\t\t\tprev: function(context){\n\t\t\t\tthis.mixerSequence.prev(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Return the element currently in focus.\n\t\t\t * It always returns either an element or undefined (mixers are abstrcted away)\n\t\t\t * @param  {[type]} context [description]\n\t\t\t * @return {[type]}         [description]\n\t\t\t */\n\t\t\tcurrent: function(context){\n\t\t\t\tcontext || (context = {});\n\t\t\t\t// must returned an element or undefined\n\t\t\t\tvar obj = this.mixerSequence.current(context);\n\n\t\t\t\t// in case this is the end of the sequence\n\t\t\t\tif (!obj){\n\t\t\t\t\treturn obj;\n\t\t\t\t}\n\n\t\t\t\treturn this.db.inflate(this.namespace, obj, context);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns an array of elements, created by proceeding through the whole sequence.\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tall: function(context){\n\t\t\t\tvar sequence = [];\n\n\t\t\t\tvar el = this.next().current(context);\n\t\t\t\twhile (el){\n\t\t\t\t\tsequence.push(el);\n\t\t\t\t\tel = this.next().current(context);\n\t\t\t\t}\n\n\t\t\t\treturn sequence;\n\t\t\t}\n\t\t});\n\n\t\treturn Sequence;\n\t}\n\n\treturn SequenceProvider;\n});\n","define('utils/database/databaseModule',['require','angular','./mixer/mixerModule','./template/templateModule','utils/console/consoleModule','./collection/collectionProvider','./randomizer/randomizerProvider','./queryProvider','./inflateProvider','./store/storeProvider','./databaseProvider','./databaseSequenceProvider'],function(require){\n\n\tvar angular = require('angular');\n\n\tvar module = angular.module('database',[\n\t\t\trequire('./mixer/mixerModule').name,\n\t\t\trequire('./template/templateModule').name,\n\t\t\trequire('utils/console/consoleModule').name\n\t\t])\n\t\t.service('Collection', require('./collection/collectionProvider'))\n\t\t.service('DatabaseRandomizer', require('./randomizer/randomizerProvider'))\n\t\t.service('databaseQuery', require('./queryProvider'))\n\t\t.service('databaseInflate', require('./inflateProvider'))\n\t\t.service('DatabaseStore', require('./store/storeProvider'))\n\t\t.service('Database', require('./databaseProvider'))\n\t\t//.value('Database', require('./main')) // tests the use of the non angular variation\n\t\t.service('databaseSequence', require('./databaseSequenceProvider'));\n\n\treturn module;\n});\n","define('quest/task/questSequenceProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tfunction SequenceProvider(){\n\n\t\tfunction Sequence(arr, db){\n\t\t\tif (!db){\n\t\t\t\tthrow new Error('Sequences need to take a db as the second argument');\n\t\t\t}\n\n\t\t\tthis.sequence = db.sequence('pages', arr);\n\t\t\tthis.db = db;\n\t\t}\n\n\t\t_.extend(Sequence.prototype, {\n\t\t\tnext: function(context){\n\t\t\t\tthis.sequence.next(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tprev: function(context){\n\t\t\t\tthis.sequence.prev(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tcurrent: function(context){\n\t\t\t\tvar questionsArr,\n\t\t\t\t\tpage = this.sequence.current(context);\n\n\t\t\t\tif (!page){\n\t\t\t\t\treturn page;\n\t\t\t\t}\n\n\t\t\t\tif (page.questions){\n\t\t\t\t\tquestionsArr = _.isArray(page.questions) ? page.questions : [page.questions];\n\t\t\t\t} else {\n\t\t\t\t\tquestionsArr = [];\n\t\t\t\t}\n\n\t\t\t\tvar questions = this.db.sequence('questions', questionsArr).all({\n\t\t\t\t\tpagesData: page.data,\n\t\t\t\t\tpagesMeta: page.$meta\n\t\t\t\t});\n\n\t\t\t\t// make sure we don't lose any thing in the orginal page\n\t\t\t\t// @TODO: this seems extremely expensive. Is this really neccesary?\n\t\t\t\tpage = _.clone(page, true);\n\t\t\t\tpage.questions = questions;\n\n\t\t\t\treturn page;\n\t\t\t}\n\t\t});\n\n\t\treturn Sequence;\n\t}\n\n\treturn SequenceProvider;\n});\n","define('quest/task/taskProvider',['underscore', 'angular'], function(_, angular){\n\n\tTaskProvider.$inject = ['$q','Database','Logger','QuestSequence','taskParse', 'dfltQuestLogger', '$rootScope'];\n\tfunction TaskProvider($q, Database, Logger, QuestSequence, parse, dfltQuestLogger,$rootScope){\n\t\tfunction Task(script){\n\t\t\tvar self = this;\n\t\t\tvar settings = script.settings || {};\n\n\t\t\t// save script for later use...\n\t\t\tthis.script = script;\n\t\t\tthis.db = new Database();\n\t\t\tthis.logger = new Logger(dfltQuestLogger);\n\t\t\tthis.logger.setSettings(settings.logger || {});\n\t\t\tthis.q = $q.defer();\n\n\t\t\tif (!_.isArray(script.sequence)){\n\t\t\t\tthrow new Error('Task: no sequence was defined');\n\t\t\t}\n\n\t\t\tthis.sequence = new QuestSequence(script.sequence, this.db);\n\n\t\t\tthis.promise = this.q.promise\n\t\t\t\t.then(function(){\n\t\t\t\t\t// check if there are unlogged questions and log them\n\t\t\t\t\tself.logger.suppressPulse(); // this is the end of the task, we want to post all the logs at once.\n\t\t\t\t\t_.each($rootScope.current.questions, function(quest){\n\t\t\t\t\t\tif(quest.$logged){\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * logs to server\n\t\t\t\t\t\t * @param {Object} log : the actual data regarding this log\n\t\t\t\t\t\t * @param {Object} pageData : General inforamtion about this page\n\t\t\t\t\t\t * @param {Object} global : The global object\n\t\t\t\t\t\t */\n\t\t\t\t\t\tself.log(quest, {}, $rootScope.global);\n\t\t\t\t\t\tquest.$logged = true;\n\t\t\t\t\t});\n\t\t\t\t\tself.logger.suppressPulse(false); // turn suppress off\n\t\t\t\t\treturn self.logger.send();\n\t\t\t\t})\n\t\t\t\t['finally'](settings.onEnd || angular.noop); // end only after logging has finished (regardless of success)\n\n\t\t\tparse(script, this.db);\n\t\t}\n\n\t\t_.extend(Task.prototype, {\n\t\t\tlog: function(){\n\t\t\t\tthis.logger.log.apply(this.logger, arguments);\n\t\t\t},\n\t\t\tcurrent: function(){\n\t\t\t\tvar nextObj = this.sequence.current();\n\n\t\t\t\tif (!nextObj){\n\t\t\t\t\tthis.q.resolve();\n\t\t\t\t}\n\n\t\t\t\treturn nextObj;\n\t\t\t},\n\t\t\tnext: function(){\n\t\t\t\treturn this.sequence.next();\n\t\t\t},\n\t\t\tprev: function(){\n\t\t\t\treturn this.sequence.prev();\n\t\t\t}\n\t\t});\n\n\t\treturn Task;\n\t}\n\n\treturn TaskProvider;\n});\n","define('quest/task/parseProvider',[],function(){\n\n\tparseProvider.$inject = ['piConsole'];\n\tfunction parseProvider(piConsole){\n\t\tfunction parse(script, db){\n\t\t\tdb.createColl('pages');\n\t\t\tdb.createColl('questions');\n\n\t\t\tdb.add('pages', script.pagesSets || []);\n\t\t\tdb.add('questions', script.questionsSets || []);\n\n\t\t\tscript.settings || (script.settings = {});\n\n\t\t\tpiConsole.setSettings(script.settings.DEBUG || {});\n\t\t}\n\n\t\treturn parse;\n\t}\n\n\treturn parseProvider;\n});\n","define('quest/task/dfltQuestLogger',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tfunction dfltQuestLogger(log, pageData, global){\n\t\tglobal;\n\t\tvar logObj = _.extend({},pageData,log);\n\t\tif (logObj.declined) {\n\t\t\tlogObj.response = log.responseObj = undefined;\n\t\t}\n\t\treturn logObj;\n\t}\n\n\treturn dfltQuestLogger;\n\n});\n","define('quest/task/task-module',['require','angular','utils/logger/logger-module','utils/database/databaseModule','utils/console/consoleModule','./questSequenceProvider','./taskProvider','./parseProvider','./dfltQuestLogger'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('task', [\n\t\trequire('utils/logger/logger-module').name,\n\t\trequire('utils/database/databaseModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.service('QuestSequence', require('./questSequenceProvider'));\n\tmodule.service('Task', require('./taskProvider'));\n\tmodule.service('taskParse', require('./parseProvider'));\n\n\tmodule.value('dfltQuestLogger', require('./dfltQuestLogger'));\n\n\treturn module;\n});\n","/*\n *\tOne module to rule them all.\n *\tThis module is responsible to pull together all the piquest components.\n *\tCalling it should suffice to activate the whole piquest stuff.\n */\ndefine('quest/questModule',['require','quest/directives/questDirectivesModule','quest/task/task-module'],function(require){\n\n\trequire('quest/directives/questDirectivesModule');\n\trequire('quest/task/task-module');\n\n\tvar module = angular.module('piQuest', ['questDirectives','task']);\n\n\treturn module;\n});\n","/*\n * @name: piMessage Directive\n */\ndefine('message/messageDirective',['require','underscore'],function (require) {\n\n\tvar _ = require('underscore');\n\n\tdirective.$inject = ['$compile', '$rootScope', '$document', 'piConsole'];\n\tfunction directive($compile, $rootScope, $document, $console){\n\t\treturn {\n\t\t\tlink: function($scope, $element) {\n\t\t\t\tvar events = 'keydown';\n\t\t\t\tvar script = $scope.script;\n\t\t\t\tvar newScope = $scope.newScope = $scope.$new();\n\t\t\t\tvar template;\n\t\t\t\tvar context = {\n\t\t\t\t\tglobal : $rootScope.global,\n\t\t\t\t\tcurrent : $rootScope.current,\n\t\t\t\t\ttask: script\n\t\t\t\t};\n\n\t\t\t\t// try to render template\n\t\t\t\ttry {\n\t\t\t\t\ttemplate = _.template(script.$template)(context);\n\t\t\t\t} catch(e){\n\t\t\t\t\ttemplate = script.$template;\n\t\t\t\t\t$console('message').error('failed to render template', e);\n\t\t\t\t}\n\n\t\t\t\t_.extend($scope, context);\n\t\t\t\t$scope.done = done;\n\n\t\t\t\t// listen for events\n\t\t\t\t$document.on(events, onKeydown);\n\t\t\t\t$scope.$on('$destroy',function(){\n\t\t\t\t\t$document.off(events, onKeydown);\n\t\t\t\t});\n\n\t\t\t\t$element.html(template);\n\t\t\t\t$compile($element.contents())(newScope);\n\n\t\t\t\t// check if the we should proceed and if so call done\n\t\t\t\tfunction onKeydown(e){\n\t\t\t\t\t// accept both the keyCode and the key itself\n\t\t\t\t\tvar keyArr = _.isArray(script.keys) ? script.keys : [script.keys];\n\t\t\t\t\tvar keys = _.map(keyArr,function(value){\n\t\t\t\t\t\treturn _.isString(value) ? value.toUpperCase().charCodeAt(0) : value;\n\t\t\t\t\t});\n\n\t\t\t\t\t// event is in the keys array\n\t\t\t\t\t// ~ return 0 only if target was not found\n\t\t\t\t\tif (~_.indexOf(keys, e.which)){\n\t\t\t\t\t\t$scope.done();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction done(){\n\t\t\t\t\tnewScope.$destroy();\n\t\t\t\t\t$element.empty();\n\t\t\t\t\t$scope.$emit('message:done');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\n\n\n\n\treturn directive;\n});\n","/*\n * @name: messageDone Directive\n */\ndefine('message/messageDoneDirective',[],function () {\n\n\tdirective.$inject = [];\n\tfunction directive(){\n\t\treturn {\n\t\t\tlink: function($scope, $element){\n\t\t\t\t$element.on('click', function(){\n\t\t\t\t\t$scope.done();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('message/messageModule',['require','angular','utils/console/consoleModule','./messageDirective','./messageDoneDirective'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.message',[\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.directive('piMessage', require('./messageDirective'));\n\tmodule.directive('piMessageDone', require('./messageDoneDirective'));\n\n\treturn module;\n});\n","/**\n * @name: taskActivateProvider\n */\ndefine('taskManager/task/taskActivateProvider',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\n\tfunction provider(){\n\t\tvar activators = {};\n\n\t\tthis.$get = taskActivateProvider;\n\n\t\tthis.set = function set(name, fn){\n\t\t\tactivators[name] = fn;\n\t\t};\n\n\t\tthis.get = function(name){\n\t\t\treturn activators[name];\n\t\t};\n\t}\n\n\n\ttaskActivateProvider.$inject = ['$q', '$rootScope', '$injector'];\n\tfunction taskActivateProvider($q,$rootScope, $injector){\n\t\tvar self = this;\n\n\t\tfunction taskActivate(task, $element, $scope){\n\t\t\tvar activator;\n\t\t\tvar def = $q.defer();\n\t\t\tvar global = $rootScope.global;\n\t\t\tvar script = task.$script;\n\t\t\tvar destroy;\n\n\t\t\t// get activation function\n\t\t\tif (_.isFunction(script)){\n\t\t\t\tactivator = script;\n\t\t\t}\n\n\t\t\tif (!activator && script && _.isFunction(script.play)){\n\t\t\t\tactivator = _.bind(script.play, script);\n\t\t\t\tactivator.$inject = $injector.annotate(script.play);\n\t\t\t}\n\n\t\t\tif (!activator && script && _.isArray(script.play)){\n\t\t\t\tactivator = _.bind(script.play[script.play.length-1], script);\n\t\t\t\tactivator.$inject = $injector.annotate(script.play);\n\t\t\t}\n\n\n\t\t\tif (!activator && task.type){\n\t\t\t\tactivator = self.get(task.type);\n\t\t\t}\n\n\t\t\tif (!_.isFunction(activator)){\n\t\t\t\tthrow new Error('Activator function not found for the \"' + task.type + '\" task');\n\t\t\t}\n\n\t\t\t// activate task\n\t\t\t/**\n\t\t\t * activation function\n\t\t\t * @param {function} done calback for finishing the task\n\t\t\t * @param {obj} props an object with all the stuff we think we could need...\n\t\t\t * @type {[type]}\n\t\t\t */\n\n\t\t\tdestroy = $injector.invoke(activator, null, {\n\t\t\t\tdone: _.bind(def.resolve,def),\n\t\t\t\ttask: task,\n\t\t\t\tscript: script,\n\t\t\t\t$element: $element,\n\t\t\t\t$scope: $scope,\n\t\t\t\tglobal: global\n\t\t\t});\n\n\t\t\t// if activator returns a function use it to clean up the task\n\t\t\t_.isFunction(destroy) && def.promise['finally'](destroy);\n\n\t\t\treturn def;\n\t\t}\n\n\t\treturn taskActivate;\n\t}\n\n\treturn provider;\n});\n","/*\n * @name: taskDirective\n */\ndefine('taskManager/task/taskDirective',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tdirective.$inject = ['taskActivate','managerCanvas','$document', '$window', '$rootScope'];\n\tfunction directive(activateTask, canvas, $document, $window, $rootScope){\n\t\treturn {\n\t\t\tscope:{\n\t\t\t\ttask: '=piTask'\n\t\t\t},\n\t\t\tlink: function($scope, $element){\n\t\t\t\tvar task = $scope.task;\n\t\t\t\tvar canvasOff, oldTitle;\n\t\t\t\tvar def;\n\t\t\t\tvar promise;\n\t\t\t\tvar proceedObject;\n\t\t\t\tvar settings = $scope.$parent.settings || {};\n\t\t\t\tvar script = task.$script || {};\n\t\t\t\tvar taskName = task.name || script.name;\n\n\t\t\t\tif (!task){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * listen for skip events\n\t\t\t\t */\n\t\t\t\tif (settings.skip){\n\t\t\t\t\t$document.on('keydown',proceedListener);\n\t\t\t\t\t$scope.$on('$destroy', function(){\n\t\t\t\t\t\t$document.off('keydown', proceedListener);\n\t\t\t\t\t\t$document.off('keydown', skipListener);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Setup current object\n\t\t\t\t */\n\t\t\t\t$rootScope.current = $window.piGlobal.current = script.current || {};\n\t\t\t\tif (taskName){\n\t\t\t\t\t// extend current script with the piGlobal object\n\t\t\t\t\t_.extend($rootScope.current, $window.piGlobal[taskName] || {});\n\t\t\t\t\t// set the current object back into the global\n\t\t\t\t\t$window.piGlobal[taskName] = script.current;\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Activate task\n\t\t\t\t */\n\t\t\t\tdef = activateTask(task, $element, $scope.$new());\n\t\t\t\tpromise = def.promise;\n\n\t\t\t\t/**\n\t\t\t\t * Add and remove canvas\n\t\t\t\t */\n\t\t\t\tcanvasOff = canvas(task.canvas); // apply canvas settings\n\t\t\t\tpromise['finally'](canvasOff); // remove canvas settings\n\n\t\t\t\t/**\n\t\t\t\t * Add and remove title\n\t\t\t\t * if task.title is set, set the title and remove at the end...\n\t\t\t\t */\n\t\t\t\tif (task.title){\n\t\t\t\t\toldTitle = $document[0].title;\n\t\t\t\t\t$document[0].title = task.title;\n\t\t\t\t\tpromise['finally'](function(){$document[0].title = oldTitle;});\n\t\t\t\t}\n\n\t\t\t\tpromise['finally'](function(){\n\t\t\t\t\t$scope.$emit('task:done', proceedObject);\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Listen for skip events\n\t\t\t\t * F5 = refresh\n\t\t\t\t * esc = set up arrows for prev/next\n\t\t\t\t * @param  {Event} e\n\t\t\t\t */\n\t\t\t\tfunction proceedListener(e){\n\t\t\t\t\tvar which = e.key || e.which || e.keyCode;\n\n\t\t\t\t\t// ctrl r ==> refresh\n\t\t\t\t\tif (which == 82 && e.ctrlKey) {\n\t\t\t\t\t\tproceed(e, 'current');\n\t\t\t\t\t}\n\n\t\t\t\t\t// esc ==> listen for skip direction (once)\n\t\t\t\t\tif(which == 27) {\n\t\t\t\t\t\t$document.one('keydown', skipListener);\n\t\t\t        }\n\t\t\t\t}\n\n\t\t\t\t// skip on left/right key codes\n\t\t\t\tfunction skipListener(e){\n\t\t\t\t\tvar which = e.which || e.keyCode;\n\t\t\t\t\tif (which == 37) {proceed(e, 'prev');}\n\t\t\t\t\tif (which == 39) {proceed(e, 'next');}\n\t\t\t\t}\n\n\t\t\t\t// end task and proceed where needed\n\t\t\t\tfunction proceed(e, target){\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tproceedObject = {type:target, bustCache:true}; // when the deferred is resolved this object is used to tell piqPage where to proceed.\n\t\t\t\t\tdef.resolve();\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","/**\n * The module responsible for the single task.\n * It knows how to load a task and activate it.\n * It also supplies the basic task directive.\n * @return {module} pi.task module.\n */\ndefine('taskManager/task/taskModule',['require','angular','underscore','./taskActivateProvider','./taskDirective'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.task',[]);\n\tvar _ = require('underscore');\n\n\tmodule.provider('taskActivate', require('./taskActivateProvider'));\n\tmodule.directive('piTask', require('./taskDirective'));\n\n\t// the tasks defined here essentialy activate the default players for quest/message/pip.\n\n\tmodule.config(['taskActivateProvider', function(activateProvider){\n\n\t\tactivateQuest.$inject = ['done', '$element', '$scope', '$compile', 'script','task'];\n\t\tfunction activateQuest(done, $canvas, $scope, $compile, script, task){\n\t\t\tvar $el;\n\n\t\t\t// update script name\n\t\t\ttask.name && (script.name = task.name);\n\n\t\t\t$scope.script = script;\n\n\t\t\t$canvas.append('<div pi-quest></div>');\n\t\t\t$el = $canvas.contents();\n\t\t\t$compile($el)($scope);\n\n\t\t\t// clean up piQuest\n\t\t\t$el.controller('piQuest').task.promise['finally'](function(){\n\t\t\t\tdone();\n\t\t\t});\n\n\t\t\treturn function questDestroy(){\n\t\t\t\t$el.scope().$destroy();\n\t\t\t\t$el.remove();\n\t\t\t};\n\t\t}\n\n\t\tactivateProvider.set('quest', activateQuest);\n\t}]);\n\n\tmodule.config(['taskActivateProvider', function(activateProvider){\n\t\tactivateMessage.$inject = ['done', '$element', 'task', '$scope','$compile'];\n\t\tfunction activateMessage(done, $canvas, task, $scope, $compile){\n\t\t\tvar $el;\n\n\t\t\t$scope.script = task;\n\n\t\t\t$canvas.append('<div pi-message></div>');\n\t\t\t$el = $canvas.contents();\n\t\t\t$compile($el)($scope);\n\n\t\t\t// clean up\n\t\t\t$scope.$on('message:done', function(){\n\t\t\t\tdone();\n\t\t\t});\n\n\t\t\treturn function destroyMessage(){\n\t\t\t\t$scope.$destroy();\n\t\t\t\t$el.remove();\n\t\t\t};\n\t\t}\n\n\t\tactivateProvider.set('message', activateMessage);\n\t}]);\n\n\tmodule.config(['taskActivateProvider', function(activateProvider){\n\t\tactivatePIP.$inject = ['done', '$element', 'task', 'script'];\n\t\tfunction activatePIP(done, $canvas, task, script){\n\t\t\tvar $el, req;\n\n\t\t\t// load PIP\n\t\t\treq = requirejs.config({\n\t\t\t\tcontext: _.uniqueId(),\n\t\t\t\tbaseUrl:'../bower_components/PIPlayer/dist/js', // can't use packages yet as urls in pip aren't relative...\n\t\t\t\tpaths: {\n\t\t\t\t\t//plugins\n\t\t\t\t\ttext: ['//cdnjs.cloudflare.com/ajax/libs/require-text/2.0.3/text.min', \"../../bower_components/requirejs-text/text\"],\n\n\t\t\t\t\t// Core Libraries\n\t\t\t\t\tjquery: [\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min\",\"../../bower_components/jquery/dist/jquery.min\"],\n\t\t\t\t\tunderscore: [\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min\",\"../../bower_components/lodash-compat/lodash.min\"],\n\t\t\t\t\tbackbone: ['//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min', \"../../bower_components/backbone/backbone\"]\n\t\t\t\t},\n\n\t\t\t\tdeps: ['jquery', 'backbone', 'underscore']\n\t\t\t});\n\n\t\t\t// update script name\n\t\t\ttask.name && (script.name = task.name);\n\n\t\t\t$canvas.append('<div pi-player></div>');\n\t\t\t$el = $canvas.contents();\n\t\t\t$el.addClass('pi-spinner');\n\n\t\t\treq(['activatePIP'], function(activate){\n\t\t\t\t$el.removeClass('pi-spinner');\n\t\t\t\tactivate(script, done);\n\t\t\t});\n\n\t\t\treturn function destroyPIP(){\n\t\t\t\t$el.remove();\n\t\t\t\treq(['app/task/main_view'], function(main){\n\t\t\t\t\tmain.deferred.resolve();\n\t\t\t\t\tmain.destroy();\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tactivateProvider.set('pip', activatePIP);\n\t}]);\n\n\treturn module;\n});\n","define('taskManager/canvas/canvasConstructor',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\t/**\n\t * Takes a map of css rules and applies them.\n\t * Returns a function that returns the page to its former condition.\n\t *\n\t * The rule map is an object of ruleName -> ruleObject.\n\t *\n\t * var ruleObject = {\n\t * \telement : wrapped element to affect\n\t * \tproperty: css property to modify\n\t * }\n\t *\n\t * @param  {Object} map      A hash of rules.\n\t * @param  {Object} settings A hash of ruleName -> value\n\t * @return {Function}        A function that undoes all the previous changes\n\t */\n\tfunction canvasContructor(map, settings){\n\t\tvar offArr;\n\n\t\tif (!_.isPlainObject(map)){\n\t\t\tthrow new Error('canvas(map): You must set a rule map for canvas to work properly');\n\t\t}\n\n\t\t// if settings is undefined return a function that doesn't do anything\n\t\t// just so we don't need to make sure that the user modifies the canvas\n\t\tif (_.isUndefined(settings)){\n\t\t\treturn _.noop;\n\t\t}\n\n\t\tif (!_.isPlainObject(settings)){\n\t\t\tthrow new Error('canvas(settings): canvas settings must be an object');\n\t\t}\n\n\t\t// create an array of off functions to undo any changes by this action\n\t\toffArr = _.map(settings, function(value,key){\n\t\t\tvar rule = map[key];\n\t\t\tif (rule){\n\t\t\t\treturn on(rule.element, rule.property, value);\n\t\t\t} else {\n\t\t\t\tthrow new Error('canvas('+ key +'): unknow key in canvas object.');\n\t\t\t}\n\t\t});\n\n\t\treturn function off(){\n\t\t\t_.forEach(offArr, function(fn){fn.call();});\n\t\t};\n\t}\n\n\tfunction on($el, property, value){\n\t\tvar old = $el.css(property); // save old value\n\t\t$el.css(property, value); // set new value\n\t\treturn _.bind($el.css, $el, property, old); // create off function: bind $el.css(property, old)\n\t}\n\n\treturn canvasContructor;\n\n});\n","define('taskManager/canvas/managerCanvasService',['require','underscore','angular','./canvasConstructor'],function(require){\n\n\tvar _ = require('underscore');\n\tvar angular = require('angular');\n\tvar canvasConstructor = require('./canvasConstructor');\n\n\tmanagerCanvasService.$inject = ['$rootElement', '$document'];\n\tfunction managerCanvasService($rootElement, $document){\n\t\tvar $body = angular.element($document[0].body);\n\n\t\tvar map = {\n\t\t\tbackground \t\t\t: {element: $body, property: 'backgroundColor'},\n\t\t\tcanvasBackground\t: {element: $rootElement, property:'backgroundColor'},\n\t\t\tfontSize \t\t\t: {element: $rootElement, property:'fontSize'},\n\t\t\tfontColor \t\t\t: {element: $rootElement, property:'color'}\n\t\t};\n\n\t\treturn _.bind(canvasConstructor, null, map);\n\t}\n\n\treturn managerCanvasService;\n\n});\n","define('taskManager/canvas/canvasModule',['require','angular','./managerCanvasService'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.canvas',[]);\n\n\tmodule.service('managerCanvas', require('./managerCanvasService'));\n\n\treturn module;\n});\n","/**\n * Swap directive\n * Enables a slide-show type interface.\n * It exposes a controller with the next/prev/refresh/empty methods.\n * Each time next is called, the content is re-compiled and animated in, and old content is animated out.\n *\n * @param  {[type]} require [description]\n * @return {[type]}         [description]\n */\ndefine('utils/helperDirectives/piSwap/piSwapDirective',['require','underscore'],function (require) {\n\t// get template\n\tvar _  = require('underscore');\n\n\tswapControler.$inject = ['$scope'];\n\tfunction swapControler($scope){\n\t\tthis.$scope = $scope;\n\t}\n\n\t_.extend(swapControler.prototype, {\n\t\tnext : function(props, options){\n\t\t\tthis.$scope.enter(props, options);\n\t\t},\n\t\tprev: function(props, options){\n\t\t\tthis.$scope.enter(props, options);\n\t\t},\n\t\trefresh: function(props){\n\t\t\tthis.$scope.refresh(props);\n\t\t},\n\t\tempty: function(options){\n\t\t\tthis.$scope.empty(options);\n\t\t}\n\t});\n\n\tswapDirective.$inject = ['$compile', '$animate'];\n\tfunction swapDirective($compile, $animate){\n\t\treturn {\n\t\t\t//replace: true,\n\t\t\ttransclude: true,\n\t\t\tcontroller: swapControler,\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tcompile: function(){\n\t\t\t\treturn {\n\t\t\t\t\tpre: this.pre,\n\t\t\t\t\tpost: function(){}\n\t\t\t\t};\n\t\t\t},\n\t\t\tpre: function($scope, $element, $attr, $ctrls, $transclude) {\n\t\t\t\t$scope.enter = enter;\n\t\t\t\t$scope.empty = cleanupLast;\n\t\t\t\t$scope.refresh = refresh;\n\n\t\t\t\tvar currentScope, // the scope of the current element\n\t\t\t\t\tcurrentElement, // an entering element (up until it leaves)\n\t\t\t\t\tpreviousElement, // an element that is currently leaving\n\t\t\t\t\tparentElement = $element;\n\n\t\t\t\tfunction cleanupLast(opts) {\n\t\t\t\t\tvar options = opts || {};\n\n\t\t\t\t\tif(previousElement) {\n\t\t\t\t\t\tpreviousElement.remove();\n\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentScope) {\n\t\t\t\t\t\tcurrentScope.$destroy();\n\t\t\t\t\t\tcurrentScope = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentElement) {\n\t\t\t\t\t\t$animate.leave(currentElement, function() {\n\t\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t\t\toptions.postLeave && options.postLeave();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpreviousElement = currentElement;\n\t\t\t\t\t\tcurrentElement = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction enter(props, opts){\n\t\t\t\t\tvar options = opts || {};\n\t\t\t\t\toptions.pre && options.pre();\n\n\t\t\t\t\tif (!props){\n\t\t\t\t\t\treturn cleanupLast(options);\n\t\t\t\t\t}\n\n\t\t\t\t\t// create new scope and extend it with props\n\t\t\t\t\tvar newScope = _.extend($scope.$new(), props);\n\n\t\t\t\t\t// create new element\n\t\t\t\t\t$transclude(newScope, function(clone){\n\n\t\t\t\t\t\t// @TODO: add animation info\n\t\t\t\t\t\t// clone.addClass(direction); // maybe add this to the parent? how do we control both enter and leave with this method?\n\t\t\t\t\t\taddAnimations(clone, options.animate);\n\n\t\t\t\t\t\t// First send away the previous element (if it exists)\n\t\t\t\t\t\tcleanupLast(options);\n\n\t\t\t\t\t\t// Instantiate new element\n\t\t\t\t\t\tcurrentElement = clone;\n\n\t\t\t\t\t\tcurrentScope = newScope;\n\n\t\t\t\t\t\t// Animate it in\n\t\t\t\t\t\t$animate.enter(currentElement, parentElement, null, function(){\n\t\t\t\t\t\t\toptions.post && options.post();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction refresh(props){\n\t\t\t\t\t_.extend(currentScope, props);\n\t\t\t\t}\n\n\t\t\t\tfunction addAnimations(element, animationsStr){\n\t\t\t\t\tif (!animationsStr){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar animations = animationsStr.split(\" \");\n\n\t\t\t\t\t_.each(animations, function(animation){\n\t\t\t\t\t\t// Make sure that this animation exists\n\t\t\t\t\t\tif (!$injector.has(\".\" + animation + '-animation')){\n\t\t\t\t\t\t\tpiConsole(['page','animation']).error('Unknown animation type: \"' + animation + '\"');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\telement.addClass(animationsStr);\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t};\n\t};\n\n\treturn swapDirective;\n});\n","\ndefine('text!utils/helperDirectives/piSpinner/spinner.html',[],function () { return '<div>\\n\\t<img ng-if=\"spinner\" class=\"pi-logo\" src=\"img/loader.gif\" />\\n\\t<div ng-if=\"!spinner\" ng-transclude></div>\\n</div>';});\n\n","/*\n * @name: spinner Directive\n */\ndefine('utils/helperDirectives/piSpinner/piSpinnerDirective',['require','text!./spinner.html'],function (require) {\n\t// get template\n\tvar template = require('text!./spinner.html');\n\n\tdirective.$inject = [];\n\tfunction directive(){\n\t\treturn {\n\t\t\ttransclude: true,\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: [],\n\t\t\t// controller: '',\n\t\t\t// controllerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tspinner: '=piSpinner'\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('utils/helperDirectives/helperDirectivesModule',['require','angular','./piSwap/piSwapDirective','./piSpinner/piSpinnerDirective'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('piHelperDirective', []);\n\n\tmodule.directive('piSwap', require('./piSwap/piSwapDirective'));\n\tmodule.directive('piSpinner', require('./piSpinner/piSpinnerDirective'));\n\n\treturn module;\n});\n","define('taskManager/managerService',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmanagerService.$inject = ['$rootScope', '$q', 'managerSequence', 'managerTaskLoad', '$injector'];\n\tfunction managerService($rootScope, $q, ManagerSequence, taskLoad, $injector){\n\n\t\t/**\n\t\t * This is the constructor for the manager object.\n\t\t *\n\t\t * The manager is responsible for the interface between the managerDirective and the managerSequence\n\t\t * It deals with loading tasks (pulled from the sequence)\n\t\t * And notifying the directive that a new task is ready to be run.\n\t\t *\n\t\t * listens to manager:next and manager:prev ==> proceeds sequence\n\t\t *\n\t\t * emits manager:loaded <== when a script is loaded\n\t\t *\n\t\t * @param  {Scope} $scope The scope to be notified\n\t\t * @param  {Object} script The manager script to be parsed\n\t\t * @return {Object}\n\t\t */\n\t\tfunction manager($scope, script){\n\t\t\tvar self = this;\n\t\t\tvar settings = script.settings || {};\n\n\t\t\t// make sure this works without a new statement\n\t\t\tif (!(this instanceof manager)){\n\t\t\t\t// jshint newcap:false\n\t\t\t\treturn new manager($scope,script);\n\t\t\t\t// jshint newcap:true\n\t\t\t}\n\n\t\t\tthis.$scope = $scope;\n\t\t\tthis.script = script;\n\n\t\t\t// create sequence\n\t\t\tthis.sequence = new ManagerSequence(script);\n\n\t\t\t// activate all setup stuff\n\t\t\tsetup($scope, settings);\n\n\t\t\t$scope.$on('manager:next', function(event, target){\n\t\t\t\ttarget || (target = {type:'next'});\n\t\t\t\tswitch (target.type){\n\t\t\t\t\tcase 'current':\n\t\t\t\t\t\tself.load(target);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prev':\n\t\t\t\t\t\tself.prev(target);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t/* fall through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tself.next(target);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$scope.$on('manager:prev', function(){self.prev();});\n\n\t\t}\n\n\t\t_.extend(manager.prototype, {\n\t\t\tnext: function(target){\n\t\t\t\tthis.sequence.next();\n\t\t\t\tthis.load(target);\n\t\t\t},\n\n\t\t\tprev: function(target){\n\t\t\t\tthis.sequence.prev();\n\t\t\t\tthis.load(target);\n\t\t\t},\n\n\t\t\tcurrent: function(){\n\t\t\t\t// taskLoad sets the loaded script into $script\n\t\t\t\treturn this.sequence.current();\n\t\t\t},\n\n\t\t\tload: function(target){\n\t\t\t\tvar task = this.current();\n\t\t\t\tvar $scope = this.$scope;\n\t\t\t\tvar loadOptions = {\n\t\t\t\t\tbaseUrl: this.baseUrl,\n\t\t\t\t\tbustCache: target && target.bustCache\n\t\t\t\t};\n\n\t\t\t\tif (task){\n\t\t\t\t\ttaskLoad(task, loadOptions).then(function(){\n\t\t\t\t\t\t$scope.$emit('manager:loaded');\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// let the directive deal with the end of the sequence\n\t\t\t\t\t$scope.$emit('manager:loaded');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetBaseUrl: function(baseUrl){\n\t\t\t\tthis.baseUrl = baseUrl;\n\t\t\t}\n\t\t});\n\n\t\treturn manager;\n\n\t\t// just to separate the activation of all the settings: KISS\n\t\tfunction setup($scope, settings){\n\t\t\tvar canvas = $injector.get('managerCanvas');\n\t\t\tvar $document = $injector.get('$document');\n\t\t\tvar preloader = $injector.get('piPreloader');\n\t\t\tvar canvasOff;\n\n\t\t\t// activate canvas\n\t\t\tcanvasOff = canvas(settings.canvas);\n\t\t\t$scope.$on('$destroy', canvasOff);\n\n\t\t\t// preload images\n\t\t\tpreloader.loadArr('image',settings.preloadImages || []);\n\n\t\t\t// activate titles\n\t\t\tif (settings.title){\n\t\t\t\t$document[0].title = settings.title;\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\treturn managerService;\n\n});\n\n","define('taskManager/managerSequence',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tsequenceProvider.$inject = ['Database'];\n\tfunction sequenceProvider(Database){\n\n\t\t/**\n\t\t * The sequence for the manager (essentialy the model).\n\t\t * @param  {Object} script A manager script.\n\t\t * @return {Object}\n\t\t */\n\t\tfunction sequence(script){\n\t\t\tvar db;\n\t\t\t// make sure this works without a new statement\n\t\t\tif (!(this instanceof sequence)){\n\t\t\t\t// jshint newcap:false\n\t\t\t\treturn new sequence(script);\n\t\t\t\t// jshint newcap:true\n\t\t\t}\n\n\t\t\t// setup database\n\t\t\tdb = this.db = new Database();\n\t\t\tdb.createColl('tasks');\n\t\t\tdb.add('tasks', script.tasksSets || []);\n\n\t\t\t// setup sequence\n\t\t\tthis.sequence = db.sequence('tasks', script.sequence);\n\t\t}\n\n\t\t_.extend(sequence.prototype, {\n\t\t\tnext: function(){\n\t\t\t\tthis.sequence.next();\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tprev: function(){\n\t\t\t\tthis.sequence.prev();\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tcurrent: function(){\n\t\t\t\treturn this.sequence.current();\n\t\t\t}\n\t\t});\n\n\t\treturn sequence;\n\t}\n\n\treturn sequenceProvider;\n});\n","/**\n * @name: managerLoadService\n * @returns {$q} A $q.promise that returns the target script\n */\ndefine('taskManager/managerLoadService',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tmanagerLoadService.$inject = ['$q', 'managerGetScript'];\n\tfunction managerLoadService($q, getScript){\n\n\t\tfunction managerLoadScript(source){\n\t\t\tvar promise = _.isString(source) ? getScript(source) : source;\n\t\t\treturn $q.when(promise);\n\t\t}\n\n\t\treturn managerLoadScript;\n\t}\n\n\treturn managerLoadService;\n});\n","define('taskManager/managerGetScriptService',['require'],function(require){\n\n\tgetScriptProvider.$inject = ['$q'];\n\tfunction getScriptProvider($q){\n\n\t\t// @TODO: separate the parsing into a different module (make this a dependency)\n\t\tfunction getScript(url, options){\n\t\t\toptions || (options = {});\n\t\t\tvar def = $q.defer(),\n\t\t\t\ttarget = \"\";\n\n\t\t\t// if url doesn't starts with / or has : then add baseUrl\n           \t/^\\/|:/.test(url) || (target += options.baseUrl ? options.baseUrl + '/' : \"\");\n\n            target += url;\n\n            options.isText && (target = 'text!' + target);\n            options.bustCache && (target += \"?bust=\" + (new Date()).getTime());\n\n\t\t\trequire([target], function(script){\n\t\t\t\tdef.resolve(script);\n\t\t\t}, function(err){\n\t\t\t\tdef.reject(err);\n\t\t\t});\n\n\t\t\treturn def.promise;\n\t\t}\n\n\t\treturn getScript;\n\t}\n\n\treturn getScriptProvider;\n\n});\n","/**\n * @name: taskLoadProvider\n * @returns {$q} A $q.promise that returns the target script\n */\ndefine('taskManager/managerTaskLoadService',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttaskLoadService.$inject = ['$q', 'managerGetScript', 'piConsole'];\n\tfunction taskLoadService($q, managerGetScript, $console){\n\n\t\tfunction getScript(url, options){\n\t\t\treturn managerGetScript(url, options)\n\t\t\t\t// make sure that the script is defined\n\t\t\t\t// and if not throw an appropriate error\n\t\t\t\t.then(function(script){\n\t\t\t\t\tvar e;\n\t\t\t\t\tif (_.isUndefined(script)){\n\t\t\t\t\t\te = new Error('Task ' + url + ' failed or has not been found. Make sure that you returned the script and that your script does not have any errors');\n\t\t\t\t\t\t$console('task').error(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn script;\n\t\t\t\t});\n\t\t}\n\n\t\tfunction taskLoad(task, options){\n\t\t\tvar promise, script, template;\n\n\t\t\t// script def\n\t\t\tif (task.scriptUrl){\n\t\t\t\tscript = getScript(task.scriptUrl, options);\n\t\t\t} else {\n\t\t\t\tscript = task.script;\n\t\t\t}\n\n\t\t\t// template def\n\t\t\tif (task.templateUrl){\n\t\t\t\ttemplate = getScript(task.templateUrl, _.extend({isText:true},options));\n\t\t\t} else {\n\t\t\t\ttemplate = task.template;\n\t\t\t}\n\n\t\t\tif (!script && !template){\n\t\t\t\tthrow new Error('Tasks must have either a \"script\" property or a \"scriptUrl\" property (or a \"template\" property in specific cases).');\n\t\t\t}\n\n\t\t\tpromise = $q.all({script: $q.when(script), template: $q.when(template)});\n\n\t\t\tpromise.then(function(promises){\n\t\t\t\ttask.$script = promises.script;\n\t\t\t\ttask.$template = promises.template;\n\t\t\t\treturn task;\n\t\t\t}, function(e){\n\t\t\t\t$console('load').error('Failed to load task script - make sure that your URLs are all correct.',e);\n\t\t\t});\n\n\t\t\treturn promise;\n\t\t}\n\n\t\treturn taskLoad;\n\t}\n\n\treturn taskLoadService;\n});\n","/**\n * Should manage various tasks.\n * For now it should simply load and activate a questionnaire.\n * Eventually it should be able to take a sequence of tasks and run them.\n * @name  managerDirctive\n * @return {directive}\n */\ndefine('taskManager/managerDirective',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tmanagerControler.$inject = ['$scope', 'managerService', 'managerLoad', 'piConsole'];\n\tfunction managerControler($scope, ManagerService, managerLoad, piConsole){\n\t\tthis.init = init;\n\n\n\t\tfunction init(source){\n\t\t\tvar ctrl = this;\n\t\t\tvar taskSource;\n\n\t\t\ttry {\n\t\t\t\ttaskSource = $scope.$eval(source); // if source is a plain string eval returns undefined so we want to load this as a url\n\t\t\t} catch(e){\n\t\t\t\t// don't do anything. This means that the source is un compilable...\n\t\t\t} finally {\n\t\t\t\ttaskSource || (taskSource = source);\n\t\t\t}\n\n\t\t\tmanagerLoad(taskSource).then(success,error);\n\n\t\t\tfunction success(script){\n\t\t\t\t// takes taskSource and returns a path or undefined\n\t\t\t\tfunction getPath(path){\n\n\t\t\t\t\tif (!_.isString(path)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn path.substring(0, path.lastIndexOf('/'));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// keep the script on scope\n\t\t\t\t$scope.script = script;\n\t\t\t\t$scope.settings = (script && script.settings) || {};\n\n\t\t\t\t// create the manager\n\t\t\t\tctrl.manager = new ManagerService($scope, script);\n\t\t\t\tctrl.manager.setBaseUrl(getPath(taskSource));\n\n\t\t\t\t// activate first task\n\t\t\t\t$scope.$emit('manager:next');\n\t\t\t}\n\n\t\t\tfunction error(e){\n\t\t\t\tpiConsole('manager').error('Failed to load ' + taskSource, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tdirective.$inject = ['$q', '$injector', 'piConsole'];\n\tfunction directive($q, $injector,piConsole){\n\t\treturn {\n\t\t\tpriority: 1000,\n\t\t\treplace:true,\n\t\t\ttemplate: '<div pi-swap><div pi-task=\"task\" ng-class=\"{\\'pi-spinner\\':loading}\"></div></div>',\n\t\t\tcontroller: managerControler,\n\t\t\trequire: ['piManager', 'piSwap'],\n\t\t\tlink:  function($scope, $element, attr, ctrl){\n\t\t\t\tvar swap = ctrl[1], thisCtrl = ctrl[0];\n\t\t\t\tvar currentTask, prevTask;\n\n\t\t\t\tthisCtrl.init(attr.piManager);\n\n\t\t\t\t$scope.$on('manager:loaded', loaded);\n\t\t\t\t$scope.$on('task:done', taskDone);\n\t\t\t\t$scope.loading = true;\n\n\t\t\t\tfunction loaded(){\n\t\t\t\t\t$scope.loading = false;\n\n\t\t\t\t\t// keep previous task\n\t\t\t\t\tprevTask = currentTask;\n\n\t\t\t\t\t// get loaded task\n\t\t\t\t\tcurrentTask = thisCtrl.manager.current();\n\t\t\t\t\tpiConsole('manager').debug('Manager:currentTask', currentTask);\n\n\t\t\t\t\t// procced or and manager\n\t\t\t\t\tcurrentTask ? proceed() : done();\n\t\t\t\t}\n\n\t\t\t\tfunction proceed(){\n\t\t\t\t\tvar locals = {prevTask: prevTask, currentTask: currentTask};\n\t\t\t\t\t$qSequence([\n\t\t\t\t\t\t$scope.settings.onPreTask,\n\t\t\t\t\t\tprevTask && prevTask.post,\n\t\t\t\t\t\tcurrentTask.pre,\n\t\t\t\t\t\t_.bind(swap.next, swap, {task:currentTask, settings:$scope.settings}),\n\t\t\t\t\t\tfunction(){\n\t\t\t\t\t\t\t$scope.loading = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t], locals);\n\t\t\t\t}\n\n\t\t\t\tfunction done(){\n\t\t\t\t\tvar locals = {prevTask: prevTask, currentTask: currentTask};\n\t\t\t\t\t$qSequence([\n\t\t\t\t\t\tprevTask && prevTask.post,\n\t\t\t\t\t\t_.bind(swap.empty, swap),\n\t\t\t\t\t\t$scope.settings.onEnd,\n\t\t\t\t\t\tfunction(){\n\t\t\t\t\t\t\t$scope.loading = false;\n\t\t\t\t\t\t\t$scope.$emit('manager:done');\n\t\t\t\t\t\t}\n\t\t\t\t\t], locals);\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * This is called uppon task:done\n\t\t\t\t * It is responsible for proceeding to the following task\n\t\t\t\t * @param  {Event} ev   The event that triggered the taskdone\n\t\t\t\t * @param  {Object} args An object that describes the direction of proceeding\n\t\t\t\t */\n\t\t\t\tfunction taskDone(ev, args){\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t$scope.loading = true;\n\t\t\t\t\t$scope.$emit('manager:next', args);\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * chain a series of functions/promises/undefined\n\t\t\t\t * @param  {Array} arr an array of functions etc.\n\t\t\t\t * @return {promise}\n\t\t\t\t */\n\t\t\t\tfunction $qSequence(arr, locals){\n\t\t\t\t\tvar promise = $q.when();\n\n\t\t\t\t\t_(arr)\n\t\t\t\t\t\t// map into then functions\n\t\t\t\t\t\t.map(function(value){\n\t\t\t\t\t\t\treturn function(){\n\t\t\t\t\t\t\t\tvar prms = _.isFunction(value) ? $injector.invoke(value,null,locals||{}) : value;\n\t\t\t\t\t\t\t\treturn $q.when(prms);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce(function(promise, fn){\n\t\t\t\t\t\t\treturn promise.then(fn, function(e){\n\t\t\t\t\t\t\t\tpiConsole('manager').error('There was an error in the task sequence. ',e);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, promise);\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t}\n\n\n\treturn directive;\n});\n","define('taskManager/managerTaskDirective',[],function(){\n\n\tfunction directive(){\n\t\treturn {\n\t\t\tpriority: 1000,\n\t\t\ttemplate: '<div pi-manager=\"script\"></div>',\n\t\t\tcompile: function(){\n\t\t\t\treturn {\n\t\t\t\t\t// this need to be pre so that the wrapping directive gets rendered before the template\n\t\t\t\t\tpre: function($scope, $element, $attr){\n\t\t\t\t\t\tvar taskSource;\n\t\t\t\t\t\tvar source = $attr.piManagerTask;\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\ttaskSource = $scope.$eval(source);\n\t\t\t\t\t\t} catch(e){}\n\n\t\t\t\t\t\tvar task  = taskSource ? taskSource : {scriptUrl:source};\n\n\t\t\t\t\t\t$scope.script = {\n\t\t\t\t\t\t\tsequence: [task]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('taskManager/managerModule',['require','angular','./task/taskModule','./canvas/canvasModule','utils/utils/utilsModule','utils/helperDirectives/helperDirectivesModule','utils/console/consoleModule','./managerService','./managerSequence','./managerLoadService','./managerGetScriptService','./managerTaskLoadService','./managerDirective','./managerTaskDirective'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('taskManager',[\n\t\trequire('./task/taskModule').name,\n\t\trequire('./canvas/canvasModule').name,\n\t\trequire('utils/utils/utilsModule').name,\n\t\trequire('utils/helperDirectives/helperDirectivesModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.service('managerService', require('./managerService'));\n\tmodule.service('managerSequence', require('./managerSequence'));\n\tmodule.service('managerLoad', require('./managerLoadService'));\n\tmodule.service('managerGetScript', require('./managerGetScriptService'));\n\tmodule.service('managerTaskLoad', require('./managerTaskLoadService'));\n\tmodule.directive('piManager', require('./managerDirective'));\n\tmodule.directive('piManagerTask', require('./managerTaskDirective'));\n\n\treturn module;\n});\n","// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\ndefine('utils/animations/rafPolyfill',[],function() {\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n        var vp = vendors[i];\n        window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n        window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame'] || window[vp+'CancelRequestAnimationFrame']);\n    }\n    if (\n    \t/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || // iOS6 is buggy\n        !window.requestAnimationFrame || !window.cancelAnimationFrame\n    ) {\n        var lastTime = 0;\n        window.requestAnimationFrame = function(callback) {\n            var now = +new Date();\n            var nextTime = Math.max(lastTime + 16, now);\n            return setTimeout(function() { callback(lastTime = nextTime); },\n                              nextTime - now);\n        };\n        window.cancelAnimationFrame = clearTimeout;\n    }\n});\n\n","define('utils/animations/dropInAnimation',[],function(){\n\n\tfunction animation($window, now){\n\n\t\tvar topdx = 60;\n\t\tvar duration = 300;\n\t\tvar raf = $window.requestAnimationFrame;\n\t\tvar rafCancel = $window.cancelAnimationFrame;\n\n\t\treturn {\n\t\t\tenter: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// setup\n\t\t\t\telement.css({\n\t\t\t\t\ttop: -topdx +'px'\n\t\t\t\t});\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(enter);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\telement.css({top: '0px'});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction enter(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.top = 0;\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.top = (topdx * (proportion-1)) + 'px';\n\t\t\t\t\tcancelId = raf(enter);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tleave: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(leave);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction leave(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = 1-deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.top = (topdx * (proportion-1)) + 'px';\n\t\t\t\t\tcancelId = raf(leave);\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t}\n\n\t// $inject doesn't seem to work??\n \treturn ['$window', 'timerNow', animation];\n});\n","define('utils/animations/fadeAnimation',[],function(){\n\n\tfunction animation($window, now){\n\n\t\tvar duration = 300;\n\t\tvar raf = $window.requestAnimationFrame;\n\t\tvar rafCancel = $window.cancelAnimationFrame;\n\n\t\treturn {\n\t\t\tenter: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// setup\n\t\t\t\tel.style.opacity = 0;\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(enter);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.opacity = 1;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction enter(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.opacity = 1;\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.opacity = proportion;\n\t\t\t\t\tcancelId = raf(enter);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tleave: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(leave);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction leave(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = 1-deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.opacity = 0;\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.opacity = proportion;\n\t\t\t\t\tcancelId = raf(leave);\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t}\n\n\t// $inject doesn't seem to work??\n \treturn ['$window', 'timerNow', animation];\n});\n","define('utils/animations/slideAnimation',[],function(){\n\n\tfunction animation($window, now){\n\n\t\tvar duration = 300;\n\t\tvar raf = $window.requestAnimationFrame;\n\t\tvar rafCancel = $window.cancelAnimationFrame;\n\n\t\treturn {\n\t\t\tenter: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// setup\n\t\t\t\tel.style.left = '-100%';\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(enter);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.left = '0%';\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction enter(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = 1 - deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.left = '0%';\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.left = (-proportion*100) + '%';\n\n\t\t\t\t\tcancelId = raf(enter);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tleave: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(leave);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.left = '100%';\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction leave(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.left = '100%';\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.left = (proportion*100) + '%';\n\t\t\t\t\tcancelId = raf(leave);\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t}\n\n\t// $inject doesn't seem to work??\n \treturn ['$window', 'timerNow', animation];\n});\n","define('utils/animations/animationModule',['require','angular','animate','./rafPolyfill','./dropInAnimation','./fadeAnimation','./slideAnimation'],function(require){\n\tvar angular = require('angular');\n\trequire('animate');\n\trequire('./rafPolyfill');\n\n\tvar module = angular.module('pi.animate',['ngAnimate']);\n\n\tmodule.animation('.drop-in', require('./dropInAnimation'));\n\tmodule.animation('.fade', require('./fadeAnimation'));\n\tmodule.animation('.slide', require('./slideAnimation'));\n\n\treturn module;\n});\n","/**\n *\tThe main module that ties the whole application together.\n *\tEssentially, we are creating a module with dependencies on anything interesting...\n */\ndefine('app',['require','angular','underscore','quest/questModule','message/messageModule','taskManager/managerModule','utils/animations/animationModule','utils/console/consoleModule'],function (require) {\n\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\n\tvar submodules = [\n\t\trequire('quest/questModule').name,\n\t\trequire('message/messageModule').name,\n\t\trequire('taskManager/managerModule').name,\n\t\trequire('utils/animations/animationModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t];\n\n\tvar app = angular.module('piApp', submodules);\n\n\t// setup the global variable\n\tapp.run(['$rootScope', '$rootElement', '$parse', '$window', function($rootScope, $rootElement, $parse, $window){\n\t\t// @TODO: get these out of here (app.config? app.run?)\n\t\tvar globalAttr = $rootElement.attr('pi-global');\n\t\tvar piGlobal = $parse(globalAttr)($window);\n\n\t\t// create the global object\n\t\twindow.piGlobal || (window.piGlobal = {});\n\t\t$rootScope.global = window.piGlobal;\n\n\t\tif (piGlobal){\n\t\t\t_.extend($rootScope.global, piGlobal);\n\t\t}\n\t}]);\n\n\t// monkey patch an IOS8 problem\n\t// https://github.com/angular/angular.js/issues/9128\n\tapp.config(['$provide', function($provide) {\n\n\t\t// http://ejohn.org/blog/objectgetprototypeof/\n\t    if ( typeof Object.getPrototypeOf !== \"function\" ) {\n\t      if ( typeof \"test\".__proto__ === \"object\" ) {\n\t        Object.getPrototypeOf = function(object){\n\t          return object.__proto__;\n\t        };\n\t      } else {\n\t        Object.getPrototypeOf = function(object){\n\t          // May break if the constructor has been tampered with\n\t          return object.constructor.prototype;\n\t        };\n\t      }\n\t    }\n\n\n\n\t  // Minification-safe hack.\n\t  var $$watchers = '$$watchers',\n\t      $$nextSibling = '$$nextSibling',\n\t      $$childHead = '$$childHead',\n\t      $$childTail = '$$childTail',\n\t      $$listeners = '$$listeners',\n\t      $$listenerCount = '$$listenerCount',\n\t      $id = '$id',\n\t      $$childScopeClass = '$$childScopeClass',\n\t      $parent = '$parent',\n\t      $$prevSibling = '$$prevSibling';\n\n\t  $provide.decorator('$rootScope', ['$delegate', function($rootScope) {\n\t    var proto = Object.getPrototypeOf($rootScope);\n\n\t    function nextUid () {\n\t      return ++$rootScope.$id;\n\t    }\n\n\t    proto.$new = function(isolate) {\n\t      var child;\n\n\t      if (isolate) {\n\t        child = new proto.constructor();\n\t        child.$root = this.$root;\n\t        // ensure that there is just one async queue per $rootScope and its children\n\t        child.$$asyncQueue = this.$$asyncQueue;\n\t        child.$$postDigestQueue = this.$$postDigestQueue;\n\t      } else {\n\t        // Only create a child scope class if somebody asks for one,\n\t        // but cache it to allow the VM to optimize lookups.\n\t        if (!this.$$childScopeClass) {\n\t          this.$$childScopeClass = function() {\n\t            this[$$watchers] = this[$$nextSibling] =\n\t                this[$$childHead] = this[$$childTail] = null;\n\t            this[$$listeners] = {};\n\t            this[$$listenerCount] = {};\n\t            this[$id] = nextUid();\n\t            this[$$childScopeClass] = null;\n\t          };\n\t          this.$$childScopeClass.prototype = this;\n\t        }\n\t        child = new this.$$childScopeClass();\n\t      }\n\t      child['this'] = child;\n\t      child[$parent] = this;\n\t      child[$$prevSibling] = this.$$childTail;\n\t      if (this.$$childHead) {\n\t        this.$$childTail.$$nextSibling = child;\n\t        this.$$childTail = child;\n\t      } else {\n\t        this.$$childHead = this.$$childTail = child;\n\t      }\n\t      return child;\n\t    };\n\n\t    $rootScope.$new = proto.$new;\n\t    return $rootScope;\n\t  }]);\n\n\t}]);\n\n\n\treturn app;\n});\n","define(\"pipScorer/computeD\",[\"jquery\"],function(e){function r(){e.extend(this,{dataArray:{},AnalyzedVar:\"latency\",ErrorVar:\"error\",condVar:\"\",cond1VarValues:[],cond2VarValues:[],parcelVar:\"\",parcelValue:[],fastRT:300,maxFastTrialsRate:.1,minRT:400,maxRT:1e4,maxErrorParcelRate:.4,errorLatency:{use:\"latency\",penalty:600,useForSTD:!0},postSettings:{}})}return e.extend(r.prototype,{setComputeObject:function(r){e.extend(this,r)},setDataArray:function(){var e=window.piGlobal;this.dataArray=e.current.logs}}),r}),define(\"pipScorer/msgMan\",[\"underscore\"],function(e){function r(){this.messages=e.extend({},a)}var a={MessageDef:[],manyErrors:\"There were too many errors made to determine a result.\",tooFast:\"There were too many fast trials to determine a result.\",notEnough:\"There were not enough trials to determine a result.\"};return e.extend(r.prototype,{setMsgObject:function(r){e.extend(this.messages,r)},getScoreMsg:function(r){var a=this.messages.MessageDef;if(!a||!a.length)throw new Error('You must define a \"MessageDef\" array.');var t=parseFloat(r),n=null,o=null,s=\"error: msg was not set\",c=!1;if(e.each(a,function(e){n=parseFloat(e.cut),o=e.message,n>=t&&!c&&(s=o,c=!0)}),!c){var i=a.length,u=a[i-1];s=u.message}return s},getMessage:function(e){return this.messages[e]}}),r}),define(\"pipScorer/parcelMng\",[\"underscore\"],function(e){function r(e){this.parcelArray=[],this.scoreData={},this.msgMan=e}return e.extend(r.prototype,{Init:function(r){var a=this,t=this.msgMan,n=window.piGlobal,o=n.current.logs;a.parcelArray=[],a.scoreData={},a.msgMan=t;var s=r.AnalyzedVar,c=r.ErrorVar,i=r.parcelVar,u=r.parcelValue,l=r.minRT,g=r.maxRT,h=r.fastRT,p=0,f=0,d=0,v=0,m=parseFloat(r.maxFastTrialsRate);if(\"undefined\"==typeof u||0===u.length){d=0,p=0,f=0,v=0;var y={};y.name=\"general\",y.trialIData=[],e.each(o,function(e){e[s]>=l&&e[s]<=g?(d++,1==e.data[c]&&v++,a.validate(y,e,r)&&p++):e[s]<=h&&f++}),a.checkErrors(d,v,r),a.parcelArray[0]=y}else e.each(u,function(t,n){d=0,p=0,f=0,v=0;var u={};u.name=t,u.trialIData=[],e.each(o,function(e){var n=e.data[i];n==t&&(e[s]>=l&&e[s]<=g?(d++,1==e.data[c]&&v++,a.validate(u,e,r)&&p++):e[s]<=h&&f++)}),a.checkErrors(d,v,r),a.parcelArray[n]=u});f/p>m&&(a.scoreData.errorMessage=this.msgMan.getMessage(\"tooFast\"))},checkErrors:function(e,r,a){var t=a.maxErrorParcelRate;r/e>t&&(this.scoreData.errorMessage=this.msgMan.getMessage(\"manyErrors\"))},validate:function(e,r,a){var t=a.errorLatency,n=a.ErrorVar,o=r.data;return\"latency\"==t.use?(e.trialIData.push(r),!0):\"false\"==t.use?\"1\"==o[n]?!1:(e.trialIData.push(r),!0):\"penalty\"==t.use?(e.trialIData.push(r),!0):void 0},addPenalty:function(r,a){var t=a.errorLatency,n=this;if(\"penalty\"==t.use){var o=parseFloat(t.penalty),s=a.ErrorVar,c=a.AnalyzedVar,i=a.condVar,u=a.cond1VarValues,l=a.cond2VarValues,g=r.trialIData,h=r.avgCon1,p=r.avgCon2;e.each(g,function(e){var r=e.data,a=r[s],t=r[i],g=n.checkArray(t,u),f=n.checkArray(t,l);\"1\"==a&&(g?e[c]+=h+o:f&&(e[c]+=p+o))})}},avgAll:function(r){var a=this;e.each(a.parcelArray,function(e){a.avgParcel(e,r)})},avgParcel:function(r,a){var t=this,n=r.trialIData,o=a.condVar,s=a.cond1VarValues,c=a.cond2VarValues,i=a.AnalyzedVar,u=0,l=0,g=0,h=0,p=0,f=0;e.each(n,function(e){var r=e[i],a=e.data;g+=r,f++;var n=a[o],d=t.checkArray(n,s),v=t.checkArray(n,c);d?(h++,u+=r):v&&(p++,l+=r)}),(2>=h||2>=p)&&(t.scoreData.errorMessage=this.msgMan.getMessage(\"notEnough\")),0!==h&&(u/=h),0!==p&&(l/=p),r.avgCon1=u,r.avgCon2=l,r.diff=r.avgCon1-r.avgCon2,0!==f&&(r.avgBoth=g/f),t.addPenalty(r,a)},checkArray:function(e,r){for(var a=0;a<r.length;a++){var t=r[a];if(t==e)return!0}return!1},varianceAll:function(r){var a=this;e.each(a.parcelArray,function(e){a.varianceParcel(e,r)})},varianceParcel:function(r,a){var t=this,n=a.AnalyzedVar,o=r.trialIData,s=a.cond1VarValues,c=a.cond2VarValues,i=a.condVar,u=r.avgBoth,l=0,g=0,h=[],p=[],f=[],d=a.errorLatency,v=d.useForSTD;e.each(o,function(e){var r=e.data,o=e[n],u=a.ErrorVar,l=r[u],g=r[i],f=t.checkArray(g,s),d=t.checkArray(g,c);f?v?h.push(o):\"0\"==l&&h.push(o):d&&(v?p.push(o):\"0\"==l&&h.push(o))}),f=h.concat(p),e.each(f,function(e){var r=e;l=r-u,g+=l*l}),r.variance=g/(f.length-1)},scoreAll:function(r){var a=this,t=0;e.each(a.parcelArray,function(e){a.scoreParcel(e,r),t+=e.score});var n=t/a.parcelArray.length;a.scoreData.score=n.toFixed(2)},scoreParcel:function(e){var r=this,a=Math.sqrt(e.variance);0===a?(r.scoreData.errorMessage=this.msgMan.getMessage(\"notEnough\"),e.score=e.diff):e.score=e.diff/a}}),r}),define(\"pipScorer/Scorer\",[\"jquery\",\"./computeD\",\"./msgMan\",\"./parcelMng\"],function(e,r,a,t){function n(){this.computeData=new r,this.msgMan=new a,this.parcelMng=new t(this.msgMan)}return!!window.console||(console={log:e.noop,error:e.noop}),console.log||(console.log=function(){}),e.extend(n.prototype,{addSettings:function(e,r){switch(e){case\"compute\":this.computeData.setComputeObject(r);break;case\"message\":this.msgMan.setMsgObject(r);break;default:throw new Error('SCORER:addSettings: unknow \"type\" '+e)}},computeD:function(){var e=this.computeData,r=this.parcelMng;e.setDataArray(),r.Init(e),r.avgAll(e),r.varianceAll(e),r.scoreAll(e);var a=r.scoreData,t={};return void 0===a.errorMessage||null===a.errorMessage?(t.FBMsg=this.getFBMsg(a.score),t.DScore=a.score):(t.FBMsg=a.errorMessage,t.DScore=\"\"),t},postToServer:function(r,a,t,n){var o=this.computeData.postSettings||{},s=o.url,c={};return t||(t=o.score),n||(n=o.msg),c[t]=r,c[n]=a,e.post(s,JSON.stringify(c))},dynamicPost:function(r){var a=this.computeData.postSettings||{},t=a.url;return e.post(t,JSON.stringify(r))},getFBMsg:function(e){var r=this.msgMan.getScoreMsg(e);return r}}),n}),define(\"pipScorer\",[\"pipScorer/Scorer\"],function(e){return e});\n//# sourceMappingURL=Scorer.js.map;\ndefine('pipScorer', ['pipScorer/Scorer'], function (main) { return main; });\n\n","define('APIs/APIConstructor',['require','underscore'],function(require){\n\n\twindow.piGlobal || (window.piGlobal = {});\n\n\tvar _ = require('underscore');\n\tvar global = window.piGlobal;\n\n\t/**\n\t * Create a new API\n\t * @param {Object} options\n\t * {\n\t * \t\ttype: 'PIP',\n\t * \t\tsets: ['trial', 'stimulus', 'media']\n\t * }\n\t */\n\tfunction APIconstructor(options){\n\n\t\tfunction API(){\n\t\t\tvar script = this.script = {\n\t\t\t\tname: 'anonymous ' + options.type,\n\t\t\t\tsettings: {},\n\t\t\t\tcurrent: {}, // this is the actual namespace for this PIP\n\t\t\t\tsequence: []\n\t\t\t};\n\n\t\t\tthis.settings = script.settings;\n\n\t\t\t// create set arrays\n\t\t\t_.forEach(options.sets, function(set){\n\t\t\t\tscript[set + 'Sets'] = [];\n\t\t\t});\n\t\t}\n\n\t\t_.forEach(options.sets, function(set){\n\t\t\tAPI.prototype[_.camelCase('add-' + set + '-set')] = add_set(set);\n\t\t});\n\n\t\t_.extend(API.prototype, {\n\n\t\t\tsetName: function(name){\n\t\t\t\tthis.script.name = name;\n\t\t\t},\n\n\t\t\t// settings\n\t\t\taddSettings: function(name, settingsObj){\n\t\t\t\tvar settings;\n\n\n\n\t\t\t\tif (_.isPlainObject(settingsObj)){\n\t\t\t\t\tsettings = this.settings[name] = this.settings[name] || {};\n\t\t\t\t\t_.extend(settings, settingsObj);\n\t\t\t\t} else {\n\t\t\t\t\tthis.settings[name] = settingsObj;\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\taddSequence: function(sequence){\n\t\t\t\tvar script = this.script;\n\t\t\t\t_.isArray(sequence) || (sequence = [sequence]);\n\n\t\t\t\tscript.sequence = script.sequence.concat(sequence);\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\taddGlobal: function(obj){\n\t\t\t\tif (!_.isPlainObject(obj)){\n\t\t\t\t\tthrow new Error('global must be an object');\n\t\t\t\t}\n\t\t\t\treturn _.merge(global, obj);\n\t\t\t},\n\n\t\t\tgetGlobal: function(){\n\t\t\t\treturn global;\n\t\t\t},\n\n\t\t\taddCurrent: function(obj){\n\t\t\t\tif (!_.isPlainObject(obj)){\n\t\t\t\t\tthrow new Error('current must be an object');\n\t\t\t\t}\n\t\t\t\treturn _.merge(this.script.current, obj);\n\t\t\t},\n\n\t\t\tgetCurrent: function(){\n\t\t\t\treturn this.script.current;\n\t\t\t},\n\n\t\t\t// push a whole script\n\t\t\taddScript: function(obj){\n\t\t\t\treturn _.merge(this.script,obj);\n\t\t\t},\n\n\t\t\t// returns script (for debuging probably)\n\t\t\tgetScript: function(){\n\t\t\t\treturn this.script;\n\t\t\t},\n\n\t\t\t// name, response, taskName, taskNumber\n\t\t\tpost: function(url, obj){\n\t\t\t\t// just so we can use this in standalone PIP\n\t\t\t\tif (require.defined('jquery')){\n\t\t\t\t\treturn require('jquery' + '').ajax({\n\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tdata: JSON.stringify(obj),\n\t\t\t\t\t\tcontentType: \"application/json; charset=utf-8\",\n\t\t\t\t\t\tdataType: \"json\"\n\t\t\t\t\t});\n\n\t\t\t\t\t//.post(url, JSON.stringify(obj));\n\t\t\t\t} else {\n\t\t\t\t\tvar $injector = angular.injector(['ng']);\n\n\t\t\t\t\treturn $injector.invoke(['$http', function($http){\n\t\t\t\t\t\treturn $http.post(url, obj);\n\t\t\t\t\t}]);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tshuffle: function(collection){\n\t\t\t\treturn _.shuffle(collection);\n\t\t\t}\n\t\t});\n\n\t\treturn API;\n\n\t}\n\n\n\t /**\n\t  * Create a function that adds sets of a scpecific type\n\t  * @param {String} type  \tThe type of set setter to create\n\t  * @returns {Function} \tA setter object\n\t  */\n\tfunction add_set(type){\n\n\t\t/**\n\t\t * Adds a set to the targetSet\n\t\t * @param {String, Object} set    \tEither full set object, or the name of this setArr\n\t\t * @param {Array} setArr \t\t\tAn array of objects for this set\n\t\t * @returns {Object} The API object\n\t\t *\n\t\t * use examples:\n\t\t * fn({\n\t\t *   intro: [intro1, intro2],\n\t\t *   Default: [defaultTrial]\n\t\t * })\n\t\t * fn('intro',[intro1, intro2])\n\t\t * fn('Default',defaultTrial)\n\t\t *\n\t\t */\n\t\tfunction setSetter(set, setArr){\n\n\t\t\t// get the sets we want to extend (or create them)\n\t\t\tvar targetSets = this.script[type + \"Sets\"] || (this.script[type + \"Sets\"] = []);\n\t\t\tvar list;\n\n\t\t\tif (_.isPlainObject(set)) {\n\t\t\t\tlist = _(set)\n\t\t\t\t\t// for each set of elements\n\t\t\t\t\t.map(function(value, key){\n\t\t\t\t\t\t// add the set name to each key\n\t\t\t\t\t\t_.each(value, function(v){v.set = key;});\n\t\t\t\t\t\treturn value; // return the set\n\t\t\t\t\t})\n\t\t\t\t\t.flatten() // flatten all sets to a single array\n\t\t\t\t\t.value();\n\t\t\t}\n\n\t\t\tif (_.isArray(set)){\n\t\t\t\tlist = set;\n\t\t\t}\n\n\t\t\tif (_.isString(set)){\n\t\t\t\tlist = _.isArray(setArr) ? setArr : [setArr];\n\t\t\t\tlist = _.map(list, function(value){\n\t\t\t\t\tvalue.set = set;\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\t// merge the list into the targetSet\n\t\t\ttargetSets.push.apply(targetSets, list);\n\t\t}\n\n\t\treturn setSetter;\n\t}\n\n\treturn APIconstructor;\n});\n","define('pipAPI/pipAPI',['require','APIs/APIConstructor'],function(require){\n\tvar factory = require('APIs/APIConstructor');\n\n\tvar api = factory({\n\t\ttype: 'PIP',\n\t\tsets: ['trial', 'stimulus','media']\n\t});\n\n\tapi.prototype.addTrialSets = api.prototype.addTrialSet;\n\tapi.prototype.addStimulusSets = api.prototype.addStimulusSet;\n\tapi.prototype.addMediaSets = api.prototype.addMediaSet;\n\n\tapi.prototype.getLogs = function getLogs(){\n\t\treturn this.script.current.logs;\n\t};\n\n\treturn api;\n});\n","define('questAPI/questAPI',['require','APIs/APIConstructor'],function(require){\n\tvar api = require('APIs/APIConstructor');\n\n\treturn api({\n\t\ttype: 'quest',\n\t\tsets: ['pages', 'questions']\n\t});\n});\n","define('managerAPI/managerAPI',['require','APIs/APIConstructor'],function(require){\n\tvar api = require('APIs/APIConstructor');\n\n\treturn api({\n\t\ttype: 'manager',\n\t\tsets: ['tasks']\n\t});\n});\n"]}