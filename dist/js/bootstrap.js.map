{"version":3,"file":"bootstrap.js","sources":["config.js","bootstrap.js","utils/timer/timerStopper.js","utils/timer/timerDirective.js","utils/timer/timerNow.js","utils/timer/timer-module.js","utils/utils/preloaderService.js","utils/utils/preloaderDecorator.js","utils/utils/utilsModule.js","quest/directives/buttons/buttons.js","utils/database/template/templateFilter.js","utils/database/template/templateObjProvider.js","utils/database/template/templateModule.js","utils/console/consoleProvider.js","utils/console/consolePrototypeProvider.js","utils/console/console.html!text","utils/console/consoleDirective.js","utils/console/consoleModule.js","utils/modal/modal.html!text","utils/modal/modalService.js","utils/modal/modalModule.js","quest/directives/questController.js","quest/directives/piQuest/piQuest.html!text","quest/directives/piQuest/piQuest-directive.js","quest/directives/piQuest/piqPage.html!text","quest/directives/piQuest/piqPage-directive.js","quest/directives/wrapper/wrapper.html!text","quest/directives/wrapper/wrapper-directive.js","quest/directives/text/text.html!text","quest/directives/text/textarea.html!text","quest/directives/text/textDirective.js","text!quest/directives/text/text-number.html","quest/directives/text/text-number-directive.js","quest/directives/select/selectMixerProvider.js","quest/directives/select/dropdown.html!text","quest/directives/select/dropdownDirective.js","quest/directives/select/selectOne.html!text","quest/directives/select/selectOneDirective.js","quest/directives/select/selectMulti.html!text","quest/directives/select/selectMultiDirective.js","quest/directives/grid/grid.html!text","quest/directives/grid/gridDirective.js","quest/directives/grid/gridRow.html!text","quest/directives/grid/gridRowDirective.js","quest/directives/slider/slider.html!text","quest/directives/slider/sliderDirective.js","quest/directives/slider/slider.js","quest/directives/toRegexFilter.js","quest/directives/dfltUnitsFilter.js","quest/directives/questDirectivesModule.js","utils/logger/LoggerProvider.js","utils/logger/logger-module.js","utils/database/randomize/randomizeModule.js","utils/database/mixer/mixer.js","utils/database/mixer/mixerSequential.js","utils/database/mixer/mixerRecursive.js","utils/database/mixer/mixerSequenceProvider.js","utils/database/mixer/branching/dotNotation.js","utils/database/mixer/branching/mixerDotNotationProvider.js","utils/database/mixer/branching/mixerConditionProvider.js","utils/database/mixer/branching/mixerEvaluateProvider.js","utils/database/mixer/branching/mixerBranchingDecorator.js","utils/database/mixer/mixerModule.js","utils/database/collection/collectionProvider.js","utils/database/randomizer/randomizerProvider.js","utils/database/queryProvider.js","utils/database/inflateProvider.js","utils/database/store/storeProvider.js","utils/database/databaseProvider.js","utils/database/databaseSequenceProvider.js","utils/database/databaseModule.js","quest/task/questSequenceProvider.js","quest/task/taskProvider.js","quest/task/parseProvider.js","quest/task/dfltQuestLogger.js","quest/task/task-module.js","quest/questModule.js","message/messageDirective.js","message/messageDoneDirective.js","message/messageModule.js","taskManager/task/taskActivateProvider.js","taskManager/task/taskDirective.js","taskManager/task/taskModule.js","taskManager/canvas/canvasConstructor.js","taskManager/canvas/managerCanvasService.js","taskManager/canvas/canvasModule.js","utils/helperDirectives/piSwap/piSwapDirective.js","utils/helperDirectives/piSpinner/spinner.html!text","utils/helperDirectives/piSpinner/piSpinnerDirective.js","utils/helperDirectives/helperDirectivesModule.js","taskManager/managerService.js","taskManager/managerSequence.js","taskManager/managerLoadService.js","taskManager/managerGetScriptService.js","taskManager/managerTaskLoadService.js","taskManager/managerDirective.js","taskManager/managerTaskDirective.js","taskManager/managerModule.js","utils/animations/rafPolyfill.js","utils/animations/dropInAnimation.js","utils/animations/fadeAnimation.js","utils/animations/slideAnimation.js","utils/animations/animationModule.js","app.js","../../bower_components/PIPlayer/dist/js/extensions/dscore/Scorer.js","APIs/APIConstructor.js","APIs/pipAPI.js","APIs/questAPI.js","APIs/managerAPI.js"],"names":["define","require","config","paths","underscore","angular","animate","text","jquery","packages","name","location","main","shim","exports","deps","window","app","element","ready","setTimeout","resumeBootstrap","stopperProvider","now","Stopper","this","startTime","prototype","$inject","timerController","$timeout","TimerStopper","timerStart","options","_","isPlainObject","Error","$scope","ctrl","getScope","defaults","direction","template","show","removeOnEnd","duration","stopper","targetTime","tick","timerStop","cancel","timeoutId","remove","INTERVAL","timeLeft","$emit","currentTime","extend","milisToTime","Math","min","time","secs","floor","hours","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","current","milis","start","stop","timerDirective","$compile","controller","priority","link","$element","$attr","$timerElement","prepend","contents","localScope","$new","zeroPad","n","$on","nowFn","performance","mozNow","webkitNow","msNow","oNow","apply","Date","module","service","directive","value","preloaderService","$q","loaders","loaded","preloaderRegister","type","fn","isFunction","preloaderLoad","description","promise","resultObj","loader","getObj","push","call","isPromiseLike","then","result","preloaderLoadArr","descriptions","defs","isArray","map","load","all","preloaderGetObj","find","loadObj","preloaderGet","register","loadArr","get","preloaderDecorator","preloader","imageLoader","url","def","defer","img","Image","onload","bind","resolve","onerror","reject","src","$provide","decorator","$injector","piInvoke","locals","global","$rootScope","invoke","constant","activeClass","toggleEvent","buttonConfig","scope","attrs","ctrls","buttonsCtrl","ngModelCtrl","$render","toggleClass","equals","$modelValue","$eval","btnRadio","isActive","hasClass","isDefined","uncheckable","$apply","$setViewValue","getTrueValue","getCheckboxValue","btnCheckboxTrue","getFalseValue","btnCheckboxFalse","attributeValue","defaultValue","val","templateFilter","$log","defaultContext","input","context","indexOf","e","error","message","templateObjProvider","$filter","templateObj","deepTemplate","forEach","key","expand","deep","includes","isString","filter","mapValues","consoleProvider","consolePrototype","Console","tags","force","$console","create","consoleSetSettings","settings","setSettings","consolePrototypeProvider","shouldLog","level","targetLevel","targetTags","LOGFUNCTIONS","LEVELS","intersection","length","createLog","i","args","arguments","hideConsole","each","none","warn","info","log","debug","replace","index","logs","splice","reverse","stringify","pretty","toJson","modalConstructor","$rootElement","$document","modalCleanup","$destroy","deferred","$backDrop","off","removeClass","modalOpener","close","on","header","body","button","addClass","$digest","open","questController","$parse","piConsole","registerModel","ngModel","correctValidator","response","correctValue","data","isNumber","isEqual","$setValidity","ngModelGet","dfltValue","hasOwnProperty","dflt","model","$parent","isUndefined","assign","self","serial","size","questions","$viewValue","$formatters","modelValue","$parsers","viewValue","latency","pristineLatency","$watch","newValue","oldValue","onChange","onDestroy","correct","onCreate","NaN","event","preventDefault","declined","undefined","submitLatency","onSubmit","onDecline","timeout","onTimeout","piQuestCtrl","Task","templateDefaultContext","mixerDefaultContext","next","target","task","prev","script","pageData","$animate","terminal","parentElement","attr","cleanupLastPage","previousElement","currentScope","currentElement","leave","newPage","page","newScope","tempElm","jqLite","addAnimations","enter","refresh","animationsStr","animations","split","animation","has","piqPageCtrl","piModal","pageRefresh","pageSetup","timer","timerEnd","$broadcast","pagesMeta","$meta","pagesData","$context","timerProceed","submit","submitOnEnd","harvest","lognow","q","$logged","skipValidation","valid","pageForm","$valid","submitAttempt","proceed","decline","$event","$el","notDoubleClick","setup","$ctrl","capitaliseFirstLetter","string","charAt","toUpperCase","slice","questElement","children","eq","attrName","PREFIX","kebabCase","textDirective","el","textTemplate","textareaTemplate","controllerAs","maxlengthLimit","$input","limit","maxlength","form","autoSubmit","which","minValidator","parseFloat","isNaN","maxValidator","max","selectMixerProvider","shuffle","mixer","selectMixer","answersArr","answers","answer","numericValues","randomize","order","quest","chooseText","requiredValidator","$isEmpty","html","required","unshift","buttons","style","listCss","listItemCss","listClass","listItemClass","lineHeight","minWidth","isEmpty","chosen","pluck","gridDirective","mapColumns","columns","objectify","column","tap","noReverse","reverseValue","commit","mapRows","rows","row","zerofill","thru","identity","stem","w","an","abs","digitCount","LN10","zeroString","pow","toString","substr","$watchCollection","responses","reduce","total","isFinite","gridRowDirective","newVal","$response","sliderDirective","root","factory","amd","join","setValue","percentage","steppedPercentage","steps","round","renderView","showHandle","handleDisplay","highlightDisplay","highlight","highlightStyle","right","display","handleStyle","left","toPercentage","range","fromPercentage","toFixed","onHandleMousedown","mouseMove","fixEvent","basePercentage","pageX","basePosition","prop","sliderHandleWidth","mouseUp","SLIDER_CHANGE_EVENT","stopPropagation","onSliderMouseDown","sliderWidth","sliderPosition","getBoundingClientRect","querySelector","clientWidth","pipWidth","labels","labelsWidth","getNumber","num","Array","eventDoc","doc","clientX","ownerDocument","document","documentElement","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","toRegexFilter","toRegex","err","isRegExp","RegExp","dfltUnits","unit","suffix","isNumeric","String","$sceProvider","enabled","transclude","unvalid","loggerProvider","$http","Logger","dfltLogFn","pending","sent","meta","suppress","a","logObj","logFn","logCounter","pulse","send","success","post","sendData","suppressPulse","getCount","$get","provider","random","mixProvider","mix","mixerName","mixers","remix","$parsed","wrapper","repeat","sequence","times","concat","clone","randomDeepMixer","arr","seq","choose","take","weightedRandom","total_weight","weights","cur","random_num","weight_sum","mixerSequentialProvider","mixerSequential","depth","mixed","shift","mixerRecursiveProvider","mixerRecursive","flatten","mixerSequenceProvider","MixerSequence","stack","add","pointer","subSequence","isNext","pop","number","outOf","memo","sub","dotNotation","chain","mixerDotNotationProvider","mixerDotNotation","escapeSeparatorRegex","test","mixerConditionProvider","mixerCondition","condition","operator","compare","to","evaluateProvider","evaluate","conditions","cond","and","every","nand","or","some","nor","mixerBranchingDecorator","branch","elseData","multiBranch","branches","collectionService","Collection","collection","first","last","end","previous","list","at","methods","method","coll","RandomizerProvider","randomizeInt","randomizeRange","Randomizer","_cache","exRandom","sequential","seed","cache","queryProvider","queryFn","query","randomizer","set","where","handle","namespace","JSON","inflateProvider","customize","source","inflate","recursive","parent","child","cloneDeep","inheritObj","inherit","merge","childProp","parentProp","storeProvider","Store","store","nameSpace","read","update","del","DatabaseProvider","DatabaseSequence","Database","createColl","getColl","$inflated","reinflate","$templated","regenerateTemplate","SequenceProvider","Sequence","db","mixerSequence","questionsArr","TaskProvider","QuestSequence","parse","dfltQuestLogger","logger","onEnd","noop","nextObj","parseProvider","pagesSets","questionsSets","DEBUG","responseObj","onKeydown","keyArr","keys","charCodeAt","done","empty","events","$template","activators","taskActivateProvider","taskActivate","activator","destroy","$script","play","annotate","activateTask","canvas","$window","proceedListener","keyCode","ctrlKey","one","skipListener","proceedObject","bustCache","canvasOff","oldTitle","taskName","skip","piGlobal","title","activateProvider","activateQuest","$canvas","append","activateMessage","activatePIP","req","requirejs","uniqueId","baseUrl","backbone","activate","canvasContructor","offArr","rule","property","old","css","managerCanvasService","$body","background","canvasBackground","fontSize","fontColor","canvasConstructor","swapControler","swapDirective","compile","pre","$ctrls","$transclude","cleanupLast","opts","postLeave","props","spinner","managerService","ManagerSequence","taskLoad","manager","preloadImages","loadOptions","setBaseUrl","sequenceProvider","tasksSets","managerLoadService","getScript","managerLoadScript","when","getScriptProvider","isText","getTime","taskLoadService","managerGetScript","scriptUrl","templateUrl","promises","managerControler","ManagerService","managerLoad","init","getPath","path","substring","lastIndexOf","taskSource","loading","prevTask","currentTask","thisCtrl","$qSequence","onPreTask","swap","taskDone","ev","prms","piManager","piManagerTask","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","clearTimeout","topdx","raf","rafCancel","deltaTime","proportion","top","cancelId","canceled","opacity","submodules","run","globalAttr","r","dataArray","AnalyzedVar","ErrorVar","condVar","cond1VarValues","cond2VarValues","parcelVar","parcelValue","fastRT","maxFastTrialsRate","minRT","maxRT","maxErrorParcelRate","errorLatency","use","penalty","useForSTD","postSettings","setComputeObject","setDataArray","messages","MessageDef","manyErrors","tooFast","notEnough","setMsgObject","getScoreMsg","t","o","s","c","cut","u","getMessage","parcelArray","scoreData","msgMan","Init","l","g","h","p","f","d","v","m","y","trialIData","validate","checkErrors","errorMessage","addPenalty","avgCon1","avgCon2","checkArray","avgAll","avgParcel","diff","avgBoth","varianceAll","varianceParcel","variance","scoreAll","scoreParcel","score","sqrt","computeData","parcelMng","console","addSettings","computeD","FBMsg","getFBMsg","DScore","postToServer","msg","dynamicPost","APIconstructor","API","sets","camelCase","add_set","setName","settingsObj","addSequence","addGlobal","getGlobal","addCurrent","getCurrent","addScript","defined","ajax","contentType","dataType","injector","setSetter","setArr","targetSets","api","addTrialSets","addTrialSet","addStimulusSets","addStimulusSet","addMediaSets","addMediaSet","getLogs"],"mappings":"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","sourcesContent":["/*jshint unused: vars */\ndefine('config',[],function(){\n\trequire.config({\n\t\tpaths: {\n\t\t\t// libs\n\t\t\tunderscore: [\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min\",\"../../bower_components/lodash-compat/lodash.min\"],\n\t\t\t//angular: '../../bower_components/angular/angular',\n\t\t\tangular: ['//ajax.googleapis.com/ajax/libs/angularjs/1.2.26/angular.min','../../bower_components/angular/angular.min'],\n\t\t\tanimate: ['//ajax.googleapis.com/ajax/libs/angularjs/1.2.26/angular-animate.min', '../../bower_components/angular-animate/angular-animate.min'],\n\t\t\ttext: ['//cdnjs.cloudflare.com/ajax/libs/require-text/2.0.10/text.min','../../bower_components/requirejs-text/text'],\n\n\t\t\t// this lib is needed for pipScorer\n\t\t\tjquery: [\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min\",\"../../bower_components/jquery/dist/jquery.min\"]\n\t\t},\n\n\t\tpackages:[\n\t\t\t{\n\t\t\t\tname: 'pipScorer',\n\t\t\t\tlocation: '../../bower_components/PIPlayer/dist/js/extensions/dscore',\n\t\t\t\tmain: 'Scorer'\n\t\t\t}\n\t\t],\n\t\tshim: {\n\t\t\tangular : {exports : 'angular'},\n\t\t\tanimate : {deps: ['angular'], exports: 'angular'}\n\t\t},\n\t\tdeps: [\n\t\t\t// The APIs are preloaded into the app so we don't have to set them as dependencies here\n\t\t\t'angular', 'animate', 'underscore','text'\n\t\t]\n\t});\n\n\t//http://code.angularjs.org/1.2.1/docs/guide/bootstrap#overview_deferred-bootstrap\n\twindow.name = 'NG_DEFER_BOOTSTRAP!';\n});\n","/*jshint unused: vars */\ndefine('bootstrap',['./config'], function(){\n\n\trequire.config({\n\t\tpackages: [\n\t\t\t{name: 'pipAPI', location:'APIs', main:'pipAPI'},\n\t\t\t{name: 'questAPI', location:'APIs', main:'questAPI'},\n\t\t\t{name: 'managerAPI', location:'APIs', main:'managerAPI'}\n\t\t]\n\t});\n\n\t// resume boot strap\n\t// http://stackoverflow.com/a/25770449/1400366\n\t// The angular.js detects dom ready via JQLite. When the document loads, it triggers a method which defines the resumeBootstrap method.\n\t// The problem is that you cannot enforce processing order between domready and JQLite ready,\n\t// if domready already fulfills your dependency before the method gets defined, you are in trouble.\n\t// The workaround is to enforce javascript to execute all event handlers before your resumeBootstrap invocation.\n\t// I've used the setTimeout method to do so, e.g.: setTimeout(angular.resumeBootstrap, 0).\n\trequire(['angular','app'], function(angular, app) {\n\t\tangular.element().ready(function() {\n\t\t\tsetTimeout(function(){\n\t\t\t\tangular.resumeBootstrap([app.name]);\n\t\t\t},0);\n\t\t});\n\t});\n});\n","/**\n * a stopper\n */\n\ndefine('utils/timer/timerStopper',[],function(){\n\n\tstopperProvider.$inject = ['timerNow'];\n\tfunction stopperProvider(now){\n\t\tfunction Stopper(){\n\t\t\tthis.startTime = now();\n\t\t}\n\n\t\tStopper.prototype.now = function(){\n\t\t\treturn now() - this.startTime;\n\t\t};\n\n\t\treturn Stopper;\n\t}\n\n\treturn stopperProvider;\n\n});\n","/**\n * The piTimer directive lies dormant on its parent element\n * When \"start(options)\" is called it starts a timer\n *\n * options:\n * direction: up/down (default)\n * show: display counter\n * remove: remove counter when timer ends\n * duration: how long...\n *\n */\ndefine('utils/timer/timerDirective',['require','underscore','angular'],function (require) {\n\n\tvar _ = require('underscore');\n\tvar angular = require('angular');\n\n\ttimerController.$inject = ['$timeout','timerStopper'];\n\tfunction timerController($timeout, TimerStopper){\n\t\tvar ctrl = this;\n\t\tvar $scope = {}; // the local scope that we created (fake object for case we attempt to access scope before we set it...)\n\t\tctrl.start = timerStart;\n\t\tctrl.stop = timerStop;\n\n\t\tfunction timerStart(options){\n\t\t\tif (!_.isPlainObject(options)){\n\t\t\t\tthrow new Error('Timer options must be an object');\n\t\t\t}\n\n\t\t\t$scope = ctrl.getScope(); // get the local scope that we created\n\n\t\t\t$scope.options = _.defaults(options, {\n\t\t\t\tdirection : 'down',\n\t\t\t\ttemplate : 'normal',\n\t\t\t\tshow : true,\n\t\t\t\tremoveOnEnd : true,\n\t\t\t\tduration : 0 // in seconds\n\t\t\t});\n\n\t\t\t// translate duratio to ms\n\t\t\tctrl.stopper = new TimerStopper();\n\t\t\tctrl.targetTime = $scope.options.duration * 1000;\n\n\t\t\t$scope.options.show && ctrl.show();\n\n\t\t\t// activate the timer\n\t\t\ttick();\n\t\t}\n\n\t\tfunction timerStop(){\n\t\t\tvar options = $scope.options || {};\n\t\t\t$scope = ctrl.getScope(); // get the local scope that we created\n\t\t\t$timeout.cancel(ctrl.timeoutId);\n\t\t\toptions.removeOnEnd && ctrl.remove();\n\t\t}\n\n\t\tfunction tick(){\n\t\t\t// update scope\n\t\t\tvar INTERVAL = 100;\n\t\t\tvar options = $scope.options;\n\t\t\tvar now = ctrl.stopper.now();\n\t\t\tvar timeLeft = ctrl.targetTime - now;\n\n\n\t\t\tif (now >= ctrl.targetTime){\n\t\t\t\t$scope.$emit('timer-end');\n\t\t\t\toptions.removeOnEnd && ctrl.remove();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// time to show and parse\n\t\t\tvar currentTime = options.direction === 'up' ? now : timeLeft;\n\n\t\t\t// update scope with times\n\t\t\t_.extend($scope, milisToTime(currentTime));\n\t\t\tctrl.timeoutId = $timeout(tick, Math.min(INTERVAL,timeLeft));\n\t\t\t$scope.$emit('timer-tick');\n\t\t}\n\n\t\tfunction milisToTime(time){\n\t\t\tvar secs = Math.floor(time/1000);\n\t\t\tvar hours = Math.floor(secs / (60 * 60));\n\n\t\t\tvar divisor_for_minutes = secs % (60 * 60);\n\t\t\tvar minutes = Math.floor(divisor_for_minutes / 60);\n\n\t\t\tvar divisor_for_seconds = divisor_for_minutes % 60;\n\t\t\tvar seconds = Math.ceil(divisor_for_seconds);\n\n\t\t\tvar obj = {\n\t\t\t\tcurrent: time,\n\t\t\t\thours: hours,\n\t\t\t\tminutes: minutes,\n\t\t\t\tseconds: seconds,\n\t\t\t\tmilis: time % 1000\n\t\t\t};\n\t\t\treturn obj;\n\t\t}\n\t}\n\n\ttimerDirective.$inject = ['$compile'];\n\tfunction timerDirective($compile){\n\t\treturn {\n\t\t\tcontroller: timerController,\n\t\t\tpriority: 400,\n\t\t\tlink: function($scope, $element,$attr,ctrl){\n\t\t\t\tvar template = '<div class=\"pi-timer well well-sm text-center\" style=\"font-family: monospace;\">{{minutes}}:{{zeroPad(seconds)}}</div>';\n\t\t\t\tvar $timerElement;\n\t\t\t\tvar localScope = $scope.$new();\n\n\t\t\t\tctrl.show = show;\n\t\t\t\tctrl.remove = remove;\n\t\t\t\tctrl.getScope = function(){return localScope;};\n\n\t\t\t\tlocalScope.zeroPad = function pad(n){return n<10 ? '0'+n : n;};\n\t\t\t\t$scope.$on('$destroy',remove);\n\n\t\t\t\tfunction show(){\n\t\t\t\t\t$timerElement = angular.element(template);\n\t\t\t\t\t$element.prepend($timerElement);\n\t\t\t\t\t$compile($timerElement.contents())(localScope);\n\t\t\t\t}\n\n\t\t\t\tfunction remove(){\n\t\t\t\t\t$timerElement && $timerElement.remove();\n\t\t\t\t\t$timerElement = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn timerDirective;\n});\n","/* global performance */\n\n/**\n * Returns current time (uses performance if possible).\n * Notably, this function return either time since epoch or since startup. It is useful only for latency calculations.\n * @return {integer} [Time in ms]\n */\ndefine('utils/timer/timerNow',[],function(){\n\n\tvar nowFn;\n\n\t// if performance is set, look for the now function\n\tif (!!window.performance) {\n\t\tnowFn = performance.now ||\n\t\tperformance.mozNow ||\n\t\tperformance.webkitNow ||\n\t\tperformance.msNow ||\n\t\tperformance.oNow;\n\t}\n\n\t// if we have now proxy it (so it uses perfomance as \"this\")\n\t// otherwise use regular date/time\n\treturn nowFn ?\n\t\tfunction now(){return nowFn.apply(performance);}\n\t\t: function now(){ return +new Date();};\n\n});\n","define('utils/timer/timer-module',['require','angular','./timerStopper','./timerDirective','./timerNow'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('timer',[]);\n\n\tmodule.service('timerStopper', require('./timerStopper'));\n\tmodule.directive('piTimer', require('./timerDirective'));\n\tmodule.value('timerNow', require('./timerNow'));\n\n\treturn module;\n});\n","define('utils/utils/preloaderService',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tpreloaderService.$inject = ['$q'];\n\tfunction preloaderService($q){\n\t\tthis.$q = $q;\n\t\tthis.loaders = {};\n\t\tthis.loaded = [];\n\t}\n\n\t_.extend(preloaderService.prototype, {\n\t\tregister: preloaderRegister,\n\t\tload: preloaderLoad,\n\t\tloadArr: preloaderLoadArr,\n\t\tget: preloaderGet,\n\t\tgetObj: preloaderGetObj\n\t});\n\n\treturn preloaderService;\n\n\t/**\n\t * register loader\n\t * loader functions take a single parameter: the description\n\t * and return a promise to be resolved with the result.\n\t *\n\t * @param  {String}   type The loader type\n\t * @param  {Function} fn   The loader function itself (should return a promise to be resolved with the result)\n\t */\n\tfunction preloaderRegister(type, fn){\n\t\tif (!_.isFunction(fn)){\n\t\t\tthrow new Error('Fn is not a function');\n\t\t}\n\n\t\tthis.loaders[type] = fn;\n\t}\n\n\tfunction preloaderLoad(type, description){\n\t\tvar loader = this.loaders[type];\n\t\tvar promise, resultObj;\n\n\t\t// check if this description has already been loaded\n\t\tresultObj = this.getObj(type, description);\n\t\tif (!resultObj){\n\t\t\tresultObj = {type:type, description:description};\n\t\t\tthis.loaded.push(resultObj);\n\t\t} else {\n\t\t\treturn resultObj.promise;\n\t\t}\n\n\t\t// make sure loader was registered\n\t\tif (!_.isFunction(loader)){\n\t\t\tthrow new Error('Loader \"' + type + '\" was not registered.');\n\t\t}\n\n\t\t// call loader\n\t\tpromise = resultObj.promise = loader.call(this, description);\n\n\t\t// make sure loader returns a promise\n\t\tif (!isPromiseLike(promise)){\n\t\t\tthrow new Error('Loader \"' + type + '\" must return a promise.');\n\t\t}\n\n\t\t// save result into the loaded array (we use an array in order to allow non string descriptions)\n\t\tpromise.then(function(result){\n\t\t\tresultObj.promise = null; // so that the promise can be garbage collected\n\t\t\tresultObj.value = result;\n\t\t\treturn result;\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\tfunction preloaderLoadArr(type, descriptions){\n\t\tvar $q = this.$q;\n\t\tvar defs;\n\n\t\tif (!_.isArray(descriptions)){\n\t\t\tthrow new Error('descriptions must be an array.');\n\t\t}\n\n\t\tdefs = _.map(descriptions, function(description){\n\t\t\treturn this.load(type, description);\n\t\t}, this);\n\n\t\treturn $q.all(defs);\n\t}\n\n\tfunction preloaderGetObj(type, description){\n\t\t// get the\n\t\tvar result = _.find(this.loaded, function(loadObj){\n\t\t\treturn loadObj.type === type && loadObj.description === description;\n\t\t}, this);\n\n\t\treturn result;\n\t}\n\n\tfunction preloaderGet(type, description){\n\t\tvar result = this.getObj(type, description);\n\n\t\tif (!('value' in result)){\n\t\t\tthrow new Error('This object has not been loaded yet: \"' + description + '\"');\n\t\t}\n\n\t\treturn result.value;\n\t}\n\n\tfunction isPromiseLike(obj){\n\t\treturn _.isPlainObject(obj) && _.isFunction(obj.then);\n\t}\n});\n","define('utils/utils/preloaderDecorator',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tpreloaderDecorator.$inject = ['$delegate'];\n\tfunction preloaderDecorator(preloader){\n\t\tpreloader.register('image', imageLoader);\n\t\treturn preloader;\n\t}\n\n\tfunction imageLoader(url){\n\t\tvar def = this.$q.defer();\n\t\tvar img = new Image();\t// create img object\n\t\timg.onload = _.bind(def.resolve, def, img);\n\t\timg.onerror = _.bind(def.reject, def, img);\n\t\timg.src = url;\n\t\treturn def.promise;\n\t}\n\n\treturn preloaderDecorator;\n});\n","define('utils/utils/utilsModule',['require','angular','underscore','./preloaderService','./preloaderDecorator'],function(require){\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\tvar module = angular.module('pi.utils',[]);\n\n\tmodule.service('piPreloader', require('./preloaderService'));\n\tmodule.config(['$provide', function($provide){\n\t\t$provide.decorator('piPreloader', require('./preloaderDecorator'));\n\t}]);\n\n\n\n\t/**\n\t * Wrapper for angular invoke.\n\t * Injects global and current automatically.\n\t *\n\t * @param {Function} fn The function to invoke\n\t * @param {Object} locals Locals to add to angualr invoke\n\t */\n\tmodule.service('piInvoke', ['$injector',function($injector){\n\t\tvar $rootScope = $injector.get('$rootScope');\n\n\t\tfunction piInvoke(fn, locals){\n\t\t\tvar global = $rootScope.global || {};\n\n\t\t\t// if fn is undefined don't get all mushy about it\n\t\t\tif (!fn){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$injector.invoke(fn, null, _.extend(locals, {\n\t\t\t\tglobal: global,\n\t\t\t\tcurrent: global.current\n\t\t\t}));\n\t\t}\n\n\t\treturn piInvoke;\n\t}]);\n\n\treturn module;\n});\n","define('quest/directives/buttons/buttons',['require','angular'],function(require){\n\tvar angular = require('angular');\n\treturn angular\n\n\t.module('ui.bootstrap.buttons', [])\n\n\t.constant('buttonConfig', {\n\t\tactiveClass: 'active',\n\t\ttoggleEvent: 'click'\n\t})\n\n\t.controller('ButtonsController', ['buttonConfig', function(buttonConfig) {\n\t\tthis.activeClass = buttonConfig.activeClass || 'active';\n\t\tthis.toggleEvent = buttonConfig.toggleEvent || 'click';\n\t}])\n\n\t.directive('btnRadio', function () {\n\t\treturn {\n\t\t\trequire: ['btnRadio', 'ngModel'],\n\t\t\tcontroller: 'ButtonsController',\n\t\t\tlink: function (scope, element, attrs, ctrls) {\n\t\t\t\tvar buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n\t\t\t\t//model -> UI\n\t\t\t\tngModelCtrl.$render = function () {\n\t\t\t\t\telement.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n\t\t\t\t};\n\n\t\t\t\t//ui->model\n\t\t\t\telement.bind(buttonsCtrl.toggleEvent, function () {\n\t\t\t\t\tvar isActive = element.hasClass(buttonsCtrl.activeClass);\n\n\t\t\t\t\tif (!isActive || angular.isDefined(attrs.uncheckable)) {\n\t\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\t\tngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.btnRadio));\n\t\t\t\t\t\t\tngModelCtrl.$render();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})\n\n\t.directive('btnCheckbox', function () {\n\t\treturn {\n\t\t\trequire: ['btnCheckbox', 'ngModel'],\n\t\t\tcontroller: 'ButtonsController',\n\t\t\tlink: function (scope, element, attrs, ctrls) {\n\t\t\t\tvar buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n\t\t\t\tfunction getTrueValue() {\n\t\t\t\t\treturn getCheckboxValue(attrs.btnCheckboxTrue, true);\n\t\t\t\t}\n\n\t\t\t\tfunction getFalseValue() {\n\t\t\t\t\treturn getCheckboxValue(attrs.btnCheckboxFalse, false);\n\t\t\t\t}\n\n\t\t\t\tfunction getCheckboxValue(attributeValue, defaultValue) {\n\t\t\t\t\tvar val = scope.$eval(attributeValue);\n\t\t\t\t\treturn angular.isDefined(val) ? val : defaultValue;\n\t\t\t\t}\n\n\t\t\t\t//model -> UI\n\t\t\t\tngModelCtrl.$render = function () {\n\t\t\t\t\telement.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n\t\t\t\t};\n\n\t\t\t\t//ui->model\n\t\t\t\telement.bind(buttonsCtrl.toggleEvent, function () {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n\t\t\t\t\t\tngModelCtrl.$render();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n});\n","define('utils/database/template/templateFilter',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttemplateFilter.$inject = ['$log','templateDefaultContext'];\n\tfunction templateFilter($log, defaultContext){\n\n\t\tfunction template(input, context){\n\n\t\t\t// if there is no template just return the string\n\t\t\tif (!~input.indexOf('<%')){\n\t\t\t\treturn input;\n\t\t\t}\n\n\t\t\t// build context (extend it with the default context)\n\t\t\tcontext = _.extend(context || {}, defaultContext);\n\n\t\t\t// filters don't throw errors when used from within templates\n\t\t\t// therefore we need catch any errors here... (we may decide to drop this if it hits performance too mutch...)\n\t\t\ttry{\n\t\t\t\treturn _.template(input)(context);\n\t\t\t} catch(e){\n\t\t\t\t$log.error(\"ERROR: \\\"\" + e.message + \"\\\" in the following template: \", input);\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t}\n\n\t\treturn template;\n\n\t}\n\n\treturn templateFilter;\n});\n","define('utils/database/template/templateObjProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttemplateObjProvider.$inject = ['$filter'];\n\tfunction templateObjProvider($filter){\n\t\tvar filter = $filter('template');\n\n\t\tfunction templateObj(obj, context, options){\n\t\t\toptions || (options = {});\n\t\t\tvar deepTemplate = obj.deepTemplate;\n\n\t\t\t_.forEach(obj, function(value,key,obj){\n\t\t\t\tobj[key] = expand(value, context, {deep: _.includes(deepTemplate, key)});\n\t\t\t});\n\n\t\t\treturn obj;\n\t\t}\n\n\t\treturn templateObj;\n\n\t\tfunction expand(value, context, options){\n\t\t\tvar deep = options && options.deep;\n\n\t\t\tif (_.isString(value)){\n\t\t\t\treturn filter(value, context);\n\t\t\t}\n\n\t\t\tif (deep && _.isArray(value)){\n\t\t\t\treturn _.map(value, _.bind(expand, null, _, context, options));\n\t\t\t}\n\n\t\t\tif (deep && _.isPlainObject(value)){\n\t\t\t\treturn _.mapValues(value, _.bind(expand, null, _, context, options));\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t}\n\n\n\treturn templateObjProvider;\n});\n","define('utils/database/template/templateModule',['require','angular','./templateFilter','./templateObjProvider'],function(require){\n\tvar angular = require('angular');\n\n\tvar module = angular.module('template', []);\n\n\tmodule.filter('template', require('./templateFilter'));\n\tmodule.service('templateObj', require('./templateObjProvider'));\n\tmodule.constant('templateDefaultContext',{});\n\n\treturn module;\n});\n","/**\n * A factory for $console\n *\n * each $console is prototyped on `consolePrototype`\n */\ndefine('utils/console/consoleProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tconsoleProvider.$inject = ['piConsolePrototype'];\n\n\tfunction consoleProvider(consolePrototype){\n\n\t\t// decorate Console with a simple settings manager\n\t\tConsole.setSettings = consoleSetSettings;\n\n\t\treturn Console;\n\n\t\tfunction Console(tags, force){\n\t\t\tvar $console = _.create(consolePrototype);\n\n\t\t\t_.extend($console, {\n\t\t\t\ttags: _.isArray(tags) ? tags : [tags], // make sure tags is an array\n\t\t\t\tforce: !!force\n\t\t\t});\n\n\t\t\treturn $console;\n\t\t}\n\n\t\t// a mehtod of console\n\t\tfunction consoleSetSettings (settings) {\n\t\t\tconsolePrototype.settings = settings;\n\t\t}\n\n\t}\n\n\treturn consoleProvider;\n});\n","/**\n * This is our $console object.\n * It is a bit weird as it is supposed to work in concert with the consoleProvider.\n *\n * it depends on `tags` {Array} and `force` {Boolean} to be set externaly.\n *\n * {\n * \t\tlog: logFn\n * \t\tinfo: infoFn\n * \t\tshouldLog: fn that test whether as specific level should be logged\n * \t\tsettings: settingsObj ==> to be set from piConsole\n * \t\ttags: ['tag1'] // to be compared to settings.tags ==> to be set from piConsole\n * \t\tforce: false // ignore tags and level ==> to be set from piConsole\n * }\n */\ndefine('utils/console/consolePrototypeProvider',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\tvar LOGFUNCTIONS = ['log', 'info', 'warn', 'error', 'debug'];\n\tvar LEVELS = {none:9, error:1, warn:2, info:3, log:4, debug:4};\n\n\tconsolePrototypeProvider.$inject = ['$log', '$rootScope'];\n\tfunction consolePrototypeProvider ($log, $rootScope) {\n\t\t/**\n\t\t * Create the prototype for the instances of piConsole\n\t\t */\n\t\tvar consolePrototype = {};\n\n\t\t// add logging function\n\t\t_.each(LOGFUNCTIONS, function(level){\n\t\t\tconsolePrototype[level] = createLog(level);\n\t\t});\n\n\t\t// default settings\n\t\tconsolePrototype.settings = {};\n\n\t\t// the function that checks if this instance\n\t\tconsolePrototype.shouldLog = shouldLog;\n\n\t\t// if we want the individual functions to be seperable sometime...\n\t\t//_.bindAll(consolePrototype);\n\n\t\treturn consolePrototype;\n\n\t\t/**\n\t\t * This function is a method of the consolePrototype.\n\t\t * It accesses the global settings, and the definitions set by Console and returns whether we should log\n\t\t *\n\t\t * @param  {String} level \tThe level of logging we are testing\n\t\t * @return {Boolean}\t\tWhether to log this or not\n\t\t */\n\t\tfunction shouldLog(level){\n\t\t\tvar targetLevel = this.settings.level || 'error'; // levels set to show\n\t\t\tvar targetTags = this.settings.tags || 'all'; // tags set to show\n\t\t\tvar tags = this.tags;\n\t\t\tvar force = this.force;\n\n\t\t\tif (force){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check if this level should *not* be logged\n\t\t\tif (!~_.indexOf(LOGFUNCTIONS, targetLevel)){\n\t\t\t\tthis.settings.level = 'error';\n\t\t\t\tthis.error('Unknow DEBUG level: \"' + targetLevel + '\". The valid levels are debug>info>warn>error>none');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (LEVELS[level] > LEVELS[targetLevel]){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// check if these tags should be logged (fit targetTags)\n\t\t\tif (targetTags !== 'all' && !_.intersection(tags, _.isArray(targetTags) ? targetTags : [targetTags]).length){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// if we were not regected, this should be logged\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * Builds the log functions for consolePrototype\n\t\t * @param  {String} level \tLevel name\n\t\t * @return {Function}       A logging function\n\t\t */\n\t\tfunction createLog (level) {\n\t\t\treturn function(){\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar i, args = [];\n\n\t\t\t\tif (this.shouldLog(level)){\n\t\t\t\t\t// get arguments (so that we don't leak the arguments object)\n\t\t\t\t\tfor (i=0; i < arguments.length; i++){args[i] = arguments[i];}\n\n\t\t\t\t\t// do the actual logging\n\t\t\t\t\t$log[level].apply(null, args);\n\n\t\t\t\t\tif (settings.hideConsole){return;}\n\n\t\t\t\t\t// broadcast to the piConsole directive\n\t\t\t\t\t$rootScope.$emit('console:log',{\n\t\t\t\t\t\ttime: new Date(),\n\t\t\t\t\t\ttype: level,\n\t\t\t\t\t\targs: args,\n\t\t\t\t\t\ttags: this.tags\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\treturn consolePrototypeProvider;\n\n});\n","\ndefine('text!utils/console/console.html',[],function () { return '<div>\\n\\t<div\\n\\t\\tng-repeat=\"log in logs | orderBy:\\'time\\':true\"\\n\\t\\tclass=\"alert\"\\n\\t\\tng-class=\"{\\n\\t\\t\\t\\'alert-warning\\':log.type == \\'warn\\',\\n\\t\\t\\t\\'alert-danger\\':log.type == \\'error\\',\\n\\t\\t\\t\\'alert-info\\':log.type == \\'info\\',\\n\\t\\t\\t\\'alert-success\\':log.type == \\'log\\',\\n\\t\\t\\t\\'alert-success\\':log.type == \\'debug\\'\\n\\n\\t\\t}\"\\n\\t\\trole=\"alert\"\\n\\t>\\n\\t\\t<button ng-click=\"remove(log)\" type=\"button\" class=\"close\" data-dismiss=\"alert\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n\\t\\t<strong>{{ log.type | uppercase}}:</strong> <i class=\"text-danger\">{{log.time | date : \\'HH:mm:ss:sss\\'}}</i> - <strong>{{log.tags.join(\\' \\')}}</strong>:</br>\\n\\t\\t<span\\n\\t\\t\\tng-repeat=\"arg in log.args track by $index\"\\n\\t\\t\\tng-click=\"pre = !pre\"\\n\\t\\t\\tng-class=\"{pre:pre}\"\\n\\t\\t\\tng-bind-html=\"arg | stringify:pre\"\\n\\t\\t></span>\\n\\n\\t</div>\\n</div>';});\n\n","define('utils/console/consoleDirective',['require','text!./console.html','underscore'],function (require) {\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./console.html');\n\tvar _ = require('underscore');\n\n\tdirective.$inject = ['$rootScope'];\n\tfunction directive($rootScope){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\tlink: function(scope) {\n\t\t\t\tvar logs = scope.logs = [];\n\n\t\t\t\tscope.remove = remove;\n\t\t\t\tscope.reverse = true;\n\n\t\t\t\t$rootScope.$on('console:log', function(scope, log){\n\t\t\t\t\tlogs.push(log);\n\t\t\t\t});\n\n\t\t\t\tfunction remove(log){\n\t\t\t\t\tvar index = _.indexOf(logs, log);\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tlogs.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('utils/console/consoleModule',['require','angular','./consoleProvider','./consolePrototypeProvider','./consoleDirective'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('piConsole',[]);\n\n\tmodule.service('piConsole', require('./consoleProvider'));\n\tmodule.service('piConsolePrototype', require('./consolePrototypeProvider'));\n\tmodule.directive('piConsole', require('./consoleDirective'));\n\n\tmodule.filter('stringify', function(){\n\t\treturn stringify;\n\t});\n\n\treturn module;\n\n\tfunction stringify(value, pretty) {\n\t\tif (value == null) { // null || undefined\n\t\t\treturn '<i class=\"text-muted\">undefined</i>';\n\t\t}\n\t\tif (value === '') {\n\t\t\treturn '<i class=\"text-muted\">an empty string</i>';\n\t\t}\n\n\t\tswitch (typeof value) {\n\t\t\tcase 'string':\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\t\tvalue = '' + value;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\t// display the error message not the full thing...\n\t\t\t\tif (value instanceof Error){\n\t\t\t\t\tvalue = value.message;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tvalue = '<a href=\"javascript:void(0)\">' + angular.toJson(value, !!pretty) + '</a>';\n\t\t}\n\n\t\treturn value;\n\t}\n});\n\n\n\n","\ndefine('text!utils/modal/modal.html',[],function () { return '<div class=\"modal in\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\\n\\t<div class=\"modal-dialog\">\\n\\t\\t<div class=\"modal-content\">\\n\\t\\t\\t<div class=\"modal-header\" ng-ifs=\"header\">\\n\\t\\t\\t\\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\\n\\t\\t\\t\\t<h4 class=\"modal-title\" id=\"myModalLabel\">{{ header || \"Heads Up!\" }}</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"modal-body\">{{body}}</div>\\n\\t\\t\\t<div class=\"modal-footer\">\\n\\t\\t\\t\\t<button type=\"button\" class=\"btn btn-default\" ng-click=\"close()\">{{button || \"Close\"}}</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>';});\n\n","define('utils/modal/modalService',['require','underscore','text!./modal.html','angular'],function(require){\n\n\tvar _ = require('underscore');\n\tvar template = require('text!./modal.html');\n\n\tvar angular = require('angular');\n\n\tmodalConstructor.$inject = ['$rootScope', '$rootElement', '$compile', '$q', '$document'];\n\tfunction modalConstructor($rootScope, $rootElement, $compile, $q, $document){\n\t\tvar $element, $scope, deferred;\n\t\tvar $backDrop = angular.element('<div class=\"modal-backdrop in\"/>');\n\n\t\tthis.open = modalOpener;\n\t\tthis.close = modalCleanup;\n\n\t\tfunction modalCleanup(){\n\t\t\tif ($element){\n\t\t\t\t$element.remove();\n\t\t\t}\n\n\t\t\tif ($scope){\n\t\t\t\t$scope.$destroy();\n\t\t\t}\n\n\t\t\tif (deferred){\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\n\t\t\t$backDrop.remove();\n\t\t\t$document.off('keydown', modalCleanup);\n\t\t\t$rootElement.removeClass('modal-open');\n\t\t}\n\n\t\tfunction modalOpener(options){\n\t\t\tvar context = options.context || {};\n\n\t\t\t// close any existing modals\n\t\t\tmodalCleanup();\n\n\t\t\t// create deferred\n\t\t\tdeferred = $q.defer();\n\n\t\t\t// create new scope\n\t\t\t$scope = (options.$scope || $rootScope).$new();\n\t\t\t// set up scope methods\n\t\t\t$scope.close = modalCleanup;\n\t\t\t$document.on('keydown', modalCleanup);\n\n\n\t\t\t// set scope texts + template\n\t\t\t$scope.header = _.template(options.header)(context);\n\t\t\t$scope.body = _.template(options.body)(context);\n\t\t\t$scope.button = _.template(options.button)(context);\n\n\t\t\t// create new element\n\t\t\t$element = angular.element(template);\n\t\t\t$rootElement.addClass('modal-open');\n\n\t\t\t// compile and activate\n\t\t\t$rootElement.prepend($backDrop);\n\t\t\t$rootElement.prepend($element);\n\t\t\t$compile($element.contents())($scope);\n\t\t\t$scope.$digest();\n\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\tfunction onEsc(e){\n\t\t\tvar which = e.which || e.keyCode;\n\n\t\t\tif(which == 27) {\n\t\t\t\t$document.one('keydown', skipListener);\n\t        }\n\n\t\t}\n\t}\n\n\treturn modalConstructor;\n\n});\n","define('utils/modal/modalModule',['require','angular','./modalService'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.modal',[]);\n\n\tmodule.service('piModal', require('./modalService'));\n\n\treturn module;\n});\n","/**\n * This is the default controller for all questions.\n * It exposes the local scope, and a `value` method that the harvester can use.\n */\n\ndefine('quest/directives/questController',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tquestController.$inject = ['$scope', 'timerStopper', '$parse', '$attrs','piConsole', 'piInvoke', '$rootScope'];\n\tfunction questController($scope, Stopper, $parse, $attr, piConsole, invoke, $rootScope){\n\t\tvar self = this;\n\t\tvar log;\n\t\tvar data;\n\t\tvar defaults = {\n\t\t\tdflt: NaN,\n\t\t\tdata: $scope.data\n\t\t};\n\n\t\tthis.scope = $scope;\n\t\tthis.stopper = new Stopper();\n\n\n\t\tthis.registerModel = registerModel;\n\n\t\t/**\n\t\t * Listen for quest events\n\t\t */\n\t\t$scope.$on('quest:submit', function(event){\n\t\t\tevent.preventDefault();\n\t\t\tlog.declined = undefined;\n\t\t\tlog.submitLatency = self.stopper.now();\n\t\t\tinvoke(data.onSubmit, {log:log});\n\t\t});\n\n\t\t$scope.$on('quest:decline', function(event){\n\t\t\tevent.preventDefault();\n\t\t\tlog.declined = true;\n\t\t\tlog.submitLatency = self.stopper.now();\n\t\t\tinvoke(data.onDecline, {log:log});\n\t\t});\n\n\t\t$scope.$on('quest:timeout', function(event){\n\t\t\tevent.preventDefault();\n\t\t\tlog.timeout = true;\n\t\t\tinvoke(data.onTimeout, {log:log});\n\t\t});\n\n\n\t\t/**\n\t\t * Get the model and options from the directive\n\t\t * @param  {Object} ngModel\n\t\t * @param  {Object} options\n\t\t */\n\t\tfunction registerModel(ngModel, options){\n\t\t\toptions = _.defaults(options || {}, defaults);\n\t\t\tdata = options.data;\n\n\t\t\tvar ngModelGet = $parse($attr.ngModel);\n\t\t\tvar dfltValue = data.hasOwnProperty('dflt') ? data.dflt : options.dflt;\n\n\t\t\t// make model accesable from within scope\n\t\t\t$scope.model = ngModel;\n\n\t\t\t// has to be evaluated in the context of the parent scope because we're assuming that the quest directives have an isolated scope\n\t\t\tlog = ngModelGet($scope.$parent);\n\n\t\t\t// init log\n\t\t\t// ********\n\t\t\t// create log if it doesn't exist yet\n\t\t\tif (_.isUndefined(log)){\n\t\t\t\tlog = {};\n\t\t\t\tngModelGet.assign($scope.$parent, log);\n\t\t\t} else {\n\t\t\t\tpiConsole(['question']).warn('This question has already been in use: \"' + log.name + '\"');\n\t\t\t}\n\n\t\t\t// expose all the stuff...\n\t\t\tself.log = ngModel.$modelValue = log;\n\n\t\t\t_.defaults(log,{\n\t\t\t\tname: data.name,\n\t\t\t\tresponse: dfltValue,\n\t\t\t\t// @TODO: this is a bit fragile and primitive.\n\t\t\t\t// besides, who says this is where \"current\" will be...\n\t\t\t\t// we should probably create a unique ID service of some sort...\n\t\t\t\t// maybe just grab it off of rootscope\n\t\t\t\tserial: _.size($rootScope.current && $rootScope.current.questions)\n\t\t\t});\n\n\t\t\t$scope.response = ngModel.$viewValue = log.response;\n\n\t\t\t// model --> view\n\t\t\t// should probably never be called (since our model is an object and not a primitive)\n\t\t\tngModel.$formatters.push(function(modelValue) {\n\t\t\t\treturn modelValue.response;\n\t\t\t});\n\n\t\t\t// view --> model\n\t\t\tngModel.$parsers.push(function(viewValue){\n\t\t\t\t// don't know exactly why this is needed!\n\t\t\t\t// probably has to do with our use of nested ng-module\n\t\t\t\tif (_.isUndefined(viewValue)){\n\t\t\t\t\treturn log;\n\t\t\t\t}\n\t\t\t\tvar latency = self.stopper.now();\n\n\t\t\t\tlog.response = viewValue;\n\t\t\t\tlog.latency = latency;\n\n\t\t\t\t// if this is the first change\n\t\t\t\tif (!log.pristineLatency){\n\t\t\t\t\tlog.pristineLatency = latency;\n\t\t\t\t}\n\n\t\t\t\treturn log;\n\t\t\t});\n\n\t\t\t$scope.$watch('response',function(newValue, oldValue /*, scope*/){\n\t\t\t\tif (!_.isEqual(newValue, oldValue)){\n\t\t\t\t//if (newValue !== oldValue){\n\t\t\t\t\tngModel.$setViewValue(newValue);\n\t\t\t\t\tinvoke(data.onChange, {log:log});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.$on('$destroy', function(){\n\t\t\t\tinvoke(data.onDestroy, {log:log});\n\t\t\t});\n\n\t\t\tif (data.correct) {\n\t\t\t\tngModel.$parsers.push(correctValidator);\n\t\t\t\tdata.response = correctValidator(this.log);\n\t\t\t}\n\n\t\t\tinvoke(data.onCreate, {log:log});\n\n\t\t\tfunction correctValidator(value) {\n\t\t\t\tvar response = value.response;\n\t\t\t\tvar correctValue = data.correctValue;\n\n\t\t\t\t// make sure numbers are always treated as strings\n\t\t\t\t_.isNumber(correctValue) && (correctValue+=\"\");\n\t\t\t\t_.isNumber(response) && (response+=\"\");\n\n\t\t\t\tif (_.isEqual(correctValue, response)) {\n\t\t\t\t\tngModel.$setValidity('correct', true);\n\t\t\t\t} else {\n\t\t\t\t\tngModel.$setValidity('correct', false);\n\t\t\t\t\t//value.response = dfltValue;\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t}\n\t}\n\n\treturn questController;\n});\n","\ndefine('text!quest/directives/piQuest/piQuest.html',[],function () { return '<div piq-page ng-module=\"page\"></div>';});\n\n","/**\n * Main tag for piQuest component.\n * All you need in order to use it is set a script in the $rootScope and insert the tag.\n *\n * This directive is responsible for:\n *\t\t1. Creating the task object.\n *\t\t2. Relaying pages from the sequence to piqPage.\n *\t\t3. For now, deal with the end of a task (redirect, callback, broadcast etc. - later this should move into the task)\n *\n * @name piQuest\n\t*/\ndefine('quest/directives/piQuest/piQuest-directive',['require','underscore','text!./piQuest.html','angular'],function (require) {\n\tvar _ = require('underscore');\n\tvar template = require('text!./piQuest.html');\n\tvar jqLite = require('angular').element;\n\n\tpiQuestCtrl.$inject = ['$scope','$rootScope','Task','templateDefaultContext', 'mixerDefaultContext'];\n\tfunction piQuestCtrl($scope, $rootScope, Task, templateDefaultContext, mixerDefaultContext){\n\t\tvar self = this;\n\t\tvar task = self.task = new Task($scope.script);\n\t\tvar defaultContext; // for templates and the mixer\n\t\tvar global = $rootScope.global; // setup in app.run\n\t\tvar current = $rootScope.current || {}; // setup in taskDirective\n\n\t\tcurrent.questions = {};\n\n\t\t// create default context\n\t\tdefaultContext = {\n\t\t\tglobal: global,\n\t\t\tcurrent: current,\n\t\t\tquestions: current.questions\n\t\t};\n\n\t\t// set default contexts\n\t\t_.extend(templateDefaultContext,defaultContext);\n\t\t_.extend(mixerDefaultContext,defaultContext);\n\n\t\t// setup the first page\n\t\ttask.next();\n\n\t\t$scope.$on('quest:next', next);\n\t\t$scope.$on('quest:prev', prev);\n\n\t\t$scope.$on('quest:log', function(event, log, pageData){\n\t\t\ttask.log(log, pageData, $scope.global);\n\t\t});\n\n\t\tfunction next(event, target){\n\t\t\ttask.next(target);\n\t\t\t$scope.$emit('quest:newPage');\n\t\t}\n\n\t\tfunction prev(event, target){\n\t\t\ttask.prev(target);\n\t\t\t$scope.$emit('quest:newPage');\n\t\t}\n\n\t}\n\n\tdirective.$inject = ['$compile', '$animate','$injector','piConsole'];\n\tfunction directive($compile, $animate, $injector, piConsole){\n\t\treturn {\n\t\t\tcontroller: piQuestCtrl,\n\t\t\tterminal:true,\n\t\t\tpriority: 500,\n\t\t\tlink: function(scope, parentElement, attr, ctrl) {\n\t\t\t\tvar task = ctrl.task,\n\t\t\t\t\tcurrentScope,\n\t\t\t\t\tcurrentElement,\n\t\t\t\t\tpreviousElement;\n\n\t\t\t\tscope.$on('quest:refresh', refresh); // just refresh the object\n\t\t\t\tscope.$on('quest:newPage', newPage); // new element, new object and animation\n\t\t\t\tnewPage();\n\n\t\t\t\tfunction cleanupLastPage() {\n\t\t\t\t\tif(previousElement) {\n\t\t\t\t\t\tpreviousElement.remove();\n\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentScope) {\n\t\t\t\t\t\tcurrentScope.$destroy();\n\t\t\t\t\t\tcurrentScope = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentElement) {\n\t\t\t\t\t\t$animate.leave(currentElement, function() {\n\t\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpreviousElement = currentElement;\n\t\t\t\t\t\tcurrentElement = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction newPage(){\n\t\t\t\t\tvar page = task.current();\n\n\t\t\t\t\tif (page){\n\t\t\t\t\t\tvar newScope = scope.$new();\n\t\t\t\t\t\tvar tempElm = jqLite(template); // create a new element here so we can add the animation classes before linking\n\n\t\t\t\t\t\tnewScope.page = page;\n\t\t\t\t\t\taddAnimations(tempElm, page.animate);\n\n\t\t\t\t\t\t// first send away the previous element (if it exists)\n\t\t\t\t\t\tcleanupLastPage();\n\n\t\t\t\t\t\t// enter: new element\n\t\t\t\t\t\tcurrentElement = $compile(tempElm)(newScope);\n\n\t\t\t\t\t\t$animate.enter(currentElement, parentElement);\n\n\t\t\t\t\t\tcurrentScope = newScope;\n\t\t\t\t\t\tcurrentScope.$emit('quest:updated');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcleanupLastPage();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction refresh(){\n\t\t\t\t\tcurrentScope.page = task.current();\n\t\t\t\t}\n\n\t\t\t\tfunction addAnimations(element, animationsStr){\n\t\t\t\t\tif (!animationsStr){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar animations = animationsStr.split(\" \");\n\n\t\t\t\t\t_.each(animations, function(animation){\n\t\t\t\t\t\t// Make sure that this animation exists\n\t\t\t\t\t\tif (!$injector.has(\".\" + animation + '-animation')){\n\t\t\t\t\t\t\tpiConsole(['page','animation']).error('Unknown animation type: \"' + animation + '\"');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\telement.addClass(animationsStr);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/piQuest/piqPage.html',[],function () { return '<div ng-form name=\"pageForm\" pi-timer>\\n\\t<div pi-timer=\"page.timer\"></div>\\n\\t<div ng-if=\"page.progressBar\" class=\"text-center\" ng-bind-html=\"page.progressBar\"></div>\\n\\t<h3 ng-if=\"page.header\" ng-bind-html=\"page.header\" ng-style=\"page.headerStyle\"></h3>\\n\\t<div ng-bind-html=\"page.text\"></div>\\n\\t<ol ng-class=\"{\\'list-unstyled\\':!page.numbered}\" start=\"{{page.numberStart}}\">\\n\\t\\t<li ng-repeat=\"quest in page.questions\">\\n\\t\\t\\t<div quest-wrapper quest-data=\"quest\" quest-current=\"current\"></div>\\n\\t\\t</li>\\n\\t</ol>\\n\\n\\t<div class=\"pull-right\" ng-class=\"{\\'btn-group\\': !page.v1style, \\'btn-toolbar\\': page.v1style}\">\\n\\t\\t<button\\n\\t\\t\\tng-click=\"prev()\"\\n\\t\\t\\tdata-role=\"submit\"\\n\\t\\t\\tclass=\"btn\"\\n\\t\\t\\tng-if=\"page.prev && page.$meta.number > 1\"\\n\\t\\t>{{page.prevText || \"Go Back\"}}</button>\\n\\n\\t\\t<button\\n\\t\\t\\tng-click=\"submit()\"\\n\\t\\t\\tdata-role=\"submit\"\\n\\t\\t\\tclass=\"btn btn-primary\"\\n\\t\\t\\tng-if=\"!page.noSubmit\"\\n\\t\\t>{{page.submitText || \"Submit\"}}</button>\\n\\n\\t\\t<button\\n\\t\\t\\tng-click=\"decline($event)\"\\n\\t\\t\\tdata-role=\"submit\"\\n\\t\\t\\tclass=\"btn btn-warning\"\\n\\t\\t\\tng-class=\"{\\'btn-active-accented\\':page.v1style}\"\\n\\t\\t\\tng-if=\"page.decline\"\\n\\t\\t>{{page.declineText || \"Decline to Answer\"}}</button>\\n\\t</div>\\n</div>';});\n\n","/**\n * Main tag for piqPage component.\n * Used automaticaly from within the piQuest directive.\n *\n * This directive is responsible for:\n * 1. Displaying page questions.\n * 2. Detecting the end of a page (submit, TO).\n * 3. Harvesting information from the questions.\n * 4. Suplying information to the logger.\n *\n * @name piqPage\n  */\ndefine('quest/directives/piQuest/piqPage-directive',['require','text!./piqPage.html','underscore','angular'],function (require) {\n\tvar template = require('text!./piqPage.html');\n\tvar _ = require('underscore');\n\tvar angular = require('angular');\n\n\tpiqPageCtrl.$inject = ['$scope','$timeout', '$rootScope', 'piModal'];\n\tfunction piqPageCtrl($scope,$timeout, $rootScope, piModal){\n\t\tvar self = this;\n\n\t\t$scope.global = $rootScope.global;\n\t\t$scope.current = $rootScope.current;\n\n\t\t/**\n\t\t * Harvest piqPage questions, and log them.\n\t\t * by default logging is deferred to the end (so that we can go back to questions...)\n\t\t * This can be changed by setting lognow to true (page.lognow)\n\t\t */\n\t\tthis.harvest = function(lognow){\n\t\t\tvar questions = $scope.current.questions;\n\n\t\t\t_.each($scope.page.questions, function(q){\n\t\t\t\t// don't log if we don't have a name or if lognow is'nt true\n\t\t\t\tif (!q.name || !(lognow || q.lognow)){return;}\n\n\t\t\t\t// get the appropriate log object\n\t\t\t\tvar log = questions[q.name];\n\n\t\t\t\t// don't log if this has already been logged\n\t\t\t\tif (log.$logged){return;}\n\n\t\t\t\t// emit to quest directive\n\t\t\t\t$scope.$emit('quest:log', log, self.log);\n\t\t\t\tlog.$logged = true;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Proceed to next page.\n\t\t *\n\t\t * @name submit\n\t\t * @param  {Boolean} skipValidation [Should skip validation of the form before submitting?]\n\t\t */\n\t\t$scope.submit = function(skipValidation){\n\t\t\tvar valid = $scope.pageForm.$valid;\n\n\t\t\t// mark this attempt for submitting\n\t\t\t// useful for validation...\n\t\t\t$scope.submitAttempt = true;\n\n\t\t\tif (!valid && skipValidation !== true){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// broadcast to the quest controller\n\t\t\t// so that it can set submit latency\n\t\t\t$scope.$broadcast('quest:submit');\n\n\t\t\tself.proceed();\n\n\t\t\t// emit to the piQuest directive so that it knows to advance to the next page\n\t\t\t$scope.$emit('quest:next');\n\t\t};\n\n\t\t/**\n\t\t * Decline to answer. mark all questions on this page as declined\n\t\t */\n\t\t$scope.decline = function($event){\n\t\t\tvar $el = angular.element($event.target);\n\t\t\tvar notDoubleClick = (this.page.decline !== 'double');\n\n\t\t\t// decline and proceed to next page\n\t\t\t// unless this is a double style decline and then simply set \"active\".\n\t\t\tif (notDoubleClick || $el.hasClass('active')){\n\t\t\t\t// broadcast to the quest controller (so that it marks logs as declined and marks decline time)\n\t\t\t\t$scope.$broadcast('quest:decline');\n\t\t\t\tself.proceed();\n\t\t\t\t$scope.$emit('quest:next');\n\t\t\t} else {\n\t\t\t\t$el.addClass('active');\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Go back to previous page.\n\t\t */\n\t\t$scope.prev = function(){\n\t\t\t// broadcast to the quest controller\n\t\t\tself.proceed();\n\t\t\t$scope.$broadcast('quest:prev');\n\t\t};\n\n\n\t\t/**\n\t\t * Wraps up page setup\n\t\t * Closes timer stuff.\n\t\t * Harvests if needed.\n\t\t */\n\t\tthis.proceed = function(){\n\n\t\t\t// remove timeout if needed\n\t\t\tself.timer.stop();\n\n\t\t\t// by default, harvest after every page..\n\t\t\tself.harvest($scope.page.lognow);\n\t\t};\n\n\t\tthis.setup = pageSetup;\n\n\t\t// refresh page on question change (deep watch)\n\t\t// should refresh this directive without animating the whole page in...\n\t\t$scope.$watch('current.questions', pageRefresh, true);\n\n\t\t// listen for auto submit calls (from textDirective etc.)\n\t\t$scope.$on('quest:submit:now', function(){\n\t\t\t$scope.submit();\n\t\t});\n\n\t\t// refresh $scope.page\n\t\t// indirectly triggers pageSetup\n\t\tfunction pageRefresh(){\n\t\t\t$scope.$emit('quest:refresh');\n\t\t}\n\n\t\tfunction pageSetup(timer){\n\t\t\tvar newPage = $scope.page;\n\t\t\tself.timer = timer;\n\n\t\t\t// set the page log object\n\t\t\tself.log = {\n\t\t\t\tname: newPage.name,\n\t\t\t\tstartTime: +new Date()\n\t\t\t};\n\n\t\t\t// If there is a timeout set, submit when it runs out.\n\t\t\tif (newPage.timer){\n\t\t\t\ttimer.start(newPage.timer);\n\t\t\t\ttimer.getScope().$on('timer-end', timerEnd);\n\t\t\t}\n\n\t\t\tfunction timerEnd(){\n\t\t\t\tvar message = newPage.timer.message; // timer must be defined to get here...\n\t\t\t\tvar context;\n\t\t\t\t// mark logs as timeout\n\t\t\t\tself.log.timeout = true;\n\t\t\t\t$scope.$broadcast('quest:timeout');\n\n\t\t\t\t// proceed\n\t\t\t\tif (message){\n\t\t\t\t\t// create context for message tempates\n\t\t\t\t\tcontext = {\n\t\t\t\t\t\tpagesMeta: newPage.$meta,\n\t\t\t\t\t\tpagesData: newPage.data,\n\t\t\t\t\t\tglobal: $rootScope.global,\n\t\t\t\t\t\tcurrent: $rootScope.current\n\t\t\t\t\t};\n\n\t\t\t\t\t// create message object out of string\n\t\t\t\t\t_.isString(message) && (message = {body: message});\n\n\t\t\t\t\t// extend message object with scope and context\n\t\t\t\t\t_.defaults(message, {\n\t\t\t\t\t\theader: 'Timer Done',\n\t\t\t\t\t\t$context: context,\n\t\t\t\t\t\t$scope: $scope\n\t\t\t\t\t});\n\n\t\t\t\t\t// activate message and only then proceed\n\t\t\t\t\tpiModal.open(message).then(timerProceed);\n\t\t\t\t} else {\n\t\t\t\t\t// if there is no messgae proceed imidiately\n\t\t\t\t\ttimerProceed();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction timerProceed(){\n\t\t\t\tvar submit = newPage.timer.submitOnEnd || _.isUndefined(newPage.timer.submitOnEnd);\n\t\t\t\tsubmit && $scope.submit(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction directive(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\tcontroller: piqPageCtrl,\n\t\t\ttemplate:template,\n\t\t\trequire: ['piqPage','piTimer'],\n\t\t\tlink: function($scope, $el, $attr, $ctrl){\n\t\t\t\t$ctrl[0].setup($ctrl[1]);\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/wrapper/wrapper.html',[],function () { return '<div class=\"form-group\">\\n\\t<label ng-hide=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<div ng-bind-html=\"data.description\"></div>\\n\\t<div quest-data=\"data\" ng-model=\"current.questions[data.name]\" ng-style=\"{\\'max-width\\':data.maxWidth}\"></div>\\n\\t<p class=\"help-block\" ng-if=\"data.help\" ng-bind-html=\"data.helpText\"></p>\\n</div>';});\n\n","/*\n * The directive for creating the generic question layout (stub, surrounding etc.).\n */\ndefine('quest/directives/wrapper/wrapper-directive',['require','text!./wrapper.html','underscore'],function (require) {\n\n\tvar PREFIX = 'quest';\n\tvar template = require('text!./wrapper.html');\n\tvar _ = require('underscore');\n\n\tfunction capitaliseFirstLetter(string){\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\n\t}\n\n\tdirective.$inject = ['$compile', '$injector'];\n\tfunction directive($compile, $injector){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\tpriority: 5, // Allows the wrapper to use the same scope as the questions\n\t\t\tscope:{\n\t\t\t\tdata: '=questData',\n\t\t\t\tcurrent: '=questCurrent'\n\t\t\t},\n\t\t\tlink: function(scope,element) {\n\t\t\t\tvar type = scope.data.type || 'text';\n\t\t\t\tvar questElement = element.children().eq(2);\n\t\t\t\tvar attrName = PREFIX + capitaliseFirstLetter(type);\n\n\t\t\t\t// Make sure that this directive exists\n\t\t\t\tif (!$injector.has(attrName + 'Directive')){\n\t\t\t\t\tthrow new Error ('Unknown question type: \"' + type + '\"');\n\t\t\t\t}\n\n\t\t\t\t// snake case the attr name\n\t\t\t\tattrName = _.kebabCase(attrName);\n\n\t\t\t\t// add the appropriate attribute to the directive and compile it\n\t\t\t\tquestElement.attr(attrName,true);\n\t\t\t\t$compile(questElement)(scope);\n\t\t\t}\n\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/text/text.html',[],function () { return '<div ng-form ng-class=\"{\\'form-inline\\':data.inline}\">\\n\\t<label ng-show=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<input\\n\\t \\ttype=\"text\"\\n\\t\\tng-model=\"response\"\\n\\t\\tng-minlength=\"{{data.minLength || data.minlength}}\"\\n\\t\\tng-maxlength=\"{{data.maxlength}}\"\\n\\t\\tng-pattern=\"data.pattern | toRegex\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t\\tclass=\"form-control\"\\n\\t\\tng-attr-style=\"width:{{data.width | dfltUnits}}\"\\n\\n\\t\\tng-keydown=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t\\tng-keyup=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t/>\\n\\t<div pi-quest-validation=\"form.$error.minlength\">{{data.errorMsg.minLength || data.errorMsg.minlength || \"Too short!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.maxlength\">{{data.errorMsg.maxlength || \"Too long!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.pattern\">{{data.errorMsg.pattern || \"wrong pattern!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","\ndefine('text!quest/directives/text/textarea.html',[],function () { return '<div ng-form ng-class=\"{\\'form-inline\\':data.inline}\">\\n\\t<label ng-show=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<textarea\\n\\t \\ttype=\"text\"\\n\\t\\tng-model=\"response\"\\n\\t\\tng-minlength=\"{{data.minLength || data.minlength}}\"\\n\\t\\tng-maxlength=\"{{data.maxlength}}\"\\n\\t\\tng-pattern=\"data.pattern | toRegex\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t\\tclass=\"form-control\"\\n\\n\\t\\tng-attr-style=\"resize:none;width:{{data.columns? \\'auto\\' : data.width | dfltUnits}};\"\\n\\t\\tcols=\"{{data.columns}}\"\\n\\t\\trows=\"{{data.rows}}\"\\n\\n\\t\\tng-keydown=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t\\tng-keyup=\"data.maxlengthLimit && maxlengthLimit($event)\"\\n\\t/>\\n\\t<div pi-quest-validation=\"form.$error.minlength\">{{data.errorMsg.minLength || data.errorMsg.minlength || \"Too short!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.maxlength\">{{data.errorMsg.maxlength || \"Too long!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.pattern\">{{data.errorMsg.pattern || \"wrong pattern!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating text inputs.\n */\ndefine('quest/directives/text/textDirective',['require','text!./text.html','text!./textarea.html','angular'],function (require) {\n\t// This is the only way to get a non js file relatively\n\tvar textTemplate = require('text!./text.html');\n\tvar textareaTemplate = require('text!./textarea.html');\n\tvar angular = require('angular');\n\n\tfunction textDirective(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate: function(el,attr){\n\t\t\t\treturn 'questText' in attr ? textTemplate : textareaTemplate;\n\t\t\t},\n\t\t\trequire: ['form', 'ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar form = ctrls[0];\n\t\t\t\tvar ngModel = ctrls[1];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tscope.form = form;\n\t\t\t\tscope.maxlengthLimit = maxlengthLimit;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: \"\"\n\t\t\t\t});\n\n\t\t\t\tdata.autoSubmit && element.bind(\"keydown keypress\", function (event) {\n\t\t\t\t\tif(event.which === 13) {\n\t\t\t\t\t\tscope.$apply(function(){\n\t\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// limit the length of the input string\n\t\t\t\t// essentially a formatter for the input ngModel\n\t\t\t\tfunction maxlengthLimit($event){\n\t\t\t\t\tvar $input = angular.element($event.target);\n\t\t\t\t\tvar response = $input.val();\n\t\t\t\t\tvar limit = data.maxlength || response.length; // in case maxlength isn't defined...\n\t\t\t\t\t// update the scope\n\t\t\t\t\tscope.response = response.slice(0,limit);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn textDirective;\n});\n","\ndefine('text!quest/directives/text/text-number.html',[],function () { return '<div ng-form ng-class=\"{\\'form-inline\\':data.inline}\">\\n\\t<label ng-show=\"data.inline\" for=\"{{data.name}}\" ng-bind-html=\"data.stem\" ng-style=\"data.stemCss\"></label>\\n\\t<input\\n\\t \\ttype=\"number\"\\n\\t\\tng-model=\"response\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t\\tclass=\"form-control\"\\n\\t\\tng-attr-style=\"width:{{data.width | dfltUnits}}\"\\n\\t>\\n\\t<div pi-quest-validation=\"form.$error.number\">{{data.errorMsg.number || \"Must be a number!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.qstMin\">{{data.errorMsg.min || \"Too small!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.qstMax\">{{data.errorMsg.max || \"Too big!\"}}</div>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","\n/*\n * The directive for creating textNumber inputs.\n */\ndefine('quest/directives/text/text-number-directive',['require','text!./text-number.html'],function (require) {\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./text-number.html');\n\n\tvar directive = function(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: ['form', 'ngModel', '^?piqPage'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\n\t\t\t\tvar form = ctrls[0];\n\t\t\t\tvar input = element.find('input');\n\t\t\t\tvar ngModel = input.eq(0).controller('ngModel');\n\n\t\t\t\tscope.form = form;\n\n\t\t\t\tscope.ctrl.registerModel(ctrls[1], {\n\t\t\t\t\tdflt: \"\"\n\t\t\t\t});\n\n\t\t\t\tscope.data.autoSubmit && element.bind(\"keydown keypress\", function (event) {\n\t\t\t\t\tif(event.which === 13) {\n\t\t\t\t\t\tscope.$apply(function(){\n\t\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// we have a specific problem with min max that don't take internal\n\t\t\t\t// http://stackoverflow.com/questions/15656617/validation-not-triggered-when-data-binding-a-number-inputs-min-max-attributes\n\t\t\t\tvar minValidator = function(value) {\n\t\t\t\t\tvar min = parseFloat(scope.data.min);\n\t\t\t\t\tif (!isNaN(min) && value < min) {\n\t\t\t\t\t\tngModel.$setValidity('qstMin', false);\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tngModel.$setValidity('qstMin', true);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tngModel.$parsers.push(minValidator);\n\t\t\t\tngModel.$formatters.push(minValidator);\n\n\t\t\t\tvar maxValidator = function(value) {\n\t\t\t\t\tvar max = parseFloat(scope.data.max);\n\t\t\t\t\tif (!isNaN(max) && value > max) {\n\t\t\t\t\t\tngModel.$setValidity('qstMax', false);\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tngModel.$setValidity('qstMax', true);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tngModel.$parsers.push(maxValidator);\n\t\t\t\tngModel.$formatters.push(maxValidator);\n\t\t\t}\n\t\t};\n\t};\n\n\treturn directive;\n});\n","define('quest/directives/select/selectMixerProvider',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tselectMixerProvider.$inject = ['randomizeShuffle', 'mixerRecursive'];\n\tfunction selectMixerProvider(shuffle, mixer){\n\n\t\tfunction selectMixer(answersArr, options){\n\t\t\tvar answers = mixer(answersArr);\n\n\t\t\t// inject values\n\t\t\tanswers = _.map(answers, function(answer, index){\n\n\t\t\t\tif (!_.isPlainObject(answer)){\n\t\t\t\t\tanswer = {text:answer};\n\t\t\t\t}\n\n\t\t\t\tif (_.isUndefined(answer.value)){\n\t\t\t\t\tanswer.value = options.numericValues ? index + 1 : answer.text;\n\t\t\t\t}\n\t\t\t\treturn answer;\n\t\t\t});\n\n\t\t\tif (options.reverse){\n\t\t\t\tanswers = _(answers).reverse().value();\n\t\t\t}\n\n\t\t\tif (options.randomize){\n\t\t\t\tanswers = shuffle(answers);\n\t\t\t}\n\n\t\t\t_.each(answers, function(answer,index){\n\t\t\t\tanswer.order = index;\n\t\t\t});\n\n\t\t\treturn answers;\n\t\t}\n\n\t\treturn selectMixer;\n\t}\n\n\treturn selectMixerProvider;\n});\n","\ndefine('text!quest/directives/select/dropdown.html',[],function () { return '<div ng-form>\\n\\t<select\\n\\t\\tng-model=\"response\"\\n\\t\\tng-options=\"answer.value as answer.text group by answer.group for answer in quest.answers\"\\n\\t\\tng-required=\"data.required\"\\n\\t\\tng-change=\"data.autoSubmit && autoSubmit($event)\"\\n\\t\\tclass=\"form-control\"\\n\\t\\t>\\n\\t\\t<option value=\"\">{{chooseText || \"-- Choose an option --\"}}</option>\\n\\t</select>\\n\\t<div pi-quest-validation=\"model.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating dropdown inputs.\n * scope.response is the value of the chosen response\n */\ndefine('quest/directives/select/dropdownDirective',['require','text!./dropdown.html'],function (require) {\n\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./dropdown.html');\n\n\tdirective.$inject = ['questSelectMixer','$timeout'];\n\tfunction directive(mixer,$timeout){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: ['ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: NaN\n\t\t\t\t});\n\n\t\t\t\t// render quest if needed\n\t\t\t\tscope.quest = {\n\t\t\t\t\tanswers: mixer(scope.data.answers || [], scope.data)\n\t\t\t\t};\n\n\t\t\t\t// createChooseText\n\t\t\t\tscope.chooseText = \"chooseText\" in scope.data && scope.data.chooseText;\n\n\t\t\t\t/**\n\t\t\t\t * Manage auto submit\n\t\t\t\t */\n\t\t\t\tscope.autoSubmit = function(){\n\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/select/selectOne.html',[],function () { return '<div>\\n\\t<div ng-class=\"listClass\" ng-style=\"listCss\">\\n\\t\\t<!-- track by in the ng-repeat allows us to keep the repeated object clean so that angular doesn\\'t add a $$hashkey property -->\\n\\t\\t<!-- using interpolation within class, so that we can keep the style info separate within the directive -->\\n\\t\\t<a\\n\\t\\t\\ttabindex=\"-1\"\\n\\t\\t\\tng-repeat=\"answer in quest.answers track by answer.order\"\\n\\t\\t\\tng-model=\"$parent.responseObj\"\\n\\t\\t\\tbtn-radio=\"answer\"\\n\\t\\t\\tng-class=\"$parent.listItemClass\"\\n\\t\\t\\tng-style=\"listItemCss\"\\n\\t\\t\\tclass=\"{{ $parent.response == answer.value ? \\'active\\' : \\'\\' }}\"\\n\\t\\t\\tuncheckable\\n\\t\\t\\tng-click=\"data.autoSubmit && autoSubmit($event)\"\\n\\t\\t\\tng-bind-html=\"answer.text\"\\n\\t\\t\\tunselectable=\"on\"\\n\\t\\t></a>\\n\\t</div>\\n\\t<div pi-quest-validation=\"model.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating selectOne inputs.\n *\n * scope.response is the value of the chosen response\n * scope.responseObj is the full answer object or undefined\n */\ndefine('quest/directives/select/selectOneDirective',['require','angular','underscore','text!./selectOne.html'],function (require) {\n\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\tvar template = require('text!./selectOne.html');\n\n\tdirective.$inject = ['questSelectMixer', 'buttonConfig', '$compile'];\n\tfunction directive(mixer, buttonConfig, $compile){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\trequire: ['ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\t// compile the template (this is currently the only way to use a scope dependent template)\n\t\t\t\telement.html(template);\n\t\t\t\t$compile(element.contents())(scope);\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: NaN\n\t\t\t\t});\n\n\t\t\t\t// render quest if needed\n\t\t\t\tscope.quest = {\n\t\t\t\t\tanswers: mixer(scope.data.answers || [], scope.data)\n\t\t\t\t};\n\n\t\t\t\t// update controller with the response\n\t\t\t\tscope.$watch('responseObj',function(newValue, oldValue){\n\t\t\t\t\tif (newValue === oldValue){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.response = newValue && newValue.value;\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Required\n\t\t\t\t * Since we don't control the ngModel element any more we need to manually create a required validation\n\t\t\t\t * we don't implement $observe since in our case required is static\n\t\t\t\t */\n\n\t\t\t\tif (scope.data.required){\n\t\t\t\t\tngModel.$formatters.push(requiredValidator);\n\t\t\t\t\tngModel.$parsers.unshift(requiredValidator);\n\t\t\t\t\trequiredValidator(scope.response); // check validity at the begining - without need for change...\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Compute list styles\n\t\t\t\t */\n\n\t\t\t\t// back support for \"buttons\"\n\t\t\t\t// @DEPRICATED\n\t\t\t\tif (scope.data.buttons){\n\t\t\t\t\tscope.data.style = 'horizontal';\n\t\t\t\t} else {\n\t\t\t\t\tscope.data.style == 'horizontal' && (scope.data.buttons = true);\n\t\t\t\t}\n\n\t\t\t\t// some specific css added to the list\n\t\t\t\tscope.listCss = {};\n\t\t\t\tscope.listItemCss = {};\n\n\t\t\t\tswitch (data.style){\n\t\t\t\t\tcase 'horizontal' :\n\t\t\t\t\t\tscope.listClass = 'btn-group btn-group-justified btn-group-lg';\n\t\t\t\t\t\tscope.listItemClass = 'btn btn-select';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'multiButtons':\n\t\t\t\t\t\tscope.listClass = 'btn-toolbar';\n\t\t\t\t\t\tscope.listItemClass = 'btn  btn-select';\n\t\t\t\t\t\tscope.listCss.lineHeight = 2.8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'list':\n\t\t\t\t\t\t/* fall through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscope.listClass = 'list-group';\n\t\t\t\t\t\tscope.listItemClass = 'list-group-item';\n\t\t\t\t}\n\n\t\t\t\tdata.minWidth && (scope.listItemCss.minWidth = data.minWidth);\n\n\t\t\t\t/**\n\t\t\t\t * Manage auto submit\n\t\t\t\t * @param  {event} e [description]\n\t\t\t\t */\n\t\t\t\tscope.autoSubmit = function(e){\n\t\t\t\t\tif (!scope.data.autoSubmit){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isActive = angular.element(e.target).hasClass(buttonConfig.activeClass);\n\n\t\t\t\t\tif (isActive){\n\t\t\t\t\t\t// this whole function happens within a digest cycle, so we don't need to $apply\n\t\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction requiredValidator(value){\n\t\t\t\t\tvar ctrl = ngModel;\n\t\t\t\t\tif (ctrl.$isEmpty(value)) {\n\t\t\t\t\t\tctrl.$setValidity('required', false);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctrl.$setValidity('required', true);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/select/selectMulti.html',[],function () { return '<div required=\"{{data.required}}\">\\n\\t<div ng-class=\"listClass\" ng-style=\"listCss\">\\n\\t\\t<!-- track by in the ng-repeat allows us to keep the repeated object clean so that angular doesn\\'t add a $$hashkey property -->\\n\\t\\t<a\\n\\t\\t\\thref=\"javascript:void(0);\"\\n\\t\\t\\tng-repeat=\"answer in quest.answers track by answer.order\"\\n\\t\\t\\tng-model=\"answer.chosen\"\\n\\t\\t\\tbtn-checkbox\\n\\t\\t\\tng-class=\"$parent.listItemClass\"\\n\\t\\t\\tng-style=\"listItemCss\"\\n\\t\\t\\tclass=\"{{ answer.chosen ? \\'active\\' : \\'\\' }}\"\\n\\t\\t\\tuncheckable\\n\\t\\t\\tng-bind-html=\"answer.text\"\\n\\t\\t\\tunselectable=\"on\"\\n\\t\\t>\\n\\t\\t</a>\\n\\t</div>\\n\\t<div pi-quest-validation=\"model.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n\\t<div pi-quest-validation=\"model.$error.correct\">{{data.errorMsg.correct || \"You must answer the correct answer!\"}}</div>\\n</div>';});\n\n","/*\n * The directive for creating selectMulti inputs.\n */\ndefine('quest/directives/select/selectMultiDirective',['require','underscore','text!./selectMulti.html'],function (require) {\n\tvar _ = require('underscore');\n\n\t// This is the only way to get a non js file relatively\n\tvar template = require('text!./selectMulti.html');\n\n\tdirective.$inject = ['questSelectMixer'];\n\tfunction directive(mixer){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: ['^?piqPage', 'ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar ngModel = ctrls[1];\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: []\n\t\t\t\t});\n\n\t\t\t\tngModel.$isEmpty = function(){\n\t\t\t\t\treturn _.isEmpty(ngModel.$viewValue);\n\t\t\t\t};\n\n\t\t\t\t// render questions\n\t\t\t\tscope.quest = {\n\t\t\t\t\tanswers: mixer(scope.data.answers || [], scope.data)\n\t\t\t\t};\n\n\t\t\t\t// mark the chosen questions\n\t\t\t\t_.each(scope.quest.answers, function(answer){\n\t\t\t\t\t// mark it chosen if\n\t\t\t\t\tif (~_.indexOf(scope.response, answer.value)){\n\t\t\t\t\t\tanswer.chosen = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Compute list styles\n\t\t\t\t */\n\n\t\t\t\t// back support for \"buttons\"\n\t\t\t\t// @DEPRICATED\n\t\t\t\tif (scope.data.buttons){\n\t\t\t\t\tscope.data.style = 'horizontal';\n\t\t\t\t} else {\n\t\t\t\t\tscope.data.style == 'horizontal' && (scope.data.buttons = true);\n\t\t\t\t}\n\n\t\t\t\t// some specific css added to the list\n\t\t\t\tscope.listCss = {};\n\t\t\t\tscope.listItemCss = {};\n\n\t\t\t\tswitch (data.style){\n\t\t\t\t\tcase 'horizontal' :\n\t\t\t\t\t\tscope.listClass = 'btn-group btn-group-justified btn-group-lg';\n\t\t\t\t\t\tscope.listItemClass = 'btn btn-select';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'multiButtons':\n\t\t\t\t\t\tscope.listClass = 'btn-toolbar';\n\t\t\t\t\t\tscope.listItemClass = 'btn  btn-select';\n\t\t\t\t\t\tscope.listCss.lineHeight = 2.8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'list':\n\t\t\t\t\t\t/* fall through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscope.listClass = 'list-group';\n\t\t\t\t\t\tscope.listItemClass = 'list-group-item';\n\t\t\t\t}\n\n\t\t\t\tdata.minWidth && (scope.listItemCss.minWidth = data.minWidth);\n\n\n\t\t\t\t// update controller with the response\n\t\t\t\tscope.$watch('quest.answers',function(newValue, oldValue){\n\t\t\t\t\tif (newValue === oldValue){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// get chosen answers\n\t\t\t\t\tscope.response = _(newValue)\n\t\t\t\t\t\t.filter(function(answer){return answer.chosen;})\n\t\t\t\t\t\t.pluck('value')\n\t\t\t\t\t\t.value();\n\t\t\t\t},true); // deep watch\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","\ndefine('text!quest/directives/grid/grid.html',[],function () { return '<div ng-form class=\"table-responsive\" ng-class=\"{\\'pi-page-submitted\\':$parent.$parent.submitAttempt}\">\\n\\t<table class=\"table table-hover\">\\n\\t\\t<thead ng-if=\"!data.columnStemHide\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th ng-style=\"data.columnStemCss\"></th>\\n\\t\\t\\t\\t<th\\n\\t\\t\\t\\t\\tng-repeat=\"column in columns\"\\n\\t\\t\\t\\t\\tng-bind-html=\"column.stem\"\\n\\t\\t\\t\\t\\tng-style=\"data.columnStemCss\"\\n\\t\\t\\t\\t></th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr\\n\\t\\t\\t\\tng-repeat=\"row in rows\"\\n\\t\\t\\t\\tquest-grid-row=\"row\"\\n\\t\\t\\t\\tquest-grid-data=\"data\"\\n\\t\\t\\t\\tng-model=\"$parent.$parent.current.questions[row.name]\"\\n\\t\\t\\t\\tng-required=\"{{data.required || row.required}}\"\\n\\t\\t\\t></tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n</div>';});\n\n","define('quest/directives/grid/gridDirective',['require','underscore','text!./grid.html'],function (require) {\n\tvar _ = require('underscore');\n\n\tgridDirective.$inject = ['questShuffle'];\n\tfunction gridDirective(shuffle){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate: require('text!./grid.html'),\n\t\t\trequire: ['ngModel','form'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData',\n\t\t\t\tcurrent: '=questCurrent'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tscope.form = ctrls[1];\n\n\t\t\t\tscope.columns = mapColumns(data.columns);\n\t\t\t\tscope.rows = mapRows(data.rows, data);\n\n\t\t\t\tscope.$watchCollection(function getResponses(){\n\t\t\t\t\treturn _.pluck(scope.rows, '$response');\n\t\t\t\t}, function sumResponses(responses){\n\t\t\t\t\tscope.response = _.reduce(responses, function(total, response) {\n\t\t\t\t\t\treturn _.isFinite(response) ? total + response : total;\n\t\t\t\t\t},0);\n\t\t\t\t});\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: 0\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\n\t\tfunction mapColumns(columns){\n\t\t\treturn _(columns || [])\n\t\t\t\t.map(objectify)\n\t\t\t\t.each(function setValues(column, index){\n\t\t\t\t\tcolumn.hasOwnProperty('value') || (column.value = index+1);\n\t\t\t\t\tcolumn.hasOwnProperty('type') || (column.type = 'checkbox');\n\t\t\t\t})\n\t\t\t\t.tap(function setReverseValues(columns){\n\t\t\t\t\t_(columns)\n\t\t\t\t\t\t.filter(function(column){return !column.noReverse;}) // ignore columns that shouldn't be reveresed\n\t\t\t\t\t\t.each(function(column, index, columns){\n\t\t\t\t\t\t\tcolumn.reverseValue = columns[columns.length - index - 1].value; // set the value from the mirroring column\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.commit(); // activate chain, since we aren't using _.value here\n\t\t\t\t})\n\t\t\t\t.value();\n\t\t}\n\n\t\tfunction mapRows(rows, data){\n\t\t\treturn _(rows || [])\n\t\t\t\t.map(objectify)\n\t\t\t\t.each(function setRowName(row, index){\n\t\t\t\t\trow.hasOwnProperty('name') || (row.name = data.name + zerofill(index+1,3));\n\t\t\t\t})\n\t\t\t\t.thru(data.shuffle ? shuffle : _.identity)\n\t\t\t\t.value();\n\t\t}\n\n\t\tfunction objectify(target){\n\t\t\treturn _.isPlainObject(target) ? target : {stem:target};\n\t\t}\n\n\t\t/**\n\t\t * Zero fills a number\n\t\t * http://stackoverflow.com/questions/1267283/how-can-i-create-a-zerofilled-value-using-javascript\n\t\t *\n\t\t * WARNING!! fails if n===0\n\t\t *\n\t\t * @param  {Number} n The number to zerofill\n\t\t * @param  {Number} w The width of the fill\n\t\t * @return {String}   Zerofilled number\n\t\t */\n\t\tfunction zerofill(n, w) {\n\t\t\tvar an = Math.abs(n);\n\t\t\tvar digitCount = 1 + Math.floor(Math.log(an) / Math.LN10);\n\t\t\tif (digitCount >= w) {\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tvar zeroString = Math.pow(10, w - digitCount).toString().substr(1);\n\t\t\treturn n < 0 ? '-' + zeroString + an : zeroString + an;\n\t\t}\n\t}\n\n\treturn gridDirective;\n});\n","\ndefine('text!quest/directives/grid/gridRow.html',[],function () { return '<th\\n\\tscope=\"row\"\\n\\tng-if=\"!data.rowStemHide\"\\n\\tng-bind-html=\"row.stem\"\\n\\tng-style=\"data.rowStemCss\"\\n></th>\\n<td ng-repeat=\"column in $parent.columns\" ng-switch=\"column.type\">\\n\\t<button\\n\\t\\tng-switch-when=\"checkbox\"\\n\\t\\tbtn-radio=\"row.reverse && !column.noReverse ? column.reverseValue : column.value\"\\n\\t\\tng-model=\"$parent.$parent.response\"\\n\\t\\tclass=\"btn btn-default\"\\n\\t\\tuncheckable\\n\\t></button>\\n\\t<div\\n\\t\\tclass=\"text\"\\n\\t\\tng-switch-when=\"text\"\\n\\t\\tng-bind-html=\"row[column.textProperty]\"\\n\\t></div>\\n\\n\\t<div\\n\\t\\tclass=\"cell-labels\"\\n\\t\\tng-if=\"data.cellLabels\"\\n\\t\\tng-bind-html=\"column.stem\"\\n\\t></div>\\n</td>\\n';});\n\n","define('quest/directives/grid/gridRowDirective',['require','text!./gridRow.html'],function (require) {\n\tfunction gridRowDirective(){\n\t\treturn {\n\t\t\ttemplate: require('text!./gridRow.html'),\n\t\t\trequire: ['ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope: {\n\t\t\t\trow: '=questGridRow',\n\t\t\t\tdata: '=questGridData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar ngModel = ctrls[0];\n\t\t\t\tvar ctrl = scope.ctrl;\n\n\t\t\t\tscope.model = ngModel;\n\n\t\t\t\t// keep row updated with response so that we can watch it from the grid directive\n\t\t\t\tscope.$watch('response', function(newVal){\n\t\t\t\t\tscope.row.$response = newVal;\n\t\t\t\t});\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdata: scope.row\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\treturn gridRowDirective;\n});\n","\ndefine('text!quest/directives/slider/slider.html',[],function () { return '<div ng-form>\\n\\t<div\\n\\t\\tpi-slider\\n\\t\\tng-model=\"response\"\\n\\t\\tpi-slider-options=\"data\"\\n\\t\\tng-required=\"{{data.required}}\"\\n\\t></div>\\n\\t<h4 ng-if=\"data.displayValue\" class=\"text-center\"><span class=\"label label-info\">{{ response | number }}</span></h4>\\n\\t<div pi-quest-validation=\"form.$error.required && $parent.$parent.submitAttempt\">{{data.errorMsg.required || \"This field is required!\"}}</div>\\n</div>';});\n\n","define('quest/directives/slider/sliderDirective',['require','underscore','text!./slider.html'],function(require){\n\n\tvar _ = require('underscore');\n\t_;\n\n\n\tsliderDirective.$inject = [];\n\tfunction sliderDirective(){\n\t\treturn {\n\t\t\treplace: true,\n\t\t\ttemplate: require('text!./slider.html'),\n\t\t\trequire: ['form', 'ngModel'],\n\t\t\tcontroller: 'questController',\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tdata: '=questData'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr, ctrls) {\n\t\t\t\tvar form = ctrls[0];\n\t\t\t\tvar ngModel = ctrls[1];\n\t\t\t\tvar ctrl = scope.ctrl;\n\t\t\t\tvar data = scope.data;\n\n\t\t\t\tscope.form = form;\n\n\t\t\t\tctrl.registerModel(ngModel, {\n\t\t\t\t\tdflt: undefined\n\t\t\t\t});\n\n\t\t\t\tdata.autoSubmit && scope.$on('slider:change', function(){\n\t\t\t\t\tscope.$emit('quest:submit:now');\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\t}\n\n\treturn sliderDirective;\n});\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define('quest/directives/slider/slider',[], factory);\n    } else {\n        var app = angular.module('pi', []);\n        app.directive('piSlider', factory(root.angular));\n    }\n}(this, function () {\n  var SLIDER_CHANGE_EVENT = 'slider:change';\n\n  sliderDirective.$inject = [\"$document\", \"$sce\"];\n  function sliderDirective($document) {\n    return {\n      scope: {\n        options: '=piSliderOptions'\n      },\n      replace: true,\n      require: 'ngModel',\n      template: ['<div class=\"slider\" ng-mousedown=\"onSliderMouseDown($event)\">',\n            '<div class=\"slider-label-left\">{{options.leftLabel}}</div>',\n            '<div class=\"slider-label-right\">{{options.rightLabel}}</div>',\n            '<div class=\"slider-container\">',\n              '<div class=\"slider-bar\">',\n                '<div class=\"slider-bar-highlight\" ng-style=\"highlightStyle\"></div>',\n              '</div>',\n              '<div class=\"slider-handle\" ng-mousedown=\"onHandleMousedown($event)\" ng-style=\"handleStyle\"></div>',\n            '</div>',\n            '<ul class=\"slider-pips\" ng-if=\"!options.hidePips\">',\n                '<li ng-repeat=\"i in getNumber(steps) track by $index\" ng-style=\"{width: pipWidth + \\'%\\'}\" ng-class=\"{last:$last}\"></li>',\n            '</ul>',\n            '<ul class=\"slider-labels\">',\n                '<li ng-repeat=\"label in labels track by $index\" ng-style=\"{width: labelsWidth + \\'%\\'}\" ng-class=\"{first:$first, last:$last}\">{{label}}</li>',\n            '</ul>',\n          '</div>'].join('\\n'),\n\n      link: function(scope, element, attr, ngModel) {\n        var sliderHandleWidth;\n        var options = scope.options || {};\n\n        sliderHandleWidth = element[0].querySelector('.slider-handle').clientWidth;\n\n        scope.ngModel = ngModel;\n\n        scope.min = options.min || 0;\n        scope.max = options.max || (scope.min + 100);\n        scope.range = scope.max - scope.min;\n\n        scope.steps = options.steps ? options.steps - 1 : 0;\n        scope.pipWidth = options.steps && 100/scope.steps;\n\n        scope.labels = options.labels;\n        scope.labelsWidth = options.labels && 100 / options.labels.length;\n\n        ngModel.$isEmpty = isEmpty;\n        ngModel.$render = renderView;\n        ngModel.$formatters.push(toPercentage);\n        ngModel.$parsers.push(fromPercentage);\n\n        scope.onHandleMousedown = onHandleMousedown;\n        scope.onSliderMouseDown = onSliderMouseDown;\n\n        // helper for ngRepeat\n        // http://stackoverflow.com/questions/16824853/way-to-ng-repeat-defined-number-of-times-instead-of-repeating-over-array\n        scope.getNumber = function getNumber(num){return new Array(num);};\n\n        function setValue(percentage){\n          ngModel.$setViewValue(percentage);\n          ngModel.$render();\n        }\n\n        // limit percenatge by step size\n        function steppedPercentage(percentage){\n          if (!scope.steps || ngModel.$isEmpty(percentage)){\n            return percentage;\n          }\n\n          return Math.round(percentage * scope.steps) / scope.steps;\n        }\n\n        // manage placing the handle as well as the highlight correctly\n        function renderView() {\n          var percentage = steppedPercentage(ngModel.$viewValue);\n          var showHandle = !isNaN(percentage);\n          var handleDisplay = showHandle ? 'block' : 'none';\n          var highlightDisplay = showHandle && options.highlight ? 'block' : 'none';\n          scope.highlightStyle = { right: (100 - percentage * 100) + '%', display: highlightDisplay};\n          scope.handleStyle = { left: (percentage * 100) + '%', display: handleDisplay};\n        }\n\n        // formater model => view\n        function toPercentage(modelValue){\n          // if this isn't a number we can't compute percentage...\n          if (ngModel.$isEmpty(modelValue)){\n            return NaN;\n          }\n\n          // limit model size\n          modelValue = Math.min(Math.max(modelValue, scope.min), scope.max);\n          return (modelValue - scope.min) / scope.range;\n        }\n\n        // parser view => model\n        function fromPercentage(percentage){\n          return +(scope.min + (steppedPercentage(percentage) * scope.range)).toFixed(4);\n        }\n\n        // handle drag\n        function onHandleMousedown(event) {\n          fixEvent(event);\n          var basePercentage, basePosition;\n          event.preventDefault();\n          event.stopPropagation(); // prevent propogation to slider so that change is fired for the beginin of a drag interaction\n          basePosition = event.pageX;\n          basePercentage = ngModel.$viewValue;\n\n          $document.on('mousemove', mouseMove);\n          $document.on('mouseup', mouseUp);\n\n          // drag\n          function mouseMove(event) {\n            fixEvent(event);\n            event.preventDefault();\n            var percentage = basePercentage + (event.pageX - basePosition) / (element.prop('clientWidth') - sliderHandleWidth);\n            // don't allow extending beyond slider size\n            percentage = Math.min(percentage, 1);\n            percentage = Math.max(percentage, 0);\n\n            scope.$apply(function(){\n              setValue(percentage);\n            });\n          }\n\n          // drop\n          function mouseUp() {\n            $document.off('mousemove', mouseMove);\n            $document.off('mouseup', mouseUp);\n            scope.$emit(SLIDER_CHANGE_EVENT, ngModel.$viewValue); // emit only on mouse drop\n          }\n        }\n\n        // slider click\n        function onSliderMouseDown(event){\n          fixEvent(event);\n          event.preventDefault();\n          var sliderWidth = element.prop('clientWidth');\n          var sliderPosition = element[0].getBoundingClientRect().left;\n          var percentage = (event.pageX - sliderPosition - sliderHandleWidth/2) / (sliderWidth - sliderHandleWidth);\n          // don't allow extending beyond slider size\n          percentage = Math.min(percentage, 1);\n          percentage = Math.max(percentage, 0);\n\n          // auto \"$apply\" by ng-mousedown\n          setValue(percentage);\n          scope.$emit(SLIDER_CHANGE_EVENT, ngModel.$viewValue);\n        }\n\n\n      }\n    };\n  }\n\n  return sliderDirective;\n\n  // fix IE8 events (missing pageX) - from jquery\n  function fixEvent(event){\n    var eventDoc, doc, body;\n    // Calculate pageX/Y if missing and clientX/Y available\n    if ( event.pageX == null && event.clientX != null ) {\n      eventDoc = event.target.ownerDocument || document;\n      doc = eventDoc.documentElement;\n      body = eventDoc.body;\n\n      event.pageX = event.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n      event.pageY = event.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n    }\n  }\n\n  function isEmpty(n){\n    return isNaN(parseFloat(n)) || !isFinite(n);\n  }\n}));\n\n\n\n","define('quest/directives/toRegexFilter',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttoRegexFilter.$inject = ['piConsole'];\n\tfunction toRegexFilter($console){\n\t\treturn toRegex;\n\n\t\tfunction toRegex(value) {\n\t\t\tvar err;\n\n\t\t\tif (_.isUndefined(value)){\n\t\t\t\treturn /(?:)/;\n\t\t\t}\n\n\t\t\tif (_.isRegExp(value) || _.isString(value)){\n\t\t\t\treturn new RegExp(value);\n\t\t\t} else {\n\t\t\t\terr = new Error('Question pattern is not a valid regular expression');\n\t\t\t\t$console('text').error(err, value);\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn toRegexFilter;\n});\n","define('quest/directives/dfltUnitsFilter',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\treturn function(){\n\t\treturn dfltUnits;\n\t};\n\n\tfunction dfltUnits(value, unit) {\n\t\tvar suffix;\n\n\t\t// if value is empty (unless it equals 0)\n\t\tif (!value && value !== 0 && value !== '0'){\n\t\t\treturn '';\n\t\t}\n\n\t\tif (isNumeric(value)){\n\t\t\tsuffix = _.isUndefined(unit) ? 'px' : String(unit);\n\t\t\treturn value + suffix;\n\t\t}\n\t\treturn value;\n\t}\n\n\t// taken from jquery\n\tfunction isNumeric(obj){\n\t\treturn !_.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t}\n});\n","define('quest/directives/questDirectivesModule',['require','angular','underscore','utils/timer/timer-module','utils/utils/utilsModule','./buttons/buttons','utils/database/template/templateModule','utils/console/consoleModule','utils/modal/modalModule','./questController','./piQuest/piQuest-directive','./piQuest/piqPage-directive','./wrapper/wrapper-directive','./text/textDirective','./text/textDirective','./text/text-number-directive','./select/selectMixerProvider','./select/dropdownDirective','./select/selectOneDirective','./select/selectMultiDirective','./grid/gridDirective','./grid/gridRowDirective','./slider/sliderDirective','./slider/slider','./toRegexFilter','./dfltUnitsFilter'],function(require){\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\n\t// set modules that are requirements for the quest module\n\tvar module = angular.module('questDirectives',[\n\t\trequire('utils/timer/timer-module').name,\n\t\trequire('utils/utils/utilsModule').name,\n\t\trequire('./buttons/buttons').name,\n\t\trequire('utils/database/template/templateModule').name,\n\t\trequire('utils/console/consoleModule').name,\n\t\trequire('utils/modal/modalModule').name\n\t]);\n\n\tmodule.controller('questController', require('./questController'));\n\tmodule.directive('piQuest', require('./piQuest/piQuest-directive'));\n\tmodule.directive('piqPage', require('./piQuest/piqPage-directive'));\n\tmodule.directive('questWrapper', require('./wrapper/wrapper-directive'));\n\n\tmodule.directive('questText', require('./text/textDirective'));\n\tmodule.directive('questTextarea', require('./text/textDirective')); // uses the same directive as questText\n\tmodule.directive('questTextNumber', require('./text/text-number-directive'));\n\n\tmodule.service('questSelectMixer', require('./select/selectMixerProvider'));\n\tmodule.directive('questDropdown',require('./select/dropdownDirective'));\n\tmodule.directive('questSelectOne',require('./select/selectOneDirective'));\n\tmodule.directive('questSelectMulti',require('./select/selectMultiDirective'));\n\n\tmodule.value('questShuffle', _.shuffle); // we already have this in database but I don't want the directives to be too interdependant\n\tmodule.directive('questGrid', require('./grid/gridDirective'));\n\tmodule.directive('questGridRow', require('./grid/gridRowDirective'));\n\n\tmodule.directive('questSlider',require('./slider/sliderDirective'));\n\tmodule.directive('piSlider',require('./slider/slider'));\n\n\t// @TODO: move to utils or something\n\tmodule.config(['$sceProvider', function($sceProvider){\n\t\t$sceProvider.enabled(false);\n\t}]);\n\n\tmodule.directive('piQuestValidation', function(){\n\t\treturn {\n\t\t\treplace:true,\n\t\t\ttransclude: true,\n\t\t\tscope: {unvalid:'=piQuestValidation'},\n\t\t\ttemplate: [\n\t\t\t\t'<div class=\"alert alert-danger\" role=\"alert\" ng-show=\"unvalid\">',\n\t\t\t  \t\t'<span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>',\n\t\t\t  \t\t'<span ng-transclude></span>',\n\t\t\t\t'</div>'\n\t\t\t].join('')\n\t\t};\n\t});\n\n\t// filters\n\tmodule.filter('toRegex', require('./toRegexFilter'));\n\tmodule.filter('dfltUnits', require('./dfltUnitsFilter'));\n\n\n\treturn module;\n\n\n});\n\n","/*\n *\tThe logger Object\n *\tLogger(settings)\n *\t@param settings: the settings for this logger (defaults to the settings defined on loggerProvider.settings)\n *\tsettings = {\n *\t\tpulse: 34, // after how many objects should we post\n *\t\turl: '/my/url', // where should we post to\n *\t\tmeta: an object that extends each log\n  *\t}\n *\n *\tmethods:\n *\n *\tlog(obj) - add an object to the log stack\n *\t@param obj: any object that we want to log (as long as it is defined)\n *\n *\tsend() - send any remaining objects to the server\n *\n  */\ndefine('utils/logger/LoggerProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tloggerProvider.$inject = ['$http','$q', 'piConsole'];\n\tfunction loggerProvider($http, $q, piConsole){\n\t\tvar self = this;\n\n\t\tfunction Logger(dfltLogFn){\n\t\t\tthis.pending = [];\n\t\t\tthis.sent = [];\n\t\t\tthis.settings = {};\n\t\t\tthis.meta = {};\n\t\t\tthis.suppress = false; // don't suppress send\n\t\t\tthis.dfltLogFn = dfltLogFn || function(a){return a;};\n\t\t}\n\n\t\t_.extend(Logger.prototype, {\n\t\t\tlog: function(){\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar logObj = (settings.logFn || this.dfltLogFn).apply(settings, arguments);\n\n\t\t\t\tif (!_.isEmpty(this.meta) && !_.isPlainObject(logObj)){\n\t\t\t\t\tpiConsole(['logger']).debug(logObj);\n\t\t\t\t\tthrow new Error('Logger: in order to use \"meta\" the log must be an object.');\n\t\t\t\t}\n\n\t\t\t\t_.extend(logObj, this.meta);\n\n\t\t\t\t// if debug, then log this object\n\t\t\t\tpiConsole(['logger']).debug('Logged: ', logObj);\n\n\t\t\t\tthis.pending.push(logObj);\n\t\t\t\tself.logCounter++;\n\t\t\t\tif (settings.pulse && !this.suppress && this.pending.length >= settings.pulse){\n\t\t\t\t\tthis.send();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsend: function(){\n\t\t\t\tvar i;\n\t\t\t\tvar settings = this.settings;\n\t\t\t\tvar sendData = this.pending;\n\t\t\t\tvar def = $q.defer();\n\n\t\t\t\t// if there are no records to send...\n\t\t\t\tif (sendData.length === 0){\n\t\t\t\t\tdef.resolve();\n\t\t\t\t\treturn def.promise;\n\t\t\t\t}\n\n\t\t\t\tif (_.isUndefined(settings.url)){\n\t\t\t\t\tpiConsole('logger').warn('The logger url is not set.');\n\t\t\t\t\tdef.resolve();\n\t\t\t\t\treturn def.promise;\n\t\t\t\t}\n\n\t\t\t\t// empty the pending stack\n\t\t\t\tthis.pending = [];\n\n\t\t\t\t$http.post(settings.url, sendData).then(success, error);\n\n\t\t\t\t// move everything pending to the sent stack\n\t\t\t\tfor (i = 0; i<sendData.length; i++){\n\t\t\t\t\tthis.sent.push(sendData[i]);\n\t\t\t\t}\n\n\t\t\t\treturn def.promise;\n\n\t\t\t\tfunction success(){\n\t\t\t\t\tdef.resolve();\n\t\t\t\t}\n\n\t\t\t\tfunction error(){\n\t\t\t\t\t// try again\n\t\t\t\t\treturn $http.post(settings.url, sendData).then(success, function(){\n\t\t\t\t\t\tpiConsole(['logger']).error('Failed to send data, it seems the backend is not responding. (sending to: \"' + settings.url +'\")');\n\t\t\t\t\t\tdef.reject();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * suppress pulse\n\t\t\t * sets suppress to `suppress`, or to true by default.\n\t\t\t */\n\t\t\tsuppressPulse: function (suppress) {\n\t\t\t\tthis.suppress = _.isUndefined(suppress) ? true : suppress;\n\t\t\t},\n\n\t\t\tgetCount: function(){\n\t\t\t\treturn self.logCounter;\n\t\t\t},\n\n\t\t\tsetSettings: function(settings){\n\t\t\t\tif (arguments.length === 0){\n\t\t\t\t\treturn this.settings;\n\t\t\t\t}\n\n\t\t\t\t// inherit settings both from settings obj, and the global settings\n\t\t\t\tthis.settings = _.defaults({}, settings, self.settings);\n\n\t\t\t\tif (!_.isUndefined(settings.meta) && !_.isPlainObject(settings.meta)){\n\t\t\t\t\tthrow new Error('Logger: \"meta\" must be an object.');\n\t\t\t\t}\n\n\t\t\t\t// inherit meta settings\n\t\t\t\tthis.meta = _.defaults({}, settings.meta, self.meta);\n\t\t\t}\n\t\t});\n\n\t\treturn Logger;\n\t}\n\n\treturn function(){\n\t\tthis.$get = loggerProvider;\n\t\tthis.settings = {};\n\t\tthis.meta = {};\n\t\tthis.logCounter = 0;\n\t};\n});\n","define('utils/logger/logger-module',['require','angular','./LoggerProvider','utils/console/consoleModule'],function(require){\n\tvar angular = require('angular');\n\tvar Logger = require('./LoggerProvider');\n\n\tvar module = angular.module('logger', [require('utils/console/consoleModule').name]);\n\tmodule.provider('Logger', Logger);\n\n\treturn module;\n});\n","/**\n * An assortment of useful randomization functions.\n * Good so we can easily mock them...\n */\ndefine('utils/database/randomize/randomizeModule',['require','angular','underscore'],function(require){\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\tvar module = angular.module('randomize', []);\n\n\t/**\n\t * Just plain random\n\t */\n\n\tmodule.value('randomizeRandom', Math.random);\n\n\t/**\n\t * Just lodash shuffle...\n\t */\n\tmodule.value('randomizeShuffle', _.shuffle);\n\n\t/*\n\t * a function that returns a random integer between 0 and length\n\t * @param length: the upper boundary to the randomization.\n\t */\n\tmodule.value('randomizeInt', function randomInt(length){\n\t\treturn Math.floor(Math.random()*length);\n\t});\n\n\t/**\n\t * a function that returns a random array of integers between 0 and length\n\t * @param length: the upper boundary to the randomization.\n\t */\n\tmodule.value('randomizeRange', function randomArr(length){\n\t\treturn _.shuffle(_.range(length));\n\t});\n\n\treturn module;\n});\n","define('utils/database/mixer/mixer',['underscore'],function(_){\n\n\t/**\n\t * A function that maps a mixer object into a sequence.\n\t *\n\t * The basic structure of such an obect is:\n\t * {\n\t *\t\tmixer: 'functionType',\n\t *\t\tremix : false,\n\t *\t\tdata: [task1, task2]\n\t *\t}\n\t *\n\t * The results of the mix are set into `$parsed` within the original mixer object.\n\t * if remix is true $parsed is returned instead of recomputing\n\t *\n\t * @param {Object} [obj] [a mixer object]\n\t * @returns {Array} [An array of mixed objects]\n\t */\n\n\tmixProvider.$inject = ['randomizeShuffle', 'randomizeRandom'];\n\tfunction mixProvider(shuffle, random){\n\n\t\tfunction mix(obj){\n\t\t\tvar mixerName = obj.mixer;\n\n\t\t\t// if this isn't a mixer\n\t\t\t// make sure we catch mixers that are set with undefined by accident...\n\t\t\tif (!(_.isPlainObject(obj) && 'mixer' in obj)){\n\t\t\t\treturn [obj];\n\t\t\t}\n\n\t\t\tif (_.isUndefined(mix.mixers[mixerName])){\n\t\t\t\tthrow new Error('Mixer: unknow mixer type = ' + mixerName);\n\t\t\t}\n\n\t\t\tif (!obj.remix && obj.$parsed) {\n\t\t\t\treturn obj.$parsed;\n\t\t\t}\n\n\t\t\tobj.$parsed = mix.mixers[mixerName].apply(null, arguments);\n\n\t\t\treturn obj.$parsed;\n\t\t}\n\n\t\tmix.mixers = {\n\t\t\twrapper : function(obj){\n\t\t\t\treturn obj.data;\n\t\t\t},\n\n\t\t\trepeat: function(obj){\n\t\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\t\tvar result = [], i;\n\t\t\t\t\tfor (i=0; i < obj.times; i++){\n\t\t\t\t\t\tresult = result.concat(_.clone(sequence,true));\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t// randomize any elements\n\t\t\trandom: function(obj, context){\n\n\t\t\t\tfunction randomDeepMixer(sequence){\n\t\t\t\t\treturn _.reduce(sequence, function(arr,value){\n\t\t\t\t\t\tif (_.isPlainObject(value) && 'mixer' in value && value.mixer != 'wrapper'){\n\t\t\t\t\t\t\tvar seq = mix(value, context);\n\t\t\t\t\t\t\treturn arr.concat(seq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn arr.concat([value]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, []);\n\t\t\t\t}\n\n\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\treturn shuffle(randomDeepMixer(sequence));\n\t\t\t},\n\n\t\t\tchoose: function(obj){\n\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\treturn _.take(shuffle(sequence), obj.n ? obj.n : 1);\n\t\t\t},\n\n\t\t\tweightedRandom: function(obj){\n\t\t\t\tvar sequence = obj.data || [];\n\t\t\t\tvar i;\n\t\t\t\tvar total_weight = _.reduce(obj.weights,function (prev, cur) {\n\t\t\t\t\treturn prev + cur;\n\t\t\t\t});\n\n\t\t\t\tvar random_num = random() * total_weight; // cutoff - when we reach this sum - we've reached the desired weight\n\t\t\t\tvar weight_sum = 0;\n\n\t\t\t\tfor (i = 0; i < sequence.length; i++) {\n\t\t\t\t\tweight_sum += obj.weights[i];\n\t\t\t\t\tweight_sum = +weight_sum.toFixed(3);\n\n\t\t\t\t\tif (random_num <= weight_sum) {\n\t\t\t\t\t\treturn [obj.data[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Mixer: something went wrong with weightedRandom');\n\t\t\t}\n\t\t};\n\n\t\treturn mix;\n\t}\n\n\treturn mixProvider;\n});\n","define('utils/database/mixer/mixerSequential',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerSequentialProvider.$inject = ['mixer'];\n\tfunction mixerSequentialProvider(mix){\n\t\tfunction mixerSequential(sequence, context, depth){\n\t\t\tvar mixed;\n\t\t\tvar obj = sequence[0];\n\n\t\t\tdepth = depth || 0;\n\t\t\tif (depth++ >= 10){\n\t\t\t\tthrow new Error('Mixer: the mixer allows a maximum depth of 10');\n\t\t\t}\n\n\t\t\tif (_.isUndefined(obj.mixer)){\n\t\t\t\treturn sequence;\n\t\t\t}\n\n\t\t\t// mix obj\n\t\t\tmixed = mix(obj, context);\n\n\t\t\t// remove obj from sequence\n\t\t\tsequence.shift();\n\n\t\t\t// concat mixed and sequence\n\t\t\tmixed = mixed.concat(sequence);\n\n\t\t\treturn _.isUndefined(mixed[0]) || _.isUndefined(mixed[0].mixer) ? mixed : mixerSequential(mixed, context, depth);\n\t\t}\n\n\t\treturn mixerSequential;\n\t}\n\n\treturn mixerSequentialProvider;\n});\n","define('utils/database/mixer/mixerRecursive',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerRecursiveProvider.$inject = ['mixer'];\n\tfunction mixerRecursiveProvider(mix){\n\t\tfunction mixerRecursive(sequence, context, depth){\n\t\t\tvar mixed = [];\n\n\t\t\tdepth = depth || 0;\n\t\t\tif (depth++ >= 10){\n\t\t\t\tthrow new Error('Mixer: the mixer allows a maximum depth of 10');\n\t\t\t}\n\n\t\t\tmixed = _(sequence)\n\t\t\t\t.map(function(obj){\n\n\t\t\t\t\tif (_.isUndefined(obj.mixer)){\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}\n\n\t\t\t\t\t// mix object, and recursively mix the result\n\t\t\t\t\treturn mixerRecursive(mix(obj, context), context, depth);\n\t\t\t\t})\n\t\t\t\t.flatten()\n\t\t\t\t.value();\n\n\t\t\treturn mixed;\n\t\t}\n\n\t\treturn mixerRecursive;\n\t}\n\n\treturn mixerRecursiveProvider;\n});\n","define('utils/database/mixer/mixerSequenceProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerSequenceProvider.$inject = ['mixer'];\n\tfunction mixerSequenceProvider(mix){\n\n\t\t/**\n\t\t * MixerSequence takes an mixer array and allows browsing back and forth within it\n\t\t * @param {Array} arr [a mixer array]\n\t\t */\n\t\tfunction MixerSequence(arr){\n\t\t\tthis.sequence = arr;\n\t\t\tthis.stack = [];\n\t\t\tthis.add(arr);\n\t\t\tthis.pointer = 0;\n\t\t}\n\n\t\t_.extend(MixerSequence.prototype, {\n\t\t\t/**\n\t\t\t * Add sequence to mixer\n\t\t\t * @param {[type]} arr     Sequence\n\t\t\t * @param {[type]} reverse Whether to start from begining or end\n\t\t\t */\n\t\t\tadd: function(arr, reverse){\n\t\t\t\tthis.stack.push({pointer:reverse ? arr.length : -1,sequence:arr});\n\t\t\t},\n\n\t\t\tproceed: function(direction, context){\n\t\t\t\t// get last subSequence\n\t\t\t\tvar subSequence = this.stack[this.stack.length-1];\n\t\t\t\tvar isNext = (direction === 'next');\n\n\t\t\t\t// if we ran out of sequence\n\t\t\t\t// add the original sequence back in\n\t\t\t\tif (!subSequence) {\n\t\t\t\t\tthrow new Error ('mixerSequence: subSequence not found');\n\t\t\t\t}\n\n\t\t\t\tsubSequence.pointer += isNext ? 1 : -1;\n\n\t\t\t\tvar el = subSequence.sequence[subSequence.pointer];\n\n\t\t\t\t// if we ran out of elements, go to previous level (unless we are on the root sequence)\n\t\t\t\tif (_.isUndefined(el) && this.stack.length > 1){\n\t\t\t\t\tthis.stack.pop();\n\t\t\t\t\treturn this.proceed.call(this,direction,context);\n\t\t\t\t}\n\n\t\t\t\t// if element is a mixer, mix it\n\t\t\t\tif (el && el.mixer){\n\t\t\t\t\tthis.add(mix(el,context), !isNext);\n\t\t\t\t\treturn this.proceed.call(this,direction,context);\n\t\t\t\t}\n\n\t\t\t\t// regular element or undefined (end of sequence)\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tnext: function(context){\n\t\t\t\tthis.pointer++;\n\t\t\t\treturn this.proceed.call(this, 'next',context);\n\t\t\t},\n\n\t\t\tprev: function(context){\n\t\t\t\tthis.pointer--;\n\t\t\t\treturn this.proceed.call(this, 'prev',context);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Return current element\n\t\t\t * should **never** return a mixer - supposed to abstract them away\n\t\t\t * @return {[type]} undefined or element\n\t\t\t */\n\t\t\tcurrent:function(){\n\t\t\t\t// get last subSequence\n\t\t\t\tvar subSequence = this.stack[this.stack.length-1];\n\n\t\t\t\tif (!subSequence) {\n\t\t\t\t\tthrow new Error ('mixerSequence: subSequence not found');\n\t\t\t\t}\n\n\t\t\t\tvar el = subSequence.sequence[subSequence.pointer];\n\n\t\t\t\tif (!el){\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// extend element with meta data\n\t\t\t\tel.$meta = this.meta();\n\n\t\t\t\treturn el;\n\t\t\t},\n\n\t\t\tmeta: function(){\n\t\t\t\treturn {\n\t\t\t\t\tnumber: this.pointer,\n\n\t\t\t\t\t// sum of sequence length, minus one (the mixer) for each level of stack except the last\n\t\t\t\t\toutOf:  _.reduce(this.stack, function(memo,sub){return memo + sub.sequence.length-1;},0)+1\n\t\t\t\t};\n\t\t\t}\n\n\t\t});\n\n\t\treturn MixerSequence;\n\t}\n\n\treturn mixerSequenceProvider;\n});\n\n\n\n\n\n\n","define('utils/database/mixer/branching/dotNotation',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tfunction dotNotation(chain, obj){\n\n\t\tif (_.isString(chain)){\n\t\t\tchain = chain.split('.');\n\t\t}\n\n\t\treturn _.reduce(chain, function(result, link){\n\n\t\t\tif (_.isPlainObject(result) || _.isArray(result)){\n\t\t\t\treturn result[link];\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t}, obj);\n\t}\n\n\treturn dotNotation;\n});\n","define('utils/database/mixer/branching/mixerDotNotationProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerDotNotationProvider.$inject = ['dotNotation'];\n\tfunction mixerDotNotationProvider(dotNotation){\n\n\t\tfunction mixerDotNotation(chain, obj){\n\n\t\t\tvar escapeSeparatorRegex= /[^\\/]\\./;\n\n\t\t\tif (!_.isString(chain)){\n\t\t\t\treturn chain;\n\t\t\t}\n\n\t\t\t// We do not have a non escaped dot: we treat this as a string\n\t\t\tif (!escapeSeparatorRegex.test(chain)){\n\t\t\t\treturn chain.replace('/.','.');\n\t\t\t}\n\n\t\t\treturn dotNotation(chain, obj);\n\t\t}\n\n\t\treturn mixerDotNotation;\n\t}\n\n\treturn mixerDotNotationProvider;\n\n});\n","define('utils/database/mixer/branching/mixerConditionProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmixerConditionProvider.$inject = ['mixerDotNotation', 'piConsole'];\n\tfunction mixerConditionProvider(dotNotation, piConsole){\n\n\t\tfunction mixerCondition(condition, context){\n\t\t\tvar left, right, operator;\n\n\t\t\t// support a condition that is a plain function\n\t\t\tif (_.isFunction(condition)){\n\t\t\t\toperator = condition;\n\t\t\t} else {\n\t\t\t\t// @TODO angular.$parse may be a better candidate for doing this...\n\t\t\t\tleft = dotNotation(condition.compare,context);\n\t\t\t\tright = dotNotation(condition.to,context);\n\t\t\t\toperator = condition.operator;\n\t\t\t}\n\n\t\t\tpiConsole(['conditions']).info('Condition: ', left, operator || 'equals', right, condition);\n\n\t\t\tif (_.isFunction(operator)){\n\t\t\t\treturn !! operator.apply(context,[left, right, context]);\n\t\t\t}\n\n\t\t\tswitch(operator){\n\t\t\t\tcase 'greaterThan':\n\t\t\t\t\tif (_.isNumber(left) && _.isNumber(right)){\n\t\t\t\t\t\treturn +left > +right;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\tcase 'greaterThanOrEqual':\n\t\t\t\t\tif (_.isNumber(left) && _.isNumber(right)){\n\t\t\t\t\t\treturn +left >= +right;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\tcase 'in':\n\t\t\t\t\tif (_.isArray(right)){\n\t\t\t\t\t\t// binary operator to turn indexOf into binary.\n\t\t\t\t\t\treturn ~_.indexOf(right, left);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\tcase 'exactly':\n\t\t\t\t\treturn left === right;\n\n\t\t\t\tcase 'equals':\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault:\n\t\t\t\t\tif (_.isUndefined(right)){\n\t\t\t\t\t\treturn !!left;\n\t\t\t\t\t}\n\t\t\t\t\treturn _.isEqual(left, right);\n\t\t\t}\n\n\t\t\treturn operator;\n\t\t}\n\n\t\treturn mixerCondition;\n\t}\n\n\treturn mixerConditionProvider;\n});\n","define('utils/database/mixer/branching/mixerEvaluateProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tevaluateProvider.$inject = ['mixerCondition'];\n\tfunction evaluateProvider(condition){\n\t\t/**\n\t\t * Checks if a conditions set is true\n\t\t * @param  {Array} conditions [an array of conditions]\n\t\t * @param  {Object} context   [A context for the condition checker]\n\t\t * @return {Boolean}          [Are these conditions true]\n\t\t */\n\n\t\tfunction evaluate(conditions,context){\n\t\t\t// make && the default\n\t\t\t_.isArray(conditions) && (conditions = {and:conditions});\n\n\t\t\tfunction test(cond){return evaluate(cond,context);}\n\n\t\t\t// && objects\n\t\t\tif (conditions.and){\n\t\t\t\treturn _.every(conditions.and, test);\n\t\t\t}\n\t\t\tif (conditions.nand){\n\t\t\t\treturn !_.every(conditions.nand, test);\n\t\t\t}\n\n\t\t\t// || objects\n\t\t\tif (conditions.or){\n\t\t\t\treturn _.some(conditions.or, test);\n\t\t\t}\n\t\t\tif (conditions.nor){\n\t\t\t\treturn !_.some(conditions.nor, test);\n\t\t\t}\n\n\t\t\treturn condition(conditions, context);\n\t\t}\n\n\t\treturn evaluate;\n\t}\n\n\treturn evaluateProvider;\n});\n","/**\n * Registers the branching mixers with the mixer\n * @return {function}         [mixer decorator]\n */\ndefine('utils/database/mixer/branching/mixerBranchingDecorator',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tmixerBranchingDecorator.$inject = ['$delegate','mixerEvaluate','mixerDefaultContext'];\n\tfunction mixerBranchingDecorator(mix, evaluate, mixerDefaultContext){\n\n\t\tmix.mixers.branch = branch;\n\t\tmix.mixers.multiBranch = multiBranch;\n\n\t\treturn mix;\n\n\t\t/**\n\t\t * Branching mixer\n\t\t * @return {Array}         [A data array with objects to continue with]\n\t\t */\n\t\tfunction branch(obj, context){\n\t\t\tcontext = _.extend(context || {}, mixerDefaultContext);\n\t\t\treturn evaluate(obj.conditions, context) ? obj.data || [] : obj.elseData || [];\n\t\t}\n\n\t\t/**\n\t\t * multiBranch mixer\n\t\t * @return {Array}         [A data array with objects to continue with]\n\t\t */\n\t\tfunction multiBranch(obj, context){\n\t\t\tcontext = _.extend(context || {}, mixerDefaultContext);\n\t\t\tvar row;\n\n\t\t\trow = _.find(obj.branches, function(branch){\n\t\t\t\treturn evaluate(branch.conditions, context);\n\t\t\t});\n\n\t\t\tif (row) {\n\t\t\t\treturn row.data || [];\n\t\t\t}\n\n\t\t\treturn obj.elseData || [];\n\t\t}\n\t}\n\n\treturn mixerBranchingDecorator;\n});\n","define('utils/database/mixer/mixerModule',['require','angular','../randomize/randomizeModule','utils/console/consoleModule','./mixer','./mixerSequential','./mixerRecursive','./mixerSequenceProvider','./branching/dotNotation','./branching/mixerDotNotationProvider','./branching/mixerConditionProvider','./branching/mixerEvaluateProvider','./branching/mixerBranchingDecorator'],function(require){\n\n\tvar angular = require('angular');\n\n\tvar module = angular.module('mixer',[\n\t\trequire('../randomize/randomizeModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.service('mixer', require('./mixer'));\n\tmodule.service('mixerSequential', require('./mixerSequential')); // is this even in use?\n\tmodule.service('mixerRecursive', require('./mixerRecursive')); // is this even in use?\n\tmodule.service('MixerSequence', require('./mixerSequenceProvider'));\n\n\tmodule.value('dotNotation', require('./branching/dotNotation'));\n\tmodule.service('mixerDotNotation', require('./branching/mixerDotNotationProvider'));\n\tmodule.service('mixerCondition', require('./branching/mixerConditionProvider'));\n\tmodule.service('mixerEvaluate', require('./branching/mixerEvaluateProvider'));\n\tmodule.config(['$provide', function($provide){\n\t\t$provide.decorator('mixer', require('./branching/mixerBranchingDecorator'));\n\t}]);\n\tmodule.constant('mixerDefaultContext', {});\n\n\treturn module;\n});\n","define('utils/database/collection/collectionProvider',['underscore'],function(_){\n\t/*\n\t * The constructor for an Array wrapper\n\t */\n\n\tfunction collectionService(){\n\n\t\tfunction Collection (arr) {\n\t\t\tif (arr instanceof Collection) {\n\t\t\t\treturn arr;\n\t\t\t}\n\n\t\t\t// Make sure we are creating this array out of a valid argument\n\t\t\tif (!_.isUndefined(arr) && !_.isArray(arr) && !(arr instanceof Collection)) {\n\t\t\t\tthrow new Error('Collections can only be constructed from arrays');\n\t\t\t}\n\n\t\t\tthis.collection = arr || [];\n\t\t\tthis.length = this.collection.length;\n\n\t\t\t// pointer to the current location within the array\n\t\t\t// we start with -1 so that the initial next points to the begining of the array\n\t\t\tthis.pointer = -1;\n\t\t}\n\n\t\t_.extend(Collection.prototype,{\n\n\t\t\tfirst : function first(){\n\t\t\t\tthis.pointer = 0;\n\t\t\t\treturn this.collection[this.pointer];\n\t\t\t},\n\n\t\t\tlast : function last(){\n\t\t\t\tthis.pointer = this.collection.length - 1;\n\t\t\t\treturn this.collection[this.pointer];\n\t\t\t},\n\n\t\t\tend : function end(){\n\t\t\t\tthis.pointer = this.collection.length;\n\t\t\t\treturn undefined;\n\t\t\t},\n\n\t\t\tcurrent : function(){\n\t\t\t\treturn this.collection[this.pointer];\n\t\t\t},\n\n\t\t\tnext : function(){\n\t\t\t\treturn this.collection[++this.pointer];\n\t\t\t},\n\n\t\t\tprevious : function(){\n\t\t\t\treturn this.collection[--this.pointer];\n\t\t\t},\n\n\t\t\t// add list of items to the collection\n\t\t\tadd : function(list){\n\t\t\t\t// dont allow adding nothing\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\t// make sure list is as an array\n\t\t\t\tlist = _.isArray(list) ? list : [list];\n\t\t\t\tthis.collection = this.collection.concat(list);\n\n\t\t\t\tthis.length = this.collection.length;\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// return the item at index\n\t\t\tat: function(index){\n\t\t\t\treturn this.collection[index];\n\t\t\t}\n\t\t});\n\n\n\t\t// Stuff we took out of bootstrap that can augment the collection\n\t\t// **************************************************************\n\t\tvar methods = ['where','filter'];\n\t\tvar slice = Array.prototype.slice;\n\n\t\t// Mix in each Underscore method as a proxy to `Collection#models`.\n\t\t_.each(methods, function(method) {\n\t\t\tCollection.prototype[method] = function() {\n\t\t\t\tvar args = slice.call(arguments);\n\t\t\t\targs.unshift(this.collection);\n\t\t\t\tvar coll = _[method].apply(_,args);\n\t\t\t\treturn new Collection(coll);\n\t\t\t};\n\t\t});\n\n\t\treturn Collection;\n\t}\n\n\treturn collectionService;\n\n\n});\n","define('utils/database/randomizer/randomizerProvider',['underscore'],function(_){\n\n\t// @TODO: repeat currently repeats only the last element, we need repeat = 'set' or something in order to prevent re-randomizing of exRandom...\n\n\tRandomizerProvider.$inject = ['randomizeInt', 'randomizeRange', 'Collection'];\n\tfunction RandomizerProvider(randomizeInt, randomizeRange, Collection){\n\n\t\tfunction Randomizer(){\n\t\t\tthis._cache = {\n\t\t\t\trandom : {},\n\t\t\t\texRandom : {},\n\t\t\t\tsequential : {}\n\t\t\t};\n\t\t}\n\n\t\t_.extend(Randomizer.prototype, {\n\t\t\trandom: random,\n\t\t\texRandom: exRandom,\n\t\t\tsequential: sequential\n\t\t});\n\n\t\treturn Randomizer;\n\n\t\tfunction random(length, seed, repeat){\n\t\t\tvar cache  = this._cache.random;\n\n\t\t\tif (repeat && !_.isUndefined(cache[seed])) {\n\t\t\t\treturn cache[seed];\n\t\t\t}\n\n\t\t\t// save result in cache\n\t\t\tcache[seed] = randomizeInt(length);\n\n\t\t\treturn cache[seed];\n\t\t}\n\n\t\tfunction sequential(length, seed, repeat){\n\t\t\tvar cache = this._cache.sequential;\n\t\t\tvar coll = cache[seed];\n\t\t\tvar result;\n\n\t\t\t// if needed create collection and set it in seed\n\t\t\tif (_.isUndefined(coll)){\n\t\t\t\tcoll = cache[seed] = new Collection(_.range(length));\n\t\t\t\treturn coll.first();\n\t\t\t}\n\n\t\t\tif (coll.length !== length){\n\t\t\t\tthrow new Error(\"This seed  (\"+ seed +\") points to a collection with the wrong length, you can only use a seed for sets of the same length\");\n\t\t\t}\n\n\t\t\t// if this is a repeated element:\n\t\t\tif (repeat) {\n\t\t\t\treturn coll.current();\n\t\t\t}\n\n\t\t\t// if we've reached the end\n\t\t\tresult = coll.next();\n\n\t\t\t// if we've reached the end of the collection (next)\n\t\t\tif (_.isUndefined(result)){\n\t\t\t\treturn coll.first();\n\t\t\t} else {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tfunction exRandom(length, seed, repeat){\n\t\t\tvar cache = this._cache.exRandom;\n\t\t\tvar coll = cache[seed];\n\t\t\tvar result;\n\n\t\t\t// if needed create collection and set it in seed\n\t\t\tif (_.isUndefined(coll)){\n\t\t\t\tcoll = cache[seed] = new Collection(randomizeRange(length));\n\t\t\t\treturn coll.first();\n\t\t\t}\n\n\t\t\tif (coll.length !== length){\n\t\t\t\tthrow new Error(\"This seed  (\"+ seed +\") points to a collection with the wrong length, you can only use a seed for sets of the same length\");\n\t\t\t}\n\n\t\t\t// if this is a repeated element:\n\t\t\tif (repeat) {\n\t\t\t\treturn coll.current();\n\t\t\t}\n\n\t\t\t// if we've reached the end\n\t\t\tresult = coll.next();\n\n\t\t\t// if we've reached the end of the collection (next)\n\t\t\t// we should re-randomize\n\t\t\tif (_.isUndefined(result)){\n\t\t\t\tcoll = cache[seed] = new Collection(randomizeRange(length));\n\t\t\t\treturn coll.first();\n\t\t\t} else {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn RandomizerProvider;\n\n});\n","define('utils/database/queryProvider',['underscore'],function(_){\n\n\tqueryProvider.$inject = ['Collection','piConsole'];\n\tfunction queryProvider(Collection, $console){\n\n\t\tfunction queryFn(query, collection, randomizer){\n\t\t\tvar coll = new Collection(collection);\n\n\t\t\t// shortcuts:\n\t\t\t// ****************************\n\n\t\t\t// use function instead of query object.\n\t\t\tif (_.isFunction(query)){\n\t\t\t\treturn query(collection);\n\t\t\t}\n\n\t\t\t// pure string query\n\t\t\tif (_.isString(query) || _.isNumber(query)){\n\t\t\t\tquery = {set:query, type:'random'};\n\t\t\t}\n\n\t\t\t// narrow down by set\n\t\t\t// ****************************\n\t\t\tif (query.set){\n\t\t\t\tcoll = coll.where({set:query.set});\n\t\t\t}\n\n\t\t\t// narrow down by data\n\t\t\t// ****************************\n\t\t\tif (_.isString(query.data)){\n\t\t\t\tcoll = coll.filter(function(q){\n\t\t\t\t\treturn q.handle === query.data || (q.data && q.data.handle === query.data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (_.isPlainObject(query.data)){\n\t\t\t\tcoll = coll.where({data:query.data});\n\t\t\t}\n\n\t\t\tif (_.isFunction(query.data)){\n\t\t\t\tcoll = coll.filter(query.data);\n\t\t\t}\n\n\t\t\t// pick by type\n\t\t\t// ****************************\n\n\t\t\t// the default seed is namespace specific just to minimize the situations where seeds clash across namespaces\n\t\t\tvar seed = query.seed || ('$' + collection.namespace + query.set);\n\t\t\tvar length = coll.length;\n\t\t\tvar repeat = query.repeat;\n\t\t\tvar at;\n\t\t\tvar err;\n\n\t\t\tswitch (query.type){\n\t\t\t\tcase undefined:\n\t\t\t\tcase 'byData':\n\t\t\t\tcase 'random':\n\t\t\t\t\tat = randomizer.random(length,seed,repeat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'exRandom':\n\t\t\t\t\tat = randomizer.exRandom(length,seed,repeat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'sequential':\n\t\t\t\t\tat = randomizer.sequential(length,seed,repeat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'first':\n\t\t\t\t\tat = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'last':\n\t\t\t\t\tat = length-1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknow query type: ' + query.type);\n\t\t\t}\n\n\t\t\tif (_.isUndefined(coll.at(at))) {\n\t\t\t\terr = new Error('Query failed, object (' + JSON.stringify(query) +\t') not found. If you are trying to apply a template, you should know that they are not supported for inheritance.');\n\t\t\t\t$console('query').error(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\treturn coll.at(at);\n\t\t}\n\n\t\treturn queryFn;\n\t}\n\n\treturn queryProvider;\n});\n","/*\n * inflates an object\n * this function is responsible for inheritance\n *\n * function inflate(source,coll, randomizer, recursive, counter)\n * @param source: the object to inflate\n * @param coll: a collection to inherit from\n * @param randomizer: a randomizer object for the query\n * @param recursive: private use only, is this inside the recursion (true) or top level (false)\n * @param depth: private use only, a counter for the depth of the recursion\n */\ndefine('utils/database/inflateProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tinflateProvider.$inject = ['databaseQuery','$rootScope','piConsole'];\n\tfunction inflateProvider(query, $rootScope, $console){\n\n\t\tfunction customize(source){\n\t\t\t// check for a custom function and run it if it exists\n\t\t\tif (_.isFunction(source.customize)){\n\t\t\t\tsource.customize.apply(source, [source, $rootScope.global]);\n\t\t\t}\n\t\t\treturn source;\n\t\t}\n\n\t\t// @param source - object to inflate\n\t\t// @param type - trial stimulus or media\n\t\t// @param recursive - whether this is a recursive call or not\n\t\tfunction inflate(source, coll, randomizer, recursive, depth){\n\n\t\t\t// protection against infinte loops\n\t\t\t// ***********************************\n\t\t\tdepth = recursive ? --depth : 10;\n\n\t\t\tif (!depth) {\n\t\t\t\tthrow new Error('Inheritance loop too deep, you can only inherit up to 10 levels down');\n\t\t\t}\n\n\t\t\tif (!_.isPlainObject(source)){\n\t\t\t\tthrow new Error('You are trying to inflate a non object');\n\t\t\t}\n\n\t\t\tvar parent\n\t\t\t\t// create child\n\t\t\t\t, child = _.cloneDeep(source)\n\t\t\t\t, err\n\t\t\t\t, inheritObj = child.inherit;\n\n\n\t\t\t// no inheritance\n\t\t\t// ***********************************\n\n\t\t\t// if we do not need to inherit anything, simply return source\n\t\t\tif (!child.inherit) {\n\t\t\t\t// customize only on the last call (non recursive)\n\t\t\t\t!recursive && customize(child);\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\t// get parent\n\t\t\t// ***********************************\n\t\t\tparent = query(inheritObj, coll, randomizer);\n\n\t\t\t// if inherit target was not found\n\t\t\tif (!parent){\n\t\t\t\terr = new Error('Query failed, object (' + JSON.stringify(inheritObj) +\t') not found.');\n\t\t\t\t$console('query').error(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\t// inflate parent (recursively)\n\t\t\tparent = inflate(\n\t\t\t\tparent,\n\t\t\t\tcoll,\n\t\t\t\trandomizer,\n\t\t\t\ttrue,\n\t\t\t\tdepth\n\t\t\t);\n\n\t\t\t// extending the child\n\t\t\t// ***********************************\n\t\t\tif (inheritObj.merge && !_.isArray(inheritObj.merge)){\n\t\t\t\tthrow new Error('Inheritance error: inherit.merge must be an array.');\n\t\t\t}\n\n\t\t\t// start inflating child (we have to extend selectively...)\n\t\t\t_.each(parent, function(value, key){\n\t\t\t\tvar childProp, parentProp;\n\t\t\t\t// if this key is not set yet, copy it out of the parent\n\t\t\t\tif (!(key in child)){\n\t\t\t\t\tchild[key] = _.isFunction(value) ? value : _.cloneDeep(value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// if we have a merge array,\n\t\t\t\tif (_.indexOf(inheritObj.merge, key) != -1){\n\t\t\t\t\tchildProp = child[key];\n\t\t\t\t\tparentProp = value;\n\n\t\t\t\t\tif (_.isArray(childProp)){\n\t\t\t\t\t\tif (!_.isArray(parentProp)){\n\t\t\t\t\t\t\tthrow new Error('Inheritance error: You tried merging an array with an non array (for \"' + key + '\")');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchild[key] = childProp.concat(parentProp);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_.isPlainObject(childProp)){\n\t\t\t\t\t\tif (!_.isPlainObject(parentProp)){\n\t\t\t\t\t\t\tthrow new Error('Inheritance error: You tried merging an object with an non object (for \"' + key + '\")');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_.extend(childProp, parentProp);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// we want to extend the childs data even if it already exists\n\t\t\t// its ok to shallow extend here (because by definition parent was created for this inflation)\n\t\t\tif (parent.data){\n\t\t\t\tchild.data = _.extend(parent.data, child.data || {});\n\t\t\t}\n\n\t\t\t// Personal customization functions - only if this is the last iteration of inflate\n\t\t\t// This way the customize function gets called only once.\n\t\t\t!recursive && customize(child);\n\n\t\t\t// return inflated trial\n\t\t\treturn child;\n\t\t}\n\n\t\treturn inflate;\n\t}\n\n\treturn inflateProvider;\n});\n","/*\n *\tThe store is a collection of collection devided into namespaces.\n *\tYou can think of every namespace/collection as a table.\n */\ndefine('utils/database/store/storeProvider',['underscore'],function(_){\n\n\tstoreProvider.$inject = ['Collection'];\n\tfunction storeProvider(Collection){\n\n\t\tfunction Store(){\n\t\t\tthis.store = {};\n\t\t}\n\n\t\t_.extend(Store.prototype, {\n\t\t\tcreate: function create(nameSpace){\n\t\t\t\tif (this.store[nameSpace]){\n\t\t\t\t\tthrow new Error('The name space ' + nameSpace + ' already exists');\n\t\t\t\t}\n\t\t\t\tthis.store[nameSpace] = new Collection();\n\t\t\t\tthis.store[nameSpace].namespace = nameSpace;\n\t\t\t},\n\n\t\t\tread: function read(nameSpace){\n\t\t\t\tif (!this.store[nameSpace]){\n\t\t\t\t\tthrow new Error('The name space ' + nameSpace + ' does not exist');\n\t\t\t\t}\n\t\t\t\treturn this.store[nameSpace];\n\t\t\t},\n\n\t\t\tupdate: function update(nameSpace, data){\n\t\t\t\tvar coll = this.read(nameSpace);\n\t\t\t\tcoll.add(data);\n\t\t\t},\n\n\t\t\tdel: function del(nameSpace){\n\t\t\t\tthis.store[nameSpace] = undefined;\n\t\t\t}\n\t\t});\n\n\t\treturn Store;\n\t}\n\n\treturn storeProvider;\n});\n","define('utils/database/databaseProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tDatabaseProvider.$inject = ['DatabaseStore', 'DatabaseRandomizer', 'databaseInflate', 'templateObj', 'databaseSequence'];\n\tfunction DatabaseProvider(Store, Randomizer, inflate, templateObj, DatabaseSequence){\n\n\t\tfunction Database(){\n\t\t\tthis.store = new Store();\n\t\t\tthis.randomizer = new Randomizer();\n\t\t}\n\n\t\t_.extend(Database.prototype, {\n\t\t\tcreateColl: function(namespace){\n\t\t\t\tthis.store.create(namespace);\n\t\t\t},\n\n\t\t\tgetColl: function(namespace){\n\t\t\t\treturn this.store.read(namespace);\n\t\t\t},\n\n\t\t\tadd: function(namespace, query){\n\t\t\t\tvar coll = this.store.read(namespace);\n\t\t\t\tcoll.add(query);\n\t\t\t},\n\n\t\t\tinflate: function(namespace, query, context){\n\t\t\t\tvar coll = this.getColl(namespace);\n\n\t\t\t\t// inflate\n\t\t\t\tif (!query.$inflated || query.reinflate) {\n\t\t\t\t\tquery.$inflated = inflate(query, coll, this.randomizer);\n\t\t\t\t}\n\n\t\t\t\t// interpolate\n\t\t\t\tif (!query.$templated || query.regenerateTemplate){\n\t\t\t\t\tcontext[namespace + 'Data'] = query.$inflated.data || {};\n\t\t\t\t\tcontext[namespace + 'Meta'] = query.$meta;\n\t\t\t\t\tquery.$templated = templateObj(query.$inflated, context);\n\t\t\t\t}\n\n\t\t\t\treturn query.$templated;\n\t\t\t},\n\n\t\t\tsequence: function(namespace, arr){\n\t\t\t\tif (!_.isArray(arr)){\n\t\t\t\t\tthrow new Error('Sequence must be an array.');\n\t\t\t\t}\n\t\t\t\treturn new DatabaseSequence(namespace, arr, this);\n\t\t\t}\n\t\t});\n\n\t\treturn Database;\n\t}\n\n\treturn DatabaseProvider;\n});\n","define('utils/database/databaseSequenceProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tSequenceProvider.$inject = ['MixerSequence'];\n\tfunction SequenceProvider(MixerSequence){\n\n\t\t/**\n\t\t * Sequence Constructor:\n\t\t * Manage the progression of a sequence, including parsing (mixing, inheritance and templating).\n\t\t * @param  {String  } namespace [pages or questions (the type of db.Store)]\n\t\t * @param  {Array   } arr       [a sequence to manage]\n\t\t * @param  {Database} db        [the db itself]\n\t\t */\n\n\t\tfunction Sequence(namespace, arr,db){\n\t\t\tthis.namespace = namespace;\n\t\t\tthis.mixerSequence = new MixerSequence(arr);\n\t\t\tthis.db = db;\n\t\t}\n\n\t\t_.extend(Sequence.prototype, {\n\t\t\t// only mix\n\t\t\tnext: function(context){\n\t\t\t\tthis.mixerSequence.next(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// anti mix\n\t\t\tprev: function(context){\n\t\t\t\tthis.mixerSequence.prev(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Return the element currently in focus.\n\t\t\t * It always returns either an element or undefined (mixers are abstrcted away)\n\t\t\t * @param  {[type]} context [description]\n\t\t\t * @return {[type]}         [description]\n\t\t\t */\n\t\t\tcurrent: function(context){\n\t\t\t\tcontext || (context = {});\n\t\t\t\t// must returned an element or undefined\n\t\t\t\tvar obj = this.mixerSequence.current(context);\n\n\t\t\t\t// in case this is the end of the sequence\n\t\t\t\tif (!obj){\n\t\t\t\t\treturn obj;\n\t\t\t\t}\n\n\t\t\t\treturn this.db.inflate(this.namespace, obj, context);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns an array of elements, created by proceeding through the whole sequence.\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tall: function(context){\n\t\t\t\tvar sequence = [];\n\n\t\t\t\tvar el = this.next().current(context);\n\t\t\t\twhile (el){\n\t\t\t\t\tsequence.push(el);\n\t\t\t\t\tel = this.next().current(context);\n\t\t\t\t}\n\n\t\t\t\treturn sequence;\n\t\t\t}\n\t\t});\n\n\t\treturn Sequence;\n\t}\n\n\treturn SequenceProvider;\n});\n","define('utils/database/databaseModule',['require','angular','./mixer/mixerModule','./template/templateModule','utils/console/consoleModule','./collection/collectionProvider','./randomizer/randomizerProvider','./queryProvider','./inflateProvider','./store/storeProvider','./databaseProvider','./databaseSequenceProvider'],function(require){\n\n\tvar angular = require('angular');\n\n\tvar module = angular.module('database',[\n\t\t\trequire('./mixer/mixerModule').name,\n\t\t\trequire('./template/templateModule').name,\n\t\t\trequire('utils/console/consoleModule').name\n\t\t])\n\t\t.service('Collection', require('./collection/collectionProvider'))\n\t\t.service('DatabaseRandomizer', require('./randomizer/randomizerProvider'))\n\t\t.service('databaseQuery', require('./queryProvider'))\n\t\t.service('databaseInflate', require('./inflateProvider'))\n\t\t.service('DatabaseStore', require('./store/storeProvider'))\n\t\t.service('Database', require('./databaseProvider'))\n\t\t//.value('Database', require('./main')) // tests the use of the non angular variation\n\t\t.service('databaseSequence', require('./databaseSequenceProvider'));\n\n\treturn module;\n});\n","define('quest/task/questSequenceProvider',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tfunction SequenceProvider(){\n\n\t\tfunction Sequence(arr, db){\n\t\t\tif (!db){\n\t\t\t\tthrow new Error('Sequences need to take a db as the second argument');\n\t\t\t}\n\n\t\t\tthis.sequence = db.sequence('pages', arr);\n\t\t\tthis.db = db;\n\t\t}\n\n\t\t_.extend(Sequence.prototype, {\n\t\t\tnext: function(context){\n\t\t\t\tthis.sequence.next(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tprev: function(context){\n\t\t\t\tthis.sequence.prev(context);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tcurrent: function(context){\n\t\t\t\tvar questionsArr,\n\t\t\t\t\tpage = this.sequence.current(context);\n\n\t\t\t\tif (!page){\n\t\t\t\t\treturn page;\n\t\t\t\t}\n\n\t\t\t\tif (page.questions){\n\t\t\t\t\tquestionsArr = _.isArray(page.questions) ? page.questions : [page.questions];\n\t\t\t\t} else {\n\t\t\t\t\tquestionsArr = [];\n\t\t\t\t}\n\n\t\t\t\tvar questions = this.db.sequence('questions', questionsArr).all({\n\t\t\t\t\tpagesData: page.data,\n\t\t\t\t\tpagesMeta: page.$meta\n\t\t\t\t});\n\n\t\t\t\t// make sure we don't lose any thing in the orginal page\n\t\t\t\t// @TODO: this seems extremely expensive. Is this really neccesary?\n\t\t\t\tpage = _.clone(page, true);\n\t\t\t\tpage.questions = questions;\n\n\t\t\t\treturn page;\n\t\t\t}\n\t\t});\n\n\t\treturn Sequence;\n\t}\n\n\treturn SequenceProvider;\n});\n","define('quest/task/taskProvider',['underscore', 'angular'], function(_, angular){\n\n\tTaskProvider.$inject = ['$q','Database','Logger','QuestSequence','taskParse', 'dfltQuestLogger', '$rootScope'];\n\tfunction TaskProvider($q, Database, Logger, QuestSequence, parse, dfltQuestLogger,$rootScope){\n\t\tfunction Task(script){\n\t\t\tvar self = this;\n\t\t\tvar settings = script.settings || {};\n\n\t\t\t// save script for later use...\n\t\t\tthis.script = script;\n\t\t\tthis.db = new Database();\n\t\t\tthis.logger = new Logger(dfltQuestLogger);\n\t\t\tthis.logger.setSettings(settings.logger || {});\n\t\t\tthis.q = $q.defer();\n\n\t\t\tif (!_.isArray(script.sequence)){\n\t\t\t\tthrow new Error('Task: no sequence was defined');\n\t\t\t}\n\n\t\t\tthis.sequence = new QuestSequence(script.sequence, this.db);\n\n\t\t\tthis.promise = this.q.promise\n\t\t\t\t.then(function(){\n\t\t\t\t\t// check if there are unlogged questions and log them\n\t\t\t\t\tself.logger.suppressPulse(); // this is the end of the task, we want to post all the logs at once.\n\t\t\t\t\t_.each($rootScope.current.questions, function(quest){\n\t\t\t\t\t\tif(quest.$logged){\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * logs to server\n\t\t\t\t\t\t * @param {Object} log : the actual data regarding this log\n\t\t\t\t\t\t * @param {Object} pageData : General inforamtion about this page\n\t\t\t\t\t\t * @param {Object} global : The global object\n\t\t\t\t\t\t */\n\t\t\t\t\t\tself.log(quest, {}, $rootScope.global);\n\t\t\t\t\t\tquest.$logged = true;\n\t\t\t\t\t});\n\t\t\t\t\tself.logger.suppressPulse(false); // turn suppress off\n\t\t\t\t\treturn self.logger.send();\n\t\t\t\t})\n\t\t\t\t['finally'](settings.onEnd || angular.noop); // end only after logging has finished (regardless of success)\n\n\t\t\tparse(script, this.db);\n\t\t}\n\n\t\t_.extend(Task.prototype, {\n\t\t\tlog: function(){\n\t\t\t\tthis.logger.log.apply(this.logger, arguments);\n\t\t\t},\n\t\t\tcurrent: function(){\n\t\t\t\tvar nextObj = this.sequence.current();\n\n\t\t\t\tif (!nextObj){\n\t\t\t\t\tthis.q.resolve();\n\t\t\t\t}\n\n\t\t\t\treturn nextObj;\n\t\t\t},\n\t\t\tnext: function(){\n\t\t\t\treturn this.sequence.next();\n\t\t\t},\n\t\t\tprev: function(){\n\t\t\t\treturn this.sequence.prev();\n\t\t\t}\n\t\t});\n\n\t\treturn Task;\n\t}\n\n\treturn TaskProvider;\n});\n","define('quest/task/parseProvider',[],function(){\n\n\tparseProvider.$inject = ['piConsole'];\n\tfunction parseProvider(piConsole){\n\t\tfunction parse(script, db){\n\t\t\tdb.createColl('pages');\n\t\t\tdb.createColl('questions');\n\n\t\t\tdb.add('pages', script.pagesSets || []);\n\t\t\tdb.add('questions', script.questionsSets || []);\n\n\t\t\tscript.settings || (script.settings = {});\n\n\t\t\tpiConsole.setSettings(script.settings.DEBUG || {});\n\t\t}\n\n\t\treturn parse;\n\t}\n\n\treturn parseProvider;\n});\n","define('quest/task/dfltQuestLogger',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tfunction dfltQuestLogger(log, pageData, global){\n\t\tglobal;\n\t\tvar logObj = _.extend({},pageData,log);\n\t\tif (logObj.declined) {\n\t\t\tlogObj.response = log.responseObj = undefined;\n\t\t}\n\t\treturn logObj;\n\t}\n\n\treturn dfltQuestLogger;\n\n});\n","define('quest/task/task-module',['require','angular','utils/logger/logger-module','utils/database/databaseModule','utils/console/consoleModule','./questSequenceProvider','./taskProvider','./parseProvider','./dfltQuestLogger'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('task', [\n\t\trequire('utils/logger/logger-module').name,\n\t\trequire('utils/database/databaseModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.service('QuestSequence', require('./questSequenceProvider'));\n\tmodule.service('Task', require('./taskProvider'));\n\tmodule.service('taskParse', require('./parseProvider'));\n\n\tmodule.value('dfltQuestLogger', require('./dfltQuestLogger'));\n\n\treturn module;\n});\n","/*\n *\tOne module to rule them all.\n *\tThis module is responsible to pull together all the piquest components.\n *\tCalling it should suffice to activate the whole piquest stuff.\n */\ndefine('quest/questModule',['require','quest/directives/questDirectivesModule','quest/task/task-module'],function(require){\n\n\trequire('quest/directives/questDirectivesModule');\n\trequire('quest/task/task-module');\n\n\tvar module = angular.module('piQuest', ['questDirectives','task']);\n\n\treturn module;\n});\n","/*\n * @name: piMessage Directive\n */\ndefine('message/messageDirective',['require','underscore'],function (require) {\n\n\tvar _ = require('underscore');\n\n\tdirective.$inject = ['$compile', '$rootScope', '$document', 'piConsole'];\n\tfunction directive($compile, $rootScope, $document, $console){\n\t\treturn {\n\t\t\tlink: function($scope, $element) {\n\t\t\t\tvar events = 'keydown';\n\t\t\t\tvar script = $scope.script;\n\t\t\t\tvar newScope = $scope.newScope = $scope.$new();\n\t\t\t\tvar template;\n\t\t\t\tvar context = {\n\t\t\t\t\tglobal : $rootScope.global,\n\t\t\t\t\tcurrent : $rootScope.current,\n\t\t\t\t\ttask: script\n\t\t\t\t};\n\n\t\t\t\t// try to render template\n\t\t\t\ttry {\n\t\t\t\t\ttemplate = _.template(script.$template)(context);\n\t\t\t\t} catch(e){\n\t\t\t\t\ttemplate = script.$template;\n\t\t\t\t\t$console('message').error('failed to render template', e);\n\t\t\t\t}\n\n\t\t\t\t_.extend($scope, context);\n\t\t\t\t$scope.done = done;\n\n\t\t\t\t// listen for events\n\t\t\t\t$document.on(events, onKeydown);\n\t\t\t\t$scope.$on('$destroy',function(){\n\t\t\t\t\t$document.off(events, onKeydown);\n\t\t\t\t});\n\n\t\t\t\t$element.html(template);\n\t\t\t\t$compile($element.contents())(newScope);\n\n\t\t\t\t// check if the we should proceed and if so call done\n\t\t\t\tfunction onKeydown(e){\n\t\t\t\t\t// accept both the keyCode and the key itself\n\t\t\t\t\tvar keyArr = _.isArray(script.keys) ? script.keys : [script.keys];\n\t\t\t\t\tvar keys = _.map(keyArr,function(value){\n\t\t\t\t\t\treturn _.isString(value) ? value.toUpperCase().charCodeAt(0) : value;\n\t\t\t\t\t});\n\n\t\t\t\t\t// event is in the keys array\n\t\t\t\t\t// ~ return 0 only if target was not found\n\t\t\t\t\tif (~_.indexOf(keys, e.which)){\n\t\t\t\t\t\t$scope.done();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction done(){\n\t\t\t\t\tnewScope.$destroy();\n\t\t\t\t\t$element.empty();\n\t\t\t\t\t$scope.$emit('message:done');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\n\n\n\n\treturn directive;\n});\n","/*\n * @name: messageDone Directive\n */\ndefine('message/messageDoneDirective',[],function () {\n\n\tdirective.$inject = [];\n\tfunction directive(){\n\t\treturn {\n\t\t\tlink: function($scope, $element){\n\t\t\t\t$element.on('click', function(){\n\t\t\t\t\t$scope.done();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('message/messageModule',['require','angular','utils/console/consoleModule','./messageDirective','./messageDoneDirective'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.message',[\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.directive('piMessage', require('./messageDirective'));\n\tmodule.directive('piMessageDone', require('./messageDoneDirective'));\n\n\treturn module;\n});\n","/**\n * @name: taskActivateProvider\n */\ndefine('taskManager/task/taskActivateProvider',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\n\tfunction provider(){\n\t\tvar activators = {};\n\n\t\tthis.$get = taskActivateProvider;\n\n\t\tthis.set = function set(name, fn){\n\t\t\tactivators[name] = fn;\n\t\t};\n\n\t\tthis.get = function(name){\n\t\t\treturn activators[name];\n\t\t};\n\t}\n\n\n\ttaskActivateProvider.$inject = ['$q', '$rootScope', '$injector'];\n\tfunction taskActivateProvider($q,$rootScope, $injector){\n\t\tvar self = this;\n\n\t\tfunction taskActivate(task, $element, $scope){\n\t\t\tvar activator;\n\t\t\tvar def = $q.defer();\n\t\t\tvar global = $rootScope.global;\n\t\t\tvar script = task.$script;\n\t\t\tvar destroy;\n\n\t\t\t// get activation function\n\t\t\tif (_.isFunction(script)){\n\t\t\t\tactivator = script;\n\t\t\t}\n\n\t\t\tif (!activator && script && _.isFunction(script.play)){\n\t\t\t\tactivator = _.bind(script.play, script);\n\t\t\t\tactivator.$inject = $injector.annotate(script.play);\n\t\t\t}\n\n\t\t\tif (!activator && script && _.isArray(script.play)){\n\t\t\t\tactivator = _.bind(script.play[script.play.length-1], script);\n\t\t\t\tactivator.$inject = $injector.annotate(script.play);\n\t\t\t}\n\n\n\t\t\tif (!activator && task.type){\n\t\t\t\tactivator = self.get(task.type);\n\t\t\t}\n\n\t\t\tif (!_.isFunction(activator)){\n\t\t\t\tthrow new Error('Activator function not found for the \"' + task.type + '\" task');\n\t\t\t}\n\n\t\t\t// activate task\n\t\t\t/**\n\t\t\t * activation function\n\t\t\t * @param {function} done calback for finishing the task\n\t\t\t * @param {obj} props an object with all the stuff we think we could need...\n\t\t\t * @type {[type]}\n\t\t\t */\n\n\t\t\tdestroy = $injector.invoke(activator, null, {\n\t\t\t\tdone: _.bind(def.resolve,def),\n\t\t\t\ttask: task,\n\t\t\t\tscript: script,\n\t\t\t\t$element: $element,\n\t\t\t\t$scope: $scope,\n\t\t\t\tglobal: global\n\t\t\t});\n\n\t\t\t// if activator returns a function use it to clean up the task\n\t\t\t_.isFunction(destroy) && def.promise['finally'](destroy);\n\n\t\t\treturn def;\n\t\t}\n\n\t\treturn taskActivate;\n\t}\n\n\treturn provider;\n});\n","/*\n * @name: taskDirective\n */\ndefine('taskManager/task/taskDirective',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tdirective.$inject = ['taskActivate','managerCanvas','$document', '$window', '$rootScope'];\n\tfunction directive(activateTask, canvas, $document, $window, $rootScope){\n\t\treturn {\n\t\t\tscope:{\n\t\t\t\ttask: '=piTask'\n\t\t\t},\n\t\t\tlink: function($scope, $element){\n\t\t\t\tvar task = $scope.task;\n\t\t\t\tvar canvasOff, oldTitle;\n\t\t\t\tvar def;\n\t\t\t\tvar promise;\n\t\t\t\tvar proceedObject;\n\t\t\t\tvar settings = $scope.$parent.settings || {};\n\t\t\t\tvar script = task.$script || {};\n\t\t\t\tvar taskName = task.name || script.name;\n\n\t\t\t\tif (!task){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * listen for skip events\n\t\t\t\t */\n\t\t\t\tif (settings.skip){\n\t\t\t\t\t$document.on('keydown',proceedListener);\n\t\t\t\t\t$scope.$on('$destroy', function(){\n\t\t\t\t\t\t$document.off('keydown', proceedListener);\n\t\t\t\t\t\t$document.off('keydown', skipListener);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Setup current object\n\t\t\t\t */\n\t\t\t\t$rootScope.current = $window.piGlobal.current = script.current || {};\n\t\t\t\tif (taskName){\n\t\t\t\t\t// extend current script with the piGlobal object\n\t\t\t\t\t_.extend($rootScope.current, $window.piGlobal[taskName] || {});\n\t\t\t\t\t// set the current object back into the global\n\t\t\t\t\t$window.piGlobal[taskName] = script.current;\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Activate task\n\t\t\t\t */\n\t\t\t\tdef = activateTask(task, $element, $scope.$new());\n\t\t\t\tpromise = def.promise;\n\n\t\t\t\t/**\n\t\t\t\t * Add and remove canvas\n\t\t\t\t */\n\t\t\t\tcanvasOff = canvas(task.canvas); // apply canvas settings\n\t\t\t\tpromise['finally'](canvasOff); // remove canvas settings\n\n\t\t\t\t/**\n\t\t\t\t * Add and remove title\n\t\t\t\t * if task.title is set, set the title and remove at the end...\n\t\t\t\t */\n\t\t\t\tif (task.title){\n\t\t\t\t\toldTitle = $document[0].title;\n\t\t\t\t\t$document[0].title = task.title;\n\t\t\t\t\tpromise['finally'](function(){$document[0].title = oldTitle;});\n\t\t\t\t}\n\n\t\t\t\tpromise['finally'](function(){\n\t\t\t\t\t$scope.$emit('task:done', proceedObject);\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Listen for skip events\n\t\t\t\t * F5 = refresh\n\t\t\t\t * esc = set up arrows for prev/next\n\t\t\t\t * @param  {Event} e\n\t\t\t\t */\n\t\t\t\tfunction proceedListener(e){\n\t\t\t\t\tvar which = e.key || e.which || e.keyCode;\n\n\t\t\t\t\t// ctrl r ==> refresh\n\t\t\t\t\tif (which == 82 && e.ctrlKey) {\n\t\t\t\t\t\tproceed(e, 'current');\n\t\t\t\t\t}\n\n\t\t\t\t\t// esc ==> listen for skip direction (once)\n\t\t\t\t\tif(which == 27) {\n\t\t\t\t\t\t$document.one('keydown', skipListener);\n\t\t\t        }\n\t\t\t\t}\n\n\t\t\t\t// skip on left/right key codes\n\t\t\t\tfunction skipListener(e){\n\t\t\t\t\tvar which = e.which || e.keyCode;\n\t\t\t\t\tif (which == 37) {proceed(e, 'prev');}\n\t\t\t\t\tif (which == 39) {proceed(e, 'next');}\n\t\t\t\t}\n\n\t\t\t\t// end task and proceed where needed\n\t\t\t\tfunction proceed(e, target){\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tproceedObject = {type:target, bustCache:true}; // when the deferred is resolved this object is used to tell piqPage where to proceed.\n\t\t\t\t\tdef.resolve();\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","/**\n * The module responsible for the single task.\n * It knows how to load a task and activate it.\n * It also supplies the basic task directive.\n * @return {module} pi.task module.\n */\ndefine('taskManager/task/taskModule',['require','angular','underscore','./taskActivateProvider','./taskDirective'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.task',[]);\n\tvar _ = require('underscore');\n\n\tmodule.provider('taskActivate', require('./taskActivateProvider'));\n\tmodule.directive('piTask', require('./taskDirective'));\n\n\t// the tasks defined here essentialy activate the default players for quest/message/pip.\n\n\tmodule.config(['taskActivateProvider', function(activateProvider){\n\n\t\tactivateQuest.$inject = ['done', '$element', '$scope', '$compile', 'script','task'];\n\t\tfunction activateQuest(done, $canvas, $scope, $compile, script, task){\n\t\t\tvar $el;\n\n\t\t\t// update script name\n\t\t\ttask.name && (script.name = task.name);\n\n\t\t\t$scope.script = script;\n\n\t\t\t$canvas.append('<div pi-quest></div>');\n\t\t\t$el = $canvas.contents();\n\t\t\t$compile($el)($scope);\n\n\t\t\t// clean up piQuest\n\t\t\t$el.controller('piQuest').task.promise['finally'](function(){\n\t\t\t\tdone();\n\t\t\t});\n\n\t\t\treturn function questDestroy(){\n\t\t\t\t$el.scope().$destroy();\n\t\t\t\t$el.remove();\n\t\t\t};\n\t\t}\n\n\t\tactivateProvider.set('quest', activateQuest);\n\t}]);\n\n\tmodule.config(['taskActivateProvider', function(activateProvider){\n\t\tactivateMessage.$inject = ['done', '$element', 'task', '$scope','$compile'];\n\t\tfunction activateMessage(done, $canvas, task, $scope, $compile){\n\t\t\tvar $el;\n\n\t\t\t$scope.script = task;\n\n\t\t\t$canvas.append('<div pi-message></div>');\n\t\t\t$el = $canvas.contents();\n\t\t\t$compile($el)($scope);\n\n\t\t\t// clean up\n\t\t\t$scope.$on('message:done', function(){\n\t\t\t\tdone();\n\t\t\t});\n\n\t\t\treturn function destroyMessage(){\n\t\t\t\t$scope.$destroy();\n\t\t\t\t$el.remove();\n\t\t\t};\n\t\t}\n\n\t\tactivateProvider.set('message', activateMessage);\n\t}]);\n\n\tmodule.config(['taskActivateProvider', function(activateProvider){\n\t\tactivatePIP.$inject = ['done', '$element', 'task', 'script'];\n\t\tfunction activatePIP(done, $canvas, task, script){\n\t\t\tvar $el, req;\n\n\t\t\t// load PIP\n\t\t\treq = requirejs.config({\n\t\t\t\tcontext: _.uniqueId(),\n\t\t\t\tbaseUrl:'../bower_components/PIPlayer/dist/js', // can't use packages yet as urls in pip aren't relative...\n\t\t\t\tpaths: {\n\t\t\t\t\t//plugins\n\t\t\t\t\ttext: ['//cdnjs.cloudflare.com/ajax/libs/require-text/2.0.3/text.min', \"../../bower_components/requirejs-text/text\"],\n\n\t\t\t\t\t// Core Libraries\n\t\t\t\t\tjquery: [\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min\",\"../../bower_components/jquery/dist/jquery.min\"],\n\t\t\t\t\tunderscore: [\"//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min\",\"../../bower_components/lodash-compat/lodash.min\"],\n\t\t\t\t\tbackbone: ['//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min', \"../../bower_components/backbone/backbone\"]\n\t\t\t\t},\n\n\t\t\t\tdeps: ['jquery', 'backbone', 'underscore']\n\t\t\t});\n\n\t\t\t// update script name\n\t\t\ttask.name && (script.name = task.name);\n\n\t\t\t$canvas.append('<div pi-player></div>');\n\t\t\t$el = $canvas.contents();\n\t\t\t$el.addClass('pi-spinner');\n\n\t\t\treq(['activatePIP'], function(activate){\n\t\t\t\t$el.removeClass('pi-spinner');\n\t\t\t\tactivate(script, done);\n\t\t\t});\n\n\t\t\treturn function destroyPIP(){\n\t\t\t\t$el.remove();\n\t\t\t\treq(['app/task/main_view'], function(main){\n\t\t\t\t\tmain.deferred.resolve();\n\t\t\t\t\tmain.destroy();\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tactivateProvider.set('pip', activatePIP);\n\t}]);\n\n\treturn module;\n});\n","define('taskManager/canvas/canvasConstructor',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\t/**\n\t * Takes a map of css rules and applies them.\n\t * Returns a function that returns the page to its former condition.\n\t *\n\t * The rule map is an object of ruleName -> ruleObject.\n\t *\n\t * var ruleObject = {\n\t * \telement : wrapped element to affect\n\t * \tproperty: css property to modify\n\t * }\n\t *\n\t * @param  {Object} map      A hash of rules.\n\t * @param  {Object} settings A hash of ruleName -> value\n\t * @return {Function}        A function that undoes all the previous changes\n\t */\n\tfunction canvasContructor(map, settings){\n\t\tvar offArr;\n\n\t\tif (!_.isPlainObject(map)){\n\t\t\tthrow new Error('canvas(map): You must set a rule map for canvas to work properly');\n\t\t}\n\n\t\t// if settings is undefined return a function that doesn't do anything\n\t\t// just so we don't need to make sure that the user modifies the canvas\n\t\tif (_.isUndefined(settings)){\n\t\t\treturn _.noop;\n\t\t}\n\n\t\tif (!_.isPlainObject(settings)){\n\t\t\tthrow new Error('canvas(settings): canvas settings must be an object');\n\t\t}\n\n\t\t// create an array of off functions to undo any changes by this action\n\t\toffArr = _.map(settings, function(value,key){\n\t\t\tvar rule = map[key];\n\t\t\tif (rule){\n\t\t\t\treturn on(rule.element, rule.property, value);\n\t\t\t} else {\n\t\t\t\tthrow new Error('canvas('+ key +'): unknow key in canvas object.');\n\t\t\t}\n\t\t});\n\n\t\treturn function off(){\n\t\t\t_.forEach(offArr, function(fn){fn.call();});\n\t\t};\n\t}\n\n\tfunction on($el, property, value){\n\t\tvar old = $el.css(property); // save old value\n\t\t$el.css(property, value); // set new value\n\t\treturn _.bind($el.css, $el, property, old); // create off function: bind $el.css(property, old)\n\t}\n\n\treturn canvasContructor;\n\n});\n","define('taskManager/canvas/managerCanvasService',['require','underscore','angular','./canvasConstructor'],function(require){\n\n\tvar _ = require('underscore');\n\tvar angular = require('angular');\n\tvar canvasConstructor = require('./canvasConstructor');\n\n\tmanagerCanvasService.$inject = ['$rootElement', '$document'];\n\tfunction managerCanvasService($rootElement, $document){\n\t\tvar $body = angular.element($document[0].body);\n\n\t\tvar map = {\n\t\t\tbackground \t\t\t: {element: $body, property: 'backgroundColor'},\n\t\t\tcanvasBackground\t: {element: $rootElement, property:'backgroundColor'},\n\t\t\tfontSize \t\t\t: {element: $rootElement, property:'fontSize'},\n\t\t\tfontColor \t\t\t: {element: $rootElement, property:'color'}\n\t\t};\n\n\t\treturn _.bind(canvasConstructor, null, map);\n\t}\n\n\treturn managerCanvasService;\n\n});\n","define('taskManager/canvas/canvasModule',['require','angular','./managerCanvasService'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('pi.canvas',[]);\n\n\tmodule.service('managerCanvas', require('./managerCanvasService'));\n\n\treturn module;\n});\n","/**\n * Swap directive\n * Enables a slide-show type interface.\n * It exposes a controller with the next/prev/refresh/empty methods.\n * Each time next is called, the content is re-compiled and animated in, and old content is animated out.\n *\n * @param  {[type]} require [description]\n * @return {[type]}         [description]\n */\ndefine('utils/helperDirectives/piSwap/piSwapDirective',['require','underscore'],function (require) {\n\t// get template\n\tvar _  = require('underscore');\n\n\tswapControler.$inject = ['$scope'];\n\tfunction swapControler($scope){\n\t\tthis.$scope = $scope;\n\t}\n\n\t_.extend(swapControler.prototype, {\n\t\tnext : function(props, options){\n\t\t\tthis.$scope.enter(props, options);\n\t\t},\n\t\tprev: function(props, options){\n\t\t\tthis.$scope.enter(props, options);\n\t\t},\n\t\trefresh: function(props){\n\t\t\tthis.$scope.refresh(props);\n\t\t},\n\t\tempty: function(options){\n\t\t\tthis.$scope.empty(options);\n\t\t}\n\t});\n\n\tswapDirective.$inject = ['$compile', '$animate'];\n\tfunction swapDirective($compile, $animate){\n\t\treturn {\n\t\t\t//replace: true,\n\t\t\ttransclude: true,\n\t\t\tcontroller: swapControler,\n\t\t\tcontrollerAs: 'ctrl',\n\t\t\tcompile: function(){\n\t\t\t\treturn {\n\t\t\t\t\tpre: this.pre,\n\t\t\t\t\tpost: function(){}\n\t\t\t\t};\n\t\t\t},\n\t\t\tpre: function($scope, $element, $attr, $ctrls, $transclude) {\n\t\t\t\t$scope.enter = enter;\n\t\t\t\t$scope.empty = cleanupLast;\n\t\t\t\t$scope.refresh = refresh;\n\n\t\t\t\tvar currentScope, // the scope of the current element\n\t\t\t\t\tcurrentElement, // an entering element (up until it leaves)\n\t\t\t\t\tpreviousElement, // an element that is currently leaving\n\t\t\t\t\tparentElement = $element;\n\n\t\t\t\tfunction cleanupLast(opts) {\n\t\t\t\t\tvar options = opts || {};\n\n\t\t\t\t\tif(previousElement) {\n\t\t\t\t\t\tpreviousElement.remove();\n\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentScope) {\n\t\t\t\t\t\tcurrentScope.$destroy();\n\t\t\t\t\t\tcurrentScope = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(currentElement) {\n\t\t\t\t\t\t$animate.leave(currentElement, function() {\n\t\t\t\t\t\t\tpreviousElement = null;\n\t\t\t\t\t\t\toptions.postLeave && options.postLeave();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpreviousElement = currentElement;\n\t\t\t\t\t\tcurrentElement = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction enter(props, opts){\n\t\t\t\t\tvar options = opts || {};\n\t\t\t\t\toptions.pre && options.pre();\n\n\t\t\t\t\tif (!props){\n\t\t\t\t\t\treturn cleanupLast(options);\n\t\t\t\t\t}\n\n\t\t\t\t\t// create new scope and extend it with props\n\t\t\t\t\tvar newScope = _.extend($scope.$new(), props);\n\n\t\t\t\t\t// create new element\n\t\t\t\t\t$transclude(newScope, function(clone){\n\n\t\t\t\t\t\t// @TODO: add animation info\n\t\t\t\t\t\t// clone.addClass(direction); // maybe add this to the parent? how do we control both enter and leave with this method?\n\t\t\t\t\t\taddAnimations(clone, options.animate);\n\n\t\t\t\t\t\t// First send away the previous element (if it exists)\n\t\t\t\t\t\tcleanupLast(options);\n\n\t\t\t\t\t\t// Instantiate new element\n\t\t\t\t\t\tcurrentElement = clone;\n\n\t\t\t\t\t\tcurrentScope = newScope;\n\n\t\t\t\t\t\t// Animate it in\n\t\t\t\t\t\t$animate.enter(currentElement, parentElement, null, function(){\n\t\t\t\t\t\t\toptions.post && options.post();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction refresh(props){\n\t\t\t\t\t_.extend(currentScope, props);\n\t\t\t\t}\n\n\t\t\t\tfunction addAnimations(element, animationsStr){\n\t\t\t\t\tif (!animationsStr){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar animations = animationsStr.split(\" \");\n\n\t\t\t\t\t_.each(animations, function(animation){\n\t\t\t\t\t\t// Make sure that this animation exists\n\t\t\t\t\t\tif (!$injector.has(\".\" + animation + '-animation')){\n\t\t\t\t\t\t\tpiConsole(['page','animation']).error('Unknown animation type: \"' + animation + '\"');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\telement.addClass(animationsStr);\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t};\n\t};\n\n\treturn swapDirective;\n});\n","\ndefine('text!utils/helperDirectives/piSpinner/spinner.html',[],function () { return '<div>\\n\\t<img ng-if=\"spinner\" class=\"pi-logo\" src=\"img/loader.gif\" />\\n\\t<div ng-if=\"!spinner\" ng-transclude></div>\\n</div>';});\n\n","/*\n * @name: spinner Directive\n */\ndefine('utils/helperDirectives/piSpinner/piSpinnerDirective',['require','text!./spinner.html'],function (require) {\n\t// get template\n\tvar template = require('text!./spinner.html');\n\n\tdirective.$inject = [];\n\tfunction directive(){\n\t\treturn {\n\t\t\ttransclude: true,\n\t\t\treplace: true,\n\t\t\ttemplate:template,\n\t\t\trequire: [],\n\t\t\t// controller: '',\n\t\t\t// controllerAs: 'ctrl',\n\t\t\tscope:{\n\t\t\t\tspinner: '=piSpinner'\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('utils/helperDirectives/helperDirectivesModule',['require','angular','./piSwap/piSwapDirective','./piSpinner/piSpinnerDirective'],function(require){\n\tvar angular = require('angular');\n\tvar module = angular.module('piHelperDirective', []);\n\n\tmodule.directive('piSwap', require('./piSwap/piSwapDirective'));\n\tmodule.directive('piSpinner', require('./piSpinner/piSpinnerDirective'));\n\n\treturn module;\n});\n","define('taskManager/managerService',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tmanagerService.$inject = ['$rootScope', '$q', 'managerSequence', 'managerTaskLoad', '$injector'];\n\tfunction managerService($rootScope, $q, ManagerSequence, taskLoad, $injector){\n\n\t\t/**\n\t\t * This is the constructor for the manager object.\n\t\t *\n\t\t * The manager is responsible for the interface between the managerDirective and the managerSequence\n\t\t * It deals with loading tasks (pulled from the sequence)\n\t\t * And notifying the directive that a new task is ready to be run.\n\t\t *\n\t\t * listens to manager:next and manager:prev ==> proceeds sequence\n\t\t *\n\t\t * emits manager:loaded <== when a script is loaded\n\t\t *\n\t\t * @param  {Scope} $scope The scope to be notified\n\t\t * @param  {Object} script The manager script to be parsed\n\t\t * @return {Object}\n\t\t */\n\t\tfunction manager($scope, script){\n\t\t\tvar self = this;\n\t\t\tvar settings = script.settings || {};\n\n\t\t\t// make sure this works without a new statement\n\t\t\tif (!(this instanceof manager)){\n\t\t\t\t// jshint newcap:false\n\t\t\t\treturn new manager($scope,script);\n\t\t\t\t// jshint newcap:true\n\t\t\t}\n\n\t\t\tthis.$scope = $scope;\n\t\t\tthis.script = script;\n\n\t\t\t// create sequence\n\t\t\tthis.sequence = new ManagerSequence(script);\n\n\t\t\t// activate all setup stuff\n\t\t\tsetup($scope, settings);\n\n\t\t\t$scope.$on('manager:next', function(event, target){\n\t\t\t\ttarget || (target = {type:'next'});\n\t\t\t\tswitch (target.type){\n\t\t\t\t\tcase 'current':\n\t\t\t\t\t\tself.load(target);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prev':\n\t\t\t\t\t\tself.prev(target);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t/* fall through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tself.next(target);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$scope.$on('manager:prev', function(){self.prev();});\n\n\t\t}\n\n\t\t_.extend(manager.prototype, {\n\t\t\tnext: function(target){\n\t\t\t\tthis.sequence.next();\n\t\t\t\tthis.load(target);\n\t\t\t},\n\n\t\t\tprev: function(target){\n\t\t\t\tthis.sequence.prev();\n\t\t\t\tthis.load(target);\n\t\t\t},\n\n\t\t\tcurrent: function(){\n\t\t\t\t// taskLoad sets the loaded script into $script\n\t\t\t\treturn this.sequence.current();\n\t\t\t},\n\n\t\t\tload: function(target){\n\t\t\t\tvar task = this.current();\n\t\t\t\tvar $scope = this.$scope;\n\t\t\t\tvar loadOptions = {\n\t\t\t\t\tbaseUrl: this.baseUrl,\n\t\t\t\t\tbustCache: target && target.bustCache\n\t\t\t\t};\n\n\t\t\t\tif (task){\n\t\t\t\t\ttaskLoad(task, loadOptions).then(function(){\n\t\t\t\t\t\t$scope.$emit('manager:loaded');\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// let the directive deal with the end of the sequence\n\t\t\t\t\t$scope.$emit('manager:loaded');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetBaseUrl: function(baseUrl){\n\t\t\t\tthis.baseUrl = baseUrl;\n\t\t\t}\n\t\t});\n\n\t\treturn manager;\n\n\t\t// just to separate the activation of all the settings: KISS\n\t\tfunction setup($scope, settings){\n\t\t\tvar canvas = $injector.get('managerCanvas');\n\t\t\tvar $document = $injector.get('$document');\n\t\t\tvar preloader = $injector.get('piPreloader');\n\t\t\tvar canvasOff;\n\n\t\t\t// activate canvas\n\t\t\tcanvasOff = canvas(settings.canvas);\n\t\t\t$scope.$on('$destroy', canvasOff);\n\n\t\t\t// preload images\n\t\t\tpreloader.loadArr('image',settings.preloadImages || []);\n\n\t\t\t// activate titles\n\t\t\tif (settings.title){\n\t\t\t\t$document[0].title = settings.title;\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\treturn managerService;\n\n});\n\n","define('taskManager/managerSequence',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\tsequenceProvider.$inject = ['Database'];\n\tfunction sequenceProvider(Database){\n\n\t\t/**\n\t\t * The sequence for the manager (essentialy the model).\n\t\t * @param  {Object} script A manager script.\n\t\t * @return {Object}\n\t\t */\n\t\tfunction sequence(script){\n\t\t\tvar db;\n\t\t\t// make sure this works without a new statement\n\t\t\tif (!(this instanceof sequence)){\n\t\t\t\t// jshint newcap:false\n\t\t\t\treturn new sequence(script);\n\t\t\t\t// jshint newcap:true\n\t\t\t}\n\n\t\t\t// setup database\n\t\t\tdb = this.db = new Database();\n\t\t\tdb.createColl('tasks');\n\t\t\tdb.add('tasks', script.tasksSets || []);\n\n\t\t\t// setup sequence\n\t\t\tthis.sequence = db.sequence('tasks', script.sequence);\n\t\t}\n\n\t\t_.extend(sequence.prototype, {\n\t\t\tnext: function(){\n\t\t\t\tthis.sequence.next();\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tprev: function(){\n\t\t\t\tthis.sequence.prev();\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tcurrent: function(){\n\t\t\t\treturn this.sequence.current();\n\t\t\t}\n\t\t});\n\n\t\treturn sequence;\n\t}\n\n\treturn sequenceProvider;\n});\n","/**\n * @name: managerLoadService\n * @returns {$q} A $q.promise that returns the target script\n */\ndefine('taskManager/managerLoadService',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tmanagerLoadService.$inject = ['$q', 'managerGetScript'];\n\tfunction managerLoadService($q, getScript){\n\n\t\tfunction managerLoadScript(source){\n\t\t\tvar promise = _.isString(source) ? getScript(source) : source;\n\t\t\treturn $q.when(promise);\n\t\t}\n\n\t\treturn managerLoadScript;\n\t}\n\n\treturn managerLoadService;\n});\n","define('taskManager/managerGetScriptService',['require'],function(require){\n\n\tgetScriptProvider.$inject = ['$q'];\n\tfunction getScriptProvider($q){\n\n\t\t// @TODO: separate the parsing into a different module (make this a dependency)\n\t\tfunction getScript(url, options){\n\t\t\toptions || (options = {});\n\t\t\tvar def = $q.defer(),\n\t\t\t\ttarget = \"\";\n\n\t\t\t// if url doesn't starts with / or has : then add baseUrl\n           \t/^\\/|:/.test(url) || (target += options.baseUrl ? options.baseUrl + '/' : \"\");\n\n            target += url;\n\n            options.isText && (target = 'text!' + target);\n            options.bustCache && (target += \"?bust=\" + (new Date()).getTime());\n\n\t\t\trequire([target], function(script){\n\t\t\t\tdef.resolve(script);\n\t\t\t}, function(err){\n\t\t\t\tdef.reject(err);\n\t\t\t});\n\n\t\t\treturn def.promise;\n\t\t}\n\n\t\treturn getScript;\n\t}\n\n\treturn getScriptProvider;\n\n});\n","/**\n * @name: taskLoadProvider\n * @returns {$q} A $q.promise that returns the target script\n */\ndefine('taskManager/managerTaskLoadService',['require','underscore'],function(require){\n\tvar _ = require('underscore');\n\n\ttaskLoadService.$inject = ['$q', 'managerGetScript', 'piConsole'];\n\tfunction taskLoadService($q, managerGetScript, $console){\n\n\t\tfunction getScript(url, options){\n\t\t\treturn managerGetScript(url, options)\n\t\t\t\t// make sure that the script is defined\n\t\t\t\t// and if not throw an appropriate error\n\t\t\t\t.then(function(script){\n\t\t\t\t\tvar e;\n\t\t\t\t\tif (_.isUndefined(script)){\n\t\t\t\t\t\te = new Error('Task ' + url + ' failed or has not been found. Make sure that you returned the script and that your script does not have any errors');\n\t\t\t\t\t\t$console('task').error(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn script;\n\t\t\t\t});\n\t\t}\n\n\t\tfunction taskLoad(task, options){\n\t\t\tvar promise, script, template;\n\n\t\t\t// script def\n\t\t\tif (task.scriptUrl){\n\t\t\t\tscript = getScript(task.scriptUrl, options);\n\t\t\t} else {\n\t\t\t\tscript = task.script;\n\t\t\t}\n\n\t\t\t// template def\n\t\t\tif (task.templateUrl){\n\t\t\t\ttemplate = getScript(task.templateUrl, _.extend({isText:true},options));\n\t\t\t} else {\n\t\t\t\ttemplate = task.template;\n\t\t\t}\n\n\t\t\tif (!script && !template){\n\t\t\t\tthrow new Error('Tasks must have either a \"script\" property or a \"scriptUrl\" property (or a \"template\" property in specific cases).');\n\t\t\t}\n\n\t\t\tpromise = $q.all({script: $q.when(script), template: $q.when(template)});\n\n\t\t\tpromise.then(function(promises){\n\t\t\t\ttask.$script = promises.script;\n\t\t\t\ttask.$template = promises.template;\n\t\t\t\treturn task;\n\t\t\t}, function(e){\n\t\t\t\t$console('load').error('Failed to load task script - make sure that your URLs are all correct.',e);\n\t\t\t});\n\n\t\t\treturn promise;\n\t\t}\n\n\t\treturn taskLoad;\n\t}\n\n\treturn taskLoadService;\n});\n","/**\n * Should manage various tasks.\n * For now it should simply load and activate a questionnaire.\n * Eventually it should be able to take a sequence of tasks and run them.\n * @name  managerDirctive\n * @return {directive}\n */\ndefine('taskManager/managerDirective',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\tmanagerControler.$inject = ['$scope', 'managerService', 'managerLoad', 'piConsole'];\n\tfunction managerControler($scope, ManagerService, managerLoad, piConsole){\n\t\tthis.init = init;\n\n\n\t\tfunction init(source){\n\t\t\tvar ctrl = this;\n\t\t\tvar taskSource;\n\n\t\t\ttry {\n\t\t\t\ttaskSource = $scope.$eval(source); // if source is a plain string eval returns undefined so we want to load this as a url\n\t\t\t} catch(e){\n\t\t\t\t// don't do anything. This means that the source is un compilable...\n\t\t\t} finally {\n\t\t\t\ttaskSource || (taskSource = source);\n\t\t\t}\n\n\t\t\tmanagerLoad(taskSource).then(success,error);\n\n\t\t\tfunction success(script){\n\t\t\t\t// takes taskSource and returns a path or undefined\n\t\t\t\tfunction getPath(path){\n\n\t\t\t\t\tif (!_.isString(path)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn path.substring(0, path.lastIndexOf('/'));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// keep the script on scope\n\t\t\t\t$scope.script = script;\n\t\t\t\t$scope.settings = (script && script.settings) || {};\n\n\t\t\t\t// create the manager\n\t\t\t\tctrl.manager = new ManagerService($scope, script);\n\t\t\t\tctrl.manager.setBaseUrl(getPath(taskSource));\n\n\t\t\t\t// activate first task\n\t\t\t\t$scope.$emit('manager:next');\n\t\t\t}\n\n\t\t\tfunction error(e){\n\t\t\t\tpiConsole('manager').error('Failed to load ' + taskSource, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tdirective.$inject = ['$q', '$injector', 'piConsole'];\n\tfunction directive($q, $injector,piConsole){\n\t\treturn {\n\t\t\tpriority: 1000,\n\t\t\treplace:true,\n\t\t\ttemplate: '<div pi-swap><div pi-task=\"task\" ng-class=\"{\\'pi-spinner\\':loading}\"></div></div>',\n\t\t\tcontroller: managerControler,\n\t\t\trequire: ['piManager', 'piSwap'],\n\t\t\tlink:  function($scope, $element, attr, ctrl){\n\t\t\t\tvar swap = ctrl[1], thisCtrl = ctrl[0];\n\t\t\t\tvar currentTask, prevTask;\n\n\t\t\t\tthisCtrl.init(attr.piManager);\n\n\t\t\t\t$scope.$on('manager:loaded', loaded);\n\t\t\t\t$scope.$on('task:done', taskDone);\n\t\t\t\t$scope.loading = true;\n\n\t\t\t\tfunction loaded(){\n\t\t\t\t\t$scope.loading = false;\n\n\t\t\t\t\t// keep previous task\n\t\t\t\t\tprevTask = currentTask;\n\n\t\t\t\t\t// get loaded task\n\t\t\t\t\tcurrentTask = thisCtrl.manager.current();\n\t\t\t\t\tpiConsole('manager').debug('Manager:currentTask', currentTask);\n\n\t\t\t\t\t// procced or and manager\n\t\t\t\t\tcurrentTask ? proceed() : done();\n\t\t\t\t}\n\n\t\t\t\tfunction proceed(){\n\t\t\t\t\tvar locals = {prevTask: prevTask, currentTask: currentTask};\n\t\t\t\t\t$qSequence([\n\t\t\t\t\t\t$scope.settings.onPreTask,\n\t\t\t\t\t\tprevTask && prevTask.post,\n\t\t\t\t\t\tcurrentTask.pre,\n\t\t\t\t\t\t_.bind(swap.next, swap, {task:currentTask, settings:$scope.settings}),\n\t\t\t\t\t\tfunction(){\n\t\t\t\t\t\t\t$scope.loading = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t], locals);\n\t\t\t\t}\n\n\t\t\t\tfunction done(){\n\t\t\t\t\tvar locals = {prevTask: prevTask, currentTask: currentTask};\n\t\t\t\t\t$qSequence([\n\t\t\t\t\t\tprevTask && prevTask.post,\n\t\t\t\t\t\t_.bind(swap.empty, swap),\n\t\t\t\t\t\t$scope.settings.onEnd,\n\t\t\t\t\t\tfunction(){\n\t\t\t\t\t\t\t$scope.loading = false;\n\t\t\t\t\t\t\t$scope.$emit('manager:done');\n\t\t\t\t\t\t}\n\t\t\t\t\t], locals);\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * This is called uppon task:done\n\t\t\t\t * It is responsible for proceeding to the following task\n\t\t\t\t * @param  {Event} ev   The event that triggered the taskdone\n\t\t\t\t * @param  {Object} args An object that describes the direction of proceeding\n\t\t\t\t */\n\t\t\t\tfunction taskDone(ev, args){\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t$scope.loading = true;\n\t\t\t\t\t$scope.$emit('manager:next', args);\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * chain a series of functions/promises/undefined\n\t\t\t\t * @param  {Array} arr an array of functions etc.\n\t\t\t\t * @return {promise}\n\t\t\t\t */\n\t\t\t\tfunction $qSequence(arr, locals){\n\t\t\t\t\tvar promise = $q.when();\n\n\t\t\t\t\t_(arr)\n\t\t\t\t\t\t// map into then functions\n\t\t\t\t\t\t.map(function(value){\n\t\t\t\t\t\t\treturn function(){\n\t\t\t\t\t\t\t\tvar prms = _.isFunction(value) ? $injector.invoke(value,null,locals||{}) : value;\n\t\t\t\t\t\t\t\treturn $q.when(prms);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce(function(promise, fn){\n\t\t\t\t\t\t\treturn promise.then(fn, function(e){\n\t\t\t\t\t\t\t\tpiConsole('manager').error('There was an error in the task sequence. ',e);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, promise);\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t}\n\n\n\treturn directive;\n});\n","define('taskManager/managerTaskDirective',[],function(){\n\n\tfunction directive(){\n\t\treturn {\n\t\t\tpriority: 1000,\n\t\t\ttemplate: '<div pi-manager=\"script\"></div>',\n\t\t\tcompile: function(){\n\t\t\t\treturn {\n\t\t\t\t\t// this need to be pre so that the wrapping directive gets rendered before the template\n\t\t\t\t\tpre: function($scope, $element, $attr){\n\t\t\t\t\t\tvar taskSource;\n\t\t\t\t\t\tvar source = $attr.piManagerTask;\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\ttaskSource = $scope.$eval(source);\n\t\t\t\t\t\t} catch(e){}\n\n\t\t\t\t\t\tvar task  = taskSource ? taskSource : {scriptUrl:source};\n\n\t\t\t\t\t\t$scope.script = {\n\t\t\t\t\t\t\tsequence: [task]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\treturn directive;\n});\n","define('taskManager/managerModule',['require','angular','./task/taskModule','./canvas/canvasModule','utils/utils/utilsModule','utils/helperDirectives/helperDirectivesModule','utils/console/consoleModule','./managerService','./managerSequence','./managerLoadService','./managerGetScriptService','./managerTaskLoadService','./managerDirective','./managerTaskDirective'],function(require){\n\n\tvar angular = require('angular');\n\tvar module = angular.module('taskManager',[\n\t\trequire('./task/taskModule').name,\n\t\trequire('./canvas/canvasModule').name,\n\t\trequire('utils/utils/utilsModule').name,\n\t\trequire('utils/helperDirectives/helperDirectivesModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t]);\n\n\tmodule.service('managerService', require('./managerService'));\n\tmodule.service('managerSequence', require('./managerSequence'));\n\tmodule.service('managerLoad', require('./managerLoadService'));\n\tmodule.service('managerGetScript', require('./managerGetScriptService'));\n\tmodule.service('managerTaskLoad', require('./managerTaskLoadService'));\n\tmodule.directive('piManager', require('./managerDirective'));\n\tmodule.directive('piManagerTask', require('./managerTaskDirective'));\n\n\treturn module;\n});\n","// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\ndefine('utils/animations/rafPolyfill',[],function() {\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n        var vp = vendors[i];\n        window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n        window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame'] || window[vp+'CancelRequestAnimationFrame']);\n    }\n    if (\n    \t/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || // iOS6 is buggy\n        !window.requestAnimationFrame || !window.cancelAnimationFrame\n    ) {\n        var lastTime = 0;\n        window.requestAnimationFrame = function(callback) {\n            var now = +new Date();\n            var nextTime = Math.max(lastTime + 16, now);\n            return setTimeout(function() { callback(lastTime = nextTime); },\n                              nextTime - now);\n        };\n        window.cancelAnimationFrame = clearTimeout;\n    }\n});\n\n","define('utils/animations/dropInAnimation',[],function(){\n\n\tfunction animation($window, now){\n\n\t\tvar topdx = 60;\n\t\tvar duration = 300;\n\t\tvar raf = $window.requestAnimationFrame;\n\t\tvar rafCancel = $window.cancelAnimationFrame;\n\n\t\treturn {\n\t\t\tenter: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// setup\n\t\t\t\telement.css({\n\t\t\t\t\ttop: -topdx +'px'\n\t\t\t\t});\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(enter);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\telement.css({top: '0px'});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction enter(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.top = 0;\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.top = (topdx * (proportion-1)) + 'px';\n\t\t\t\t\tcancelId = raf(enter);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tleave: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(leave);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction leave(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = 1-deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.top = (topdx * (proportion-1)) + 'px';\n\t\t\t\t\tcancelId = raf(leave);\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t}\n\n\t// $inject doesn't seem to work??\n \treturn ['$window', 'timerNow', animation];\n});\n","define('utils/animations/fadeAnimation',[],function(){\n\n\tfunction animation($window, now){\n\n\t\tvar duration = 300;\n\t\tvar raf = $window.requestAnimationFrame;\n\t\tvar rafCancel = $window.cancelAnimationFrame;\n\n\t\treturn {\n\t\t\tenter: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// setup\n\t\t\t\tel.style.opacity = 0;\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(enter);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.opacity = 1;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction enter(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.opacity = 1;\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.opacity = proportion;\n\t\t\t\t\tcancelId = raf(enter);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tleave: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(leave);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction leave(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = 1-deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.opacity = 0;\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.opacity = proportion;\n\t\t\t\t\tcancelId = raf(leave);\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t}\n\n\t// $inject doesn't seem to work??\n \treturn ['$window', 'timerNow', animation];\n});\n","define('utils/animations/slideAnimation',[],function(){\n\n\tfunction animation($window, now){\n\n\t\tvar duration = 300;\n\t\tvar raf = $window.requestAnimationFrame;\n\t\tvar rafCancel = $window.cancelAnimationFrame;\n\n\t\treturn {\n\t\t\tenter: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// setup\n\t\t\t\tel.style.left = '-100%';\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(enter);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.left = '0%';\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction enter(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = 1 - deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.left = '0%';\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.left = (-proportion*100) + '%';\n\n\t\t\t\t\tcancelId = raf(enter);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tleave: function(element, done){\n\t\t\t\tvar el = element[0]; // raw element;\n\t\t\t\tvar cancelId;\n\t\t\t\tvar start = now();\n\n\t\t\t\t// activate animation\n\t\t\t\tcancelId = raf(leave);\n\n\t\t\t\treturn function(canceled){\n\t\t\t\t\tif (canceled){\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tel.style.left = '100%';\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction leave(){\n\t\t\t\t\tvar deltaTime = now() - start;\n\t\t\t\t\tvar proportion = deltaTime/duration;\n\n\t\t\t\t\t// if we're out of time, finish the animation\n\t\t\t\t\tif (deltaTime > duration) {\n\t\t\t\t\t\tel.style.left = '100%';\n\t\t\t\t\t\trafCancel(cancelId);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.left = (proportion*100) + '%';\n\t\t\t\t\tcancelId = raf(leave);\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\t}\n\n\t// $inject doesn't seem to work??\n \treturn ['$window', 'timerNow', animation];\n});\n","define('utils/animations/animationModule',['require','angular','animate','./rafPolyfill','./dropInAnimation','./fadeAnimation','./slideAnimation'],function(require){\n\tvar angular = require('angular');\n\trequire('animate');\n\trequire('./rafPolyfill');\n\n\tvar module = angular.module('pi.animate',['ngAnimate']);\n\n\tmodule.animation('.drop-in', require('./dropInAnimation'));\n\tmodule.animation('.fade', require('./fadeAnimation'));\n\tmodule.animation('.slide', require('./slideAnimation'));\n\n\treturn module;\n});\n","/**\n *\tThe main module that ties the whole application together.\n *\tEssentially, we are creating a module with dependencies on anything interesting...\n */\ndefine('app',['require','angular','underscore','quest/questModule','message/messageModule','taskManager/managerModule','utils/animations/animationModule','utils/console/consoleModule'],function (require) {\n\n\tvar angular = require('angular');\n\tvar _ = require('underscore');\n\n\tvar submodules = [\n\t\trequire('quest/questModule').name,\n\t\trequire('message/messageModule').name,\n\t\trequire('taskManager/managerModule').name,\n\t\trequire('utils/animations/animationModule').name,\n\t\trequire('utils/console/consoleModule').name\n\t];\n\n\tvar app = angular.module('piApp', submodules);\n\n\t// setup the global variable\n\tapp.run(['$rootScope', '$rootElement', '$parse', '$window', function($rootScope, $rootElement, $parse, $window){\n\t\t// @TODO: get these out of here (app.config? app.run?)\n\t\tvar globalAttr = $rootElement.attr('pi-global');\n\t\tvar piGlobal = $parse(globalAttr)($window);\n\n\t\t// create the global object\n\t\twindow.piGlobal || (window.piGlobal = {});\n\t\t$rootScope.global = window.piGlobal;\n\n\t\tif (piGlobal){\n\t\t\t_.extend($rootScope.global, piGlobal);\n\t\t}\n\t}]);\n\n\treturn app;\n});\n","define(\"pipScorer/computeD\",[\"jquery\"],function(e){function r(){e.extend(this,{dataArray:{},AnalyzedVar:\"latency\",ErrorVar:\"error\",condVar:\"\",cond1VarValues:[],cond2VarValues:[],parcelVar:\"\",parcelValue:[],fastRT:300,maxFastTrialsRate:.1,minRT:400,maxRT:1e4,maxErrorParcelRate:.4,errorLatency:{use:\"latency\",penalty:600,useForSTD:!0},postSettings:{}})}return e.extend(r.prototype,{setComputeObject:function(r){e.extend(this,r)},setDataArray:function(){var e=window.piGlobal;this.dataArray=e.current.logs}}),r}),define(\"pipScorer/msgMan\",[\"underscore\"],function(e){function r(){this.messages=e.extend({},a)}var a={MessageDef:[],manyErrors:\"There were too many errors made to determine a result.\",tooFast:\"There were too many fast trials to determine a result.\",notEnough:\"There were not enough trials to determine a result.\"};return e.extend(r.prototype,{setMsgObject:function(r){e.extend(this.messages,r)},getScoreMsg:function(r){var a=this.messages.MessageDef;if(!a||!a.length)throw new Error('You must define a \"MessageDef\" array.');var t=parseFloat(r),n=null,o=null,s=\"error: msg was not set\",c=!1;if(e.each(a,function(e){n=parseFloat(e.cut),o=e.message,n>=t&&!c&&(s=o,c=!0)}),!c){var i=a.length,u=a[i-1];s=u.message}return s},getMessage:function(e){return this.messages[e]}}),r}),define(\"pipScorer/parcelMng\",[\"underscore\"],function(e){function r(e){this.parcelArray=[],this.scoreData={},this.msgMan=e}return e.extend(r.prototype,{Init:function(r){var a=this,t=this.msgMan,n=window.piGlobal,o=n.current.logs;a.parcelArray=[],a.scoreData={},a.msgMan=t;var s=r.AnalyzedVar,c=r.ErrorVar,i=r.parcelVar,u=r.parcelValue,l=r.minRT,g=r.maxRT,h=r.fastRT,p=0,f=0,d=0,v=0,m=parseFloat(r.maxFastTrialsRate);if(\"undefined\"==typeof u||0===u.length){d=0,p=0,f=0,v=0;var y={};y.name=\"general\",y.trialIData=[],e.each(o,function(e){e[s]>=l&&e[s]<=g?(d++,1==e.data[c]&&v++,a.validate(y,e,r)&&p++):e[s]<=h&&f++}),a.checkErrors(d,v,r),a.parcelArray[0]=y}else e.each(u,function(t,n){d=0,p=0,f=0,v=0;var u={};u.name=t,u.trialIData=[],e.each(o,function(e){var n=e.data[i];n==t&&(e[s]>=l&&e[s]<=g?(d++,1==e.data[c]&&v++,a.validate(u,e,r)&&p++):e[s]<=h&&f++)}),a.checkErrors(d,v,r),a.parcelArray[n]=u});f/p>m&&(a.scoreData.errorMessage=this.msgMan.getMessage(\"tooFast\"))},checkErrors:function(e,r,a){var t=a.maxErrorParcelRate;r/e>t&&(this.scoreData.errorMessage=this.msgMan.getMessage(\"manyErrors\"))},validate:function(e,r,a){var t=a.errorLatency,n=a.ErrorVar,o=r.data;return\"latency\"==t.use?(e.trialIData.push(r),!0):\"false\"==t.use?\"1\"==o[n]?!1:(e.trialIData.push(r),!0):\"penalty\"==t.use?(e.trialIData.push(r),!0):void 0},addPenalty:function(r,a){var t=a.errorLatency,n=this;if(\"penalty\"==t.use){var o=parseFloat(t.penalty),s=a.ErrorVar,c=a.AnalyzedVar,i=a.condVar,u=a.cond1VarValues,l=a.cond2VarValues,g=r.trialIData,h=r.avgCon1,p=r.avgCon2;e.each(g,function(e){var r=e.data,a=r[s],t=r[i],g=n.checkArray(t,u),f=n.checkArray(t,l);\"1\"==a&&(g?e[c]+=h+o:f&&(e[c]+=p+o))})}},avgAll:function(r){var a=this;e.each(a.parcelArray,function(e){a.avgParcel(e,r)})},avgParcel:function(r,a){var t=this,n=r.trialIData,o=a.condVar,s=a.cond1VarValues,c=a.cond2VarValues,i=a.AnalyzedVar,u=0,l=0,g=0,h=0,p=0,f=0;e.each(n,function(e){var r=e[i],a=e.data;g+=r,f++;var n=a[o],d=t.checkArray(n,s),v=t.checkArray(n,c);d?(h++,u+=r):v&&(p++,l+=r)}),(2>=h||2>=p)&&(t.scoreData.errorMessage=this.msgMan.getMessage(\"notEnough\")),0!==h&&(u/=h),0!==p&&(l/=p),r.avgCon1=u,r.avgCon2=l,r.diff=r.avgCon1-r.avgCon2,0!==f&&(r.avgBoth=g/f),t.addPenalty(r,a)},checkArray:function(e,r){for(var a=0;a<r.length;a++){var t=r[a];if(t==e)return!0}return!1},varianceAll:function(r){var a=this;e.each(a.parcelArray,function(e){a.varianceParcel(e,r)})},varianceParcel:function(r,a){var t=this,n=a.AnalyzedVar,o=r.trialIData,s=a.cond1VarValues,c=a.cond2VarValues,i=a.condVar,u=r.avgBoth,l=0,g=0,h=[],p=[],f=[],d=a.errorLatency,v=d.useForSTD;e.each(o,function(e){var r=e.data,o=e[n],u=a.ErrorVar,l=r[u],g=r[i],f=t.checkArray(g,s),d=t.checkArray(g,c);f?v?h.push(o):\"0\"==l&&h.push(o):d&&(v?p.push(o):\"0\"==l&&h.push(o))}),f=h.concat(p),e.each(f,function(e){var r=e;l=r-u,g+=l*l}),r.variance=g/(f.length-1)},scoreAll:function(r){var a=this,t=0;e.each(a.parcelArray,function(e){a.scoreParcel(e,r),t+=e.score});var n=t/a.parcelArray.length;a.scoreData.score=n.toFixed(2)},scoreParcel:function(e){var r=this,a=Math.sqrt(e.variance);0===a?(r.scoreData.errorMessage=this.msgMan.getMessage(\"notEnough\"),e.score=e.diff):e.score=e.diff/a}}),r}),define(\"pipScorer/Scorer\",[\"jquery\",\"./computeD\",\"./msgMan\",\"./parcelMng\"],function(e,r,a,t){function n(){this.computeData=new r,this.msgMan=new a,this.parcelMng=new t(this.msgMan)}return!!window.console||(console={log:e.noop,error:e.noop}),console.log||(console.log=function(){}),e.extend(n.prototype,{addSettings:function(e,r){switch(e){case\"compute\":this.computeData.setComputeObject(r);break;case\"message\":this.msgMan.setMsgObject(r);break;default:throw new Error('SCORER:addSettings: unknow \"type\" '+e)}},computeD:function(){var e=this.computeData,r=this.parcelMng;e.setDataArray(),r.Init(e),r.avgAll(e),r.varianceAll(e),r.scoreAll(e);var a=r.scoreData,t={};return void 0===a.errorMessage||null===a.errorMessage?(t.FBMsg=this.getFBMsg(a.score),t.DScore=a.score):(t.FBMsg=a.errorMessage,t.DScore=\"\"),t},postToServer:function(r,a,t,n){var o=this.computeData.postSettings||{},s=o.url,c={};return t||(t=o.score),n||(n=o.msg),c[t]=r,c[n]=a,e.post(s,JSON.stringify(c))},dynamicPost:function(r){var a=this.computeData.postSettings||{},t=a.url;return e.post(t,JSON.stringify(r))},getFBMsg:function(e){var r=this.msgMan.getScoreMsg(e);return r}}),n}),define(\"pipScorer\",[\"pipScorer/Scorer\"],function(e){return e});\n//# sourceMappingURL=Scorer.js.map;\ndefine('pipScorer', ['pipScorer/Scorer'], function (main) { return main; });\n\n","define('APIs/APIConstructor',['require','underscore'],function(require){\n\n\twindow.piGlobal || (window.piGlobal = {});\n\n\tvar _ = require('underscore');\n\tvar global = window.piGlobal;\n\n\t/**\n\t * Create a new API\n\t * @param {Object} options\n\t * {\n\t * \t\ttype: 'PIP',\n\t * \t\tsets: ['trial', 'stimulus', 'media']\n\t * }\n\t */\n\tfunction APIconstructor(options){\n\n\t\tfunction API(){\n\t\t\tvar script = this.script = {\n\t\t\t\tname: 'anonymous ' + options.type,\n\t\t\t\tsettings: {},\n\t\t\t\tcurrent: {}, // this is the actual namespace for this PIP\n\t\t\t\tsequence: []\n\t\t\t};\n\n\t\t\tthis.settings = script.settings;\n\n\t\t\t// create set arrays\n\t\t\t_.forEach(options.sets, function(set){\n\t\t\t\tscript[set + 'Sets'] = [];\n\t\t\t});\n\t\t}\n\n\t\t_.forEach(options.sets, function(set){\n\t\t\tAPI.prototype[_.camelCase('add-' + set + '-set')] = add_set(set);\n\t\t});\n\n\t\t_.extend(API.prototype, {\n\n\t\t\tsetName: function(name){\n\t\t\t\tthis.script.name = name;\n\t\t\t},\n\n\t\t\t// settings\n\t\t\taddSettings: function(name, settingsObj){\n\t\t\t\tvar settings;\n\n\n\n\t\t\t\tif (_.isPlainObject(settingsObj)){\n\t\t\t\t\tsettings = this.settings[name] = this.settings[name] || {};\n\t\t\t\t\t_.extend(settings, settingsObj);\n\t\t\t\t} else {\n\t\t\t\t\tthis.settings[name] = settingsObj;\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\taddSequence: function(sequence){\n\t\t\t\tvar script = this.script;\n\t\t\t\t_.isArray(sequence) || (sequence = [sequence]);\n\n\t\t\t\tscript.sequence = script.sequence.concat(sequence);\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\taddGlobal: function(obj){\n\t\t\t\tif (!_.isPlainObject(obj)){\n\t\t\t\t\tthrow new Error('global must be an object');\n\t\t\t\t}\n\t\t\t\treturn _.merge(global, obj);\n\t\t\t},\n\n\t\t\tgetGlobal: function(){\n\t\t\t\treturn global;\n\t\t\t},\n\n\t\t\taddCurrent: function(obj){\n\t\t\t\tif (!_.isPlainObject(obj)){\n\t\t\t\t\tthrow new Error('current must be an object');\n\t\t\t\t}\n\t\t\t\treturn _.merge(this.script.current, obj);\n\t\t\t},\n\n\t\t\tgetCurrent: function(){\n\t\t\t\treturn this.script.current;\n\t\t\t},\n\n\t\t\t// push a whole script\n\t\t\taddScript: function(obj){\n\t\t\t\treturn _.merge(this.script,obj);\n\t\t\t},\n\n\t\t\t// returns script (for debuging probably)\n\t\t\tgetScript: function(){\n\t\t\t\treturn this.script;\n\t\t\t},\n\n\t\t\t// name, response, taskName, taskNumber\n\t\t\tpost: function(url, obj){\n\t\t\t\t// just so we can use this in standalone PIP\n\t\t\t\tif (require.defined('jquery')){\n\t\t\t\t\treturn require('jquery' + '').ajax({\n\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tdata: JSON.stringify(obj),\n\t\t\t\t\t\tcontentType: \"application/json; charset=utf-8\",\n\t\t\t\t\t\tdataType: \"json\"\n\t\t\t\t\t});\n\n\t\t\t\t\t//.post(url, JSON.stringify(obj));\n\t\t\t\t} else {\n\t\t\t\t\tvar $injector = angular.injector(['ng']);\n\n\t\t\t\t\treturn $injector.invoke(['$http', function($http){\n\t\t\t\t\t\treturn $http.post(url, obj);\n\t\t\t\t\t}]);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tshuffle: function(collection){\n\t\t\t\treturn _.shuffle(collection);\n\t\t\t}\n\t\t});\n\n\t\treturn API;\n\n\t}\n\n\n\t /**\n\t  * Create a function that adds sets of a scpecific type\n\t  * @param {String} type  \tThe type of set setter to create\n\t  * @returns {Function} \tA setter object\n\t  */\n\tfunction add_set(type){\n\n\t\t/**\n\t\t * Adds a set to the targetSet\n\t\t * @param {String, Object} set    \tEither full set object, or the name of this setArr\n\t\t * @param {Array} setArr \t\t\tAn array of objects for this set\n\t\t * @returns {Object} The API object\n\t\t *\n\t\t * use examples:\n\t\t * fn({\n\t\t *   intro: [intro1, intro2],\n\t\t *   Default: [defaultTrial]\n\t\t * })\n\t\t * fn('intro',[intro1, intro2])\n\t\t * fn('Default',defaultTrial)\n\t\t *\n\t\t */\n\t\tfunction setSetter(set, setArr){\n\n\t\t\t// get the sets we want to extend (or create them)\n\t\t\tvar targetSets = this.script[type + \"Sets\"] || (this.script[type + \"Sets\"] = []);\n\t\t\tvar list;\n\n\t\t\tif (_.isPlainObject(set)) {\n\t\t\t\tlist = _(set)\n\t\t\t\t\t// for each set of elements\n\t\t\t\t\t.map(function(value, key){\n\t\t\t\t\t\t// add the set name to each key\n\t\t\t\t\t\t_.each(value, function(v){v.set = key;});\n\t\t\t\t\t\treturn value; // return the set\n\t\t\t\t\t})\n\t\t\t\t\t.flatten() // flatten all sets to a single array\n\t\t\t\t\t.value();\n\t\t\t}\n\n\t\t\tif (_.isArray(set)){\n\t\t\t\tlist = set;\n\t\t\t}\n\n\t\t\tif (_.isString(set)){\n\t\t\t\tlist = _.isArray(setArr) ? setArr : [setArr];\n\t\t\t\tlist = _.map(list, function(value){\n\t\t\t\t\tvalue.set = set;\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\t// merge the list into the targetSet\n\t\t\ttargetSets.push.apply(targetSets, list);\n\t\t}\n\n\t\treturn setSetter;\n\t}\n\n\treturn APIconstructor;\n});\n","define('pipAPI/pipAPI',['require','APIs/APIConstructor'],function(require){\n\tvar factory = require('APIs/APIConstructor');\n\n\tvar api = factory({\n\t\ttype: 'PIP',\n\t\tsets: ['trial', 'stimulus','media']\n\t});\n\n\tapi.prototype.addTrialSets = api.prototype.addTrialSet;\n\tapi.prototype.addStimulusSets = api.prototype.addStimulusSet;\n\tapi.prototype.addMediaSets = api.prototype.addMediaSet;\n\n\tapi.prototype.getLogs = function getLogs(){\n\t\treturn this.script.current.logs;\n\t};\n\n\treturn api;\n});\n","define('questAPI/questAPI',['require','APIs/APIConstructor'],function(require){\n\tvar api = require('APIs/APIConstructor');\n\n\treturn api({\n\t\ttype: 'quest',\n\t\tsets: ['pages', 'questions']\n\t});\n});\n","define('managerAPI/managerAPI',['require','APIs/APIConstructor'],function(require){\n\tvar api = require('APIs/APIConstructor');\n\n\treturn api({\n\t\ttype: 'manager',\n\t\tsets: ['tasks']\n\t});\n});\n"]}