define(["require","angular","./piSwapDirective"],function(e){var t=e("angular"),n=t.element;t.module("piSwap",["ngAnimateMock"]).directive("piSwap",e("./piSwapDirective")),describe("piSwap",function(){function o(){e=n("<div pi-swap get-ctrl><div pi-test></div></div>"),s(e)(t),t.$digest()}var e,t,r,i,s;beforeEach(module("piSwap",function(e){i=jasmine.createSpy("testDirective"),e.directive("piTest",function(){return{link:function(){i()}}}),e.directive("getCtrl",function(){return{require:"piSwap",link:function(e,t,n,i){r=i}}})})),beforeEach(inject(function(e){s=e.get("$compile"),t=e.get("$rootScope").$new(),o()})),it("should start out empty",function(){expect(e.children().length).toBe(0)}),it("should start without compiling content",function(){expect(i).not.toHaveBeenCalled()}),describe(": next",function(){it("should compile the transclude",function(){r.next({}),expect(e.children("[pi-test]").length).toBe(1),expect(i).toHaveBeenCalled()}),it("should remove the old content when ended",function(){r.next({}),r.next({}),expect(e.children().length).toBe(1)}),it("should replace existing content (including new scope)",function(){var t,n,i,s;r.next({}),n=e.children(),t=n.scope(),r.next({}),s=e.children(),i=s.scope(),expect(n[0]).not.toBe(s[0]),expect(t).not.toBe(i)}),it("should compile transclude only once",function(){r.next({}),expect(i.calls.length).toBe(1)}),it("should extend newScope with props",function(){r.next({test:123}),expect(e.children().scope().test).toBe(123)}),it("should call pre before compiling",function(){var e=jasmine.createSpy("pre").andCallFake(function(){expect(i).not.toHaveBeenCalled()});r.next({},{pre:e}),expect(e).toHaveBeenCalled()}),it("should call post after compiling",inject(function(e){var t=jasmine.createSpy("post").andCallFake(function(){expect(i).toHaveBeenCalled()});r.next({},{post:t}),e.triggerCallbacks(),expect(t).toHaveBeenCalled()}))}),describe(": empty",function(){it("should leave element empty",function(){r.next({}),r.empty(),expect(e.children().length).toBe(0)}),it("should destroy child scopes",function(){var t=jasmine.createSpy("destroy");r.next({}),e.children().scope().$on("$destroy",t),r.empty(),expect(t).toHaveBeenCalled()})}),describe(": refresh",function(){it("should not destroy the scope",function(){var t=jasmine.createSpy("$destroy");r.next({});var n=e.children().scope();n.$on("$destroy",t),r.refresh(),expect(t).not.toHaveBeenCalled()}),it("should trigger an inner scope refresh",function(){var n=jasmine.createSpy("$watch");r.next({test:123});var i=e.children().scope();i.$watch("test",n),r.refresh({test:456}),t.$digest(),expect(n).toHaveBeenCalled()})})})});