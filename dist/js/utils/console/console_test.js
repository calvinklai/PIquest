define(["underscore","./consoleModule"],function(e){describe("piConsole",function(){var t,n,r,i=["log","info","warn","error","debug"];beforeEach(module("piConsole")),beforeEach(inject(function(e){t=e.get("$log"),n=e.get("piConsole"),r=e.get("piConsoleSettings")})),it("should return an inactive logging object by default",function(){expect(n().active).not.toBeTruthy()}),it("should return an active logging object for settings.tags===true",function(){r.tags=!0,expect(n().active).toBeTruthy()}),it('should return an active logging object for settings.tags==="all"',function(){r.tags="all",expect(n().active).toBeTruthy()}),it("should return an active logging object for settings.tags has localTags",function(){r.tags=["test"],expect(n(["test"]).active).toBeTruthy(),expect(n(["rock"]).active).not.toBeTruthy()}),describe(": logging",function(){it("should not log when not active",function(){var r=n();e.each(i,function(e){r[e]("test")}),t.assertEmpty()}),it("should $log all arguments",function(){r.tags=!0;var s=[1,2,3,4,5,6,7],o=n();e.each(i,function(e){o[e].apply(null,s),expect(t[e].logs[0]).toEqual(s)})})}),describe(": $emitting",function(){it("should no emit when not active",inject(function(t){var r=n(),s=jasmine.createSpy("log");t.$on("console:log",s),e.each(i,function(e){r[e](e),t.$digest()}),expect(s).not.toHaveBeenCalled()})),it('should emit "console:log" with [args] when active',inject(function(t){r.tags=!0;var s=n(),o=jasmine.createSpy("log");t.$on("console:log",o),e.each(i,function(e){s[e](e),t.$digest(),expect(o.mostRecentCall.args[1]).toEqual([e])})})),it('should emit "console:log" with tags when active',inject(function(t){r.tags=!0;var s=n(["test","barn"]),o=jasmine.createSpy("log");t.$on("console:log",o),e.each(i,function(e){s[e](e),t.$digest(),expect(o.mostRecentCall.args[2]).toEqual(["test","barn"])})}))})})});