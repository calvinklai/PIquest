define(["../questDirectivesModule","utils/randomize/randomizeModuleMock"],function(){describe("select",function(){var e=jasmine.createSpy("mixer").andCallFake(function(e){return e});beforeEach(module("questDirectives","randomizeMock",function(e){e.enabled(!1)})),describe("Mixer",function(){var t;beforeEach(module(function(t){t.value("mixerRecursive",e)})),beforeEach(inject(function(n){t=n,e.reset()})),it("should mix the answers",inject(function(e){var n=[1,2,3,4];t(n,{}),expect(e).toHaveBeenCalledWith(n)})),it("should inject default values (default)",function(){var e=t([1,{text:123},{value:"custom"}],{});expect(e[0].value).toBe(1),expect(e[1].value).toBe(123),expect(e[2].value).toBe("custom")}),it("should inject default values (numericValues)",function(){var e=t([0,{text:123},{value:"custom"}],{numericValues:!0});expect(e[0].value).toBe(1),expect(e[1].value).toBe(2),expect(e[2].value).toBe("custom")}),it("should support randomize",function(){var e=t([1,2,3],{randomize:!0});expect(e[0].text).toBe(3),expect(e[1].text).toBe(2),expect(e[2].text).toBe(1)}),it("should support reverse",function(){var e=t([1,2,3],{reverse:!0});expect(e[0].text).toBe(3),expect(e[1].text).toBe(2),expect(e[2].text).toBe(1)}),it("should log the question order",function(){var e=t([1,2,3],{randomize:!0});expect(e[0].order).toBe(0),expect(e[1].order).toBe(1),expect(e[2].order).toBe(2)})}),describe("dropdown",function(){function a(e){r=s('<div quest-dropdown quest-data="data" ng-model="data.model">'),i.data=e,o(r)(i),i=r.isolateScope(),i.$digest(),t=r.data("$questDropdownController").log,n=r.children().first()}function f(e){n.val(e),n.trigger("change"),u(function(){}),u.flush()}var t,n,r,i,s=angular.element,o,u;beforeEach(module(function(t){t.value("mixerRecursive",e)})),beforeEach(inject(function(e,t,n){i=e.$new(),o=t,u=n})),it("should bind to a model",function(){a({answers:[1,2,"a"]}),expect(t.response).not.toBeTruthy(),f(2),expect(t.response).toBe("a")}),it("should mix the answers",function(){a({answers:[1,2,3]}),expect(i.quest.answers).toBeDefined()}),it("should print the correct number of answers",function(){a({answers:[1,2,3]}),expect(n.children().length).toBe(4)}),it("should support grouping",function(){a({answers:[{value:1,group:"a"},{value:2,group:"a"},{value:3,group:"b"},{value:4,group:"b"},{value:5,group:"b"}]}),expect(n.children().length).toBe(3),expect(n.children().children().length).toBe(5)}),it("should support dflt",function(){a({dflt:"default value",answers:[1,2,{value:"default value"}]}),expect(t.response).toBe("default value")}),it("should support autoSubmit",function(){var e;a({answers:[1,2,3]}),e=jasmine.createSpy("quest:submit:now"),i.$on("quest:submit:now",e),f(1),expect(e).not.toHaveBeenCalled(),a({answers:[1,2,3],autoSubmit:!0}),e=jasmine.createSpy("quest:submit:now"),i.$on("quest:submit:now",e),f(1),expect(e).toHaveBeenCalled()}),it("should log before autoSubmit",function(){var e;a({answers:[1,2,3],autoSubmit:!0}),e=jasmine.createSpy("quest:submit:now").andCallFake(function(){expect(t.response).toBe(2)}),i.$on("quest:submit:now",e),f(1),expect(e).toHaveBeenCalled()}),it('should support "correct" validation',function(){a({answers:[1,2,3],correct:!0,correctValue:1,errorMsg:{correct:"correct msg"}});var e=r.find('[pi-quest-validation="model.$error.correct"]');expect(e.text()).toBe("correct msg"),f(0),expect(r).toBeValid(),expect(e).toBeHidden(),f(2),expect(r).toBeInvalid()}),it('should support "required" validation',function(){a({answers:[1,2,3],required:!0,errorMsg:{required:"required msg"}});var e=r.find('[pi-quest-validation="model.$error.required && $parent.$parent.submitAttempt"]');expect(e.text()).toBe("required msg"),expect(r).toBeInvalid(),f(0),expect(r).toBeValid(),expect(e).toBeHidden()})}),describe("SelectOne",function(){var t,n,r,i,s,o=angular.element,u,a=function(s){t=o('<div quest-select-one quest-data="data" ng-model="data.model">'),r.data=s,i(t)(r),r=t.isolateScope(),r.$digest(),u=t.data("$questSelectOneController").log,n=t.children().first()};beforeEach(module("ui.bootstrap.buttons",function(t,n){n.value("mixerRecursive",e)})),beforeEach(inject(function(e){i=e.get("$compile"),r=e.get("$rootScope").$new(),s=function(e){return n.children().eq(e).trigger("click")}})),it("should bind to a model",function(){a({answers:[1,2]}),expect(u.response).not.toBeTruthy(),s(1),expect(u.response).toBe(2)}),it("should mix the answers",function(){a({answers:[1,2,3]}),expect(r.quest.answers).toBeDefined()}),it("should print the correct number of answers",function(){a({answers:[1,2,3]}),expect(n.children().length).toBe(3)}),it("should support dflt",function(){a({dflt:"default value",answers:[1,2,{value:"default value"}]}),expect(r.response).toBe("default value"),expect(u.response).toBe("default value"),expect(n.find(".active").length).toBe(1),expect(n.children().eq(2)).toHaveClass("active")}),it("should support the buttons/likert version",function(){a({answers:[1,2,3]}),expect(n).toHaveClass("list-group"),expect(n.children().eq(2)).toHaveClass("list-group-item"),a({answers:[1,2,3],buttons:!0}),expect(n).toHaveClass("btn-group"),expect(n.children().eq(2)).toHaveClass("btn")}),it("should support autoSubmit",function(){var e;a({answers:[1,2,3]}),e=jasmine.createSpy("quest:submit:now"),r.$on("quest:submit:now",e),s(1),s(1),expect(e).not.toHaveBeenCalled(),a({answers:[1,2,3],autoSubmit:!0}),e=jasmine.createSpy("quest:submit:now"),r.$on("quest:submit:now",e),s(1),expect(e).not.toHaveBeenCalled(),s(1),expect(e).toHaveBeenCalled()}),it('should support "correct" validation',function(){a({answers:[1,2,3],correct:!0,correctValue:1,errorMsg:{correct:"correct msg"}});var e=t.find('[pi-quest-validation="model.$error.correct"]');expect(e.text()).toBe("correct msg"),s(0),expect(t).toBeValid(),expect(e).toBeHidden(),s(2),expect(t).toBeInvalid()}),it('should support "required" validation',function(){a({answers:[1,2,3],required:!0,errorMsg:{required:"required msg"}});var e=t.find('[pi-quest-validation="model.$error.required && $parent.$parent.submitAttempt"]');expect(e.text()).toBe("required msg"),expect(t).toBeInvalid(),s(0),expect(t).toBeValid(),expect(e).toBeHidden()})}),describe("SelectMulti",function(){var t,n,r,i,s,o=angular.element,u,a=function(s){t=o('<div piq-page-inject quest-select-multi quest-data="data" ng-model="data.model">'),r.data=s,i(t)(r),r=t.isolateScope(),r.$digest(),u=t.controller("questSelectMulti").log,n=t.children().first()};beforeEach(module("ui.bootstrap.buttons",function(t,n){n.value("mixerRecursive",e)})),beforeEach(inject(function(e){i=e.get("$compile"),r=e.get("$rootScope").$new(),s=function(e){return n.children().eq(e).trigger("click")}})),it("should bind to a model",function(){a({answers:[0,1,2,3,4]}),expect(u.response).toEqual([]),s(1),expect(u.response).toEqual([1]),s(3),expect(u.response).toEqual([1,3]),s(1),expect(u.response).toEqual([3])}),it("should support multiple answers",function(){a({answers:[1,2,3,4,5]}),expect(u.response.length).toBe(0),s(1),s(2),expect(u.response.length).toBe(2)}),it("should mix the answers",function(){a({answers:[1,2,3]}),expect(r.quest.answers).toBeDefined()}),it("should display the correct number of answers",function(){a({answers:[1,2,3]}),expect(n.children().length).toBe(3)}),it('should support "correct" validation',function(){a({answers:[1,2,3],correct:!0,correctValue:[1,2],errorMsg:{correct:"correct msg"}});var e=t.find('[pi-quest-validation="model.$error.correct"]');expect(e.text()).toBe("correct msg"),s(0),expect(t).toBeInvalid(),s(1),expect(t).toBeValid(),expect(e).toBeHidden()}),it('should support "required" validation',function(){a({answers:[1,2,3],required:!0,errorMsg:{required:"required msg"}});var e=t.find('[pi-quest-validation="model.$error.required && $parent.$parent.submitAttempt"]');expect(e.text()).toBe("required msg"),expect(t).toBeInvalid(),s(0),expect(t).toBeValid(),expect(e).toBeHidden()}),it("should support dflt",function(){a({dflt:[1,2],answers:[0,1,2,3]}),expect(u.response).toEqual([1,2]),expect(n.find(".active").length).toBe(2),expect(n.children().eq(1)).toHaveClass("active"),expect(n.children().eq(2)).toHaveClass("active")})})})});