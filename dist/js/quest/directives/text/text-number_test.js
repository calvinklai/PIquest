define(["../questDirectivesModule"],function(){describe("questTextNumber",function(){var e,t,n,r,i,s,o,u=angular.element,a,f=function(s,o){e=u('<div quest-text-number quest-data="data" ng-model="current.logObj"><div/>'),o&&(n.current.logObj=o),n.data=s,r(e)(n),n.$digest(),t=e.find("input"),a=e.data("$questTextNumberController").log};beforeEach(module("questDirectives")),beforeEach(inject(function(e,u){s=u,r=e.get("$compile"),i=e.get("$document"),n=e.get("$rootScope"),n.current=[],n=n.$new(),o=function(e){t.val(e),t.trigger(s.hasEvent("input")?"input":"change")}})),it("should bind to a model",function(){f({}),expect(a.response).toBe(""),o(234234),expect(a.response).toBe(234234)}),it("should be a number",function(){f({});try{t[0].setAttribute("type","text")}catch(r){}o("words"),expect(e).toBeInvalid(),expect(n.response).toBeUndefined(),o(234234),expect(e).toBeValid()}),it("should support dflt",function(){f({name:1,dflt:123123}),expect(t.val()).toBe("123123")}),it("should support dflt even if the default value is 0",function(){f({name:2,dflt:0}),expect(t.val()).toBe("0")}),describe(": required validation",function(){var t;beforeEach(function(){f({required:!0,errorMsg:{required:"required msg"}}),t=e.find('[pi-quest-validation="form.$error.required && $parent.$parent.submitAttempt"]')}),it("should be valid at the begining",function(){expect(t).not.toBeShown()}),it('should invalidate after "submitAttempt"',function(){n.$parent.submitAttempt=!0,n.$digest(),expect(e).toBeInvalid(),expect(t).toBeShown()}),it("should be valid if there is numeric input",function(){n.$parent.submitAttempt=!0,n.$digest(),o(3456),expect(e).toBeValid(),expect(t).toBeHidden()}),it("should not be valid if there is non numeric input",function(){n.$parent.submitAttempt=!0,n.$digest(),o("abc"),expect(e).toBeInvalid(),expect(t).toBeShown()})}),it("should support max",function(){f({max:5,errorMsg:{max:"max msg"}});var t=e.find('[pi-quest-validation="form.$error.max"]');expect(t.text()).toBe("max msg"),o(3),expect(e).toBeValid(),expect(t).toBeHidden(),o(7),expect(e).toBeInvalid()}),it("should support min",function(){f({min:5,errorMsg:{min:"min msg"}});var t=e.find('[pi-quest-validation="form.$error.min"]');expect(t.text()).toBe("min msg"),o(7),expect(e).toBeValid(),expect(t).toBeHidden(),o(3),expect(e).toBeInvalid()}),it("should support correct validation",function(){f({correct:!0,correctValue:123,errorMsg:{correct:"correct msg"}});var t=e.find('[pi-quest-validation="model.$error.correct"]');expect(t.text()).toBe("correct msg"),o("123"),expect(e).toBeValid(),expect(t).toBeHidden(),o(12),expect(e).toBeInvalid()}),it("should support autoSubmit",function(){var e=u.Event("keypress",{which:13}),r;f({}),r=jasmine.createSpy("quest:submit:now"),n.$on("quest:submit:now",r),t.trigger(e),expect(r).not.toHaveBeenCalled(),f({autoSubmit:!0}),r=jasmine.createSpy("quest:submit:now"),n.$on("quest:submit:now",r),t.trigger(e),expect(r).toHaveBeenCalled()})})});