define(["require","underscore"],function(e){function n(e,t,n,r){function i(i){function a(n){e.script=n,e.settings=n&&n.settings||{},s.manager=new t(e,n),e.$emit("manager:next")}function f(e){r("manager").error(e)}var s=this,o;try{o=e.$eval(i)}catch(u){}finally{o||(o=i)}n(o).then(a,f)}this.init=i}function r(e,r,i,s){return{priority:1e3,replace:!0,template:'<div pi-swap><div pi-task="task" ng-class="{\'pi-spinner\':loading}"></div></div>',controller:n,require:["piManager","piSwap"],link:function(e,n,o,u){function h(){e.loading=!1,c=l,l=f.manager.current(),s("manager").debug("Manager:currentTask",l),l?p():d()}function p(){var n={prevTask:c,currentTask:l};m([e.settings.onPreTask,c&&c.post,l.pre,t.bind(a.next,a,{task:l})],n)}function d(){var n={prevTask:c,currentTask:l};m([c&&c.post,t.bind(a.empty,a),e.settings.onEnd,function(){e.$emit("manager:done")}],n)}function v(t){t.stopPropagation(),e.loading=!0,e.$emit("manager:next")}function m(e,n){var s=r.when();t(e).map(function(e){return function(){var s=t.isFunction(e)?i.invoke(e,null,n||{}):e;return r.when(s)}}).reduce(function(e,t){return e["finally"](t)},s)}var a=u[1],f=u[0],l,c;f.init(o.piManager),e.$on("manager:loaded",h),e.$on("task:done",v),e.loading=!0}}}var t=e("underscore");return n.$inject=["$scope","managerService","managerLoad","piConsole"],r.$inject=["managerService","$q","$injector","piConsole"],r});