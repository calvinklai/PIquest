define("app/API",["require","underscore"],function(t){function e(t){this.script={global:{},current:{},trialSets:{},stimulusSets:{},mediaSets:{},sequence:[]},this.script.name=t||"anonymous PIP",this.settings=this.script.settings={canvas:{maxWidth:800,proportions:.8},hooks:{}}}function r(t){function e(e,r){var n,s=this.script[t+"Sets"]||(this.script[t+"Sets"]={});if(i.isPlainObject(e))i.merge(s,e);else for(i.isArray(r)||(r=[r]),s[e]||(s[e]=[]),n=0;n<r.length;n++)s[e].push(r[n])}return e}var i=t("underscore");return i.extend(e.prototype,{addTrialSets:r("trial"),addStimulusSets:r("stimulus"),addMediaSets:r("media"),addSettings:function(t,e){var r;return i.isPlainObject(e)?(r=this.settings[t]=this.settings[t]||{},i.extend(r,e)):this.settings[t]=e,this},addSequence:function(t){var e=this.script;return i.isArray(t)||(t=[t]),e.sequence=e.sequence.concat(t),this},addGlobal:function(t){if(!i.isPlainObject(t))throw new Error("global must be an object");i.merge(this.global(),t)},getGlobal:function(){return window.piGlobal},addCurrent:function(t){if(!i.isPlainObject(t))throw new Error("current must be an object");i.merge(this.script.current,t)},getCurrent:function(){return this.script.current},addScript:function(t){i.merge(this.script,t)},getScript:function(){return this.script},getLogs:function(){return this.script.current.logs},play:function(){throw new Error("you should return API.script instead of calling API.play()!!")}}),e});
//# sourceMappingURL=API.js.map