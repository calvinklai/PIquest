{"version":3,"file":"PIcomponent.js","sources":["data/properties.js","trial/input_decorator.js","trial/feedback_decorator.js","trial/default.js","stimuli/separator.js","stimuli/category.js","trial/layout.js","trial/simple_layout.js","trial/IATlayout.js","trial/instructions.js","trial/trials.js","stimuli/stimuli.js","data/sequence.js","component.js","data/iatScorer.js","PIcomponent.js","../../../../bower_components/requirejs-text/text.js","jst/layout.jst!text"],"names":[],"mappings":"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","sourcesContent":["// The default properties for the IAT component\r\n// These are changed by any user defined properties!\r\ndefine('extensions/iat/data/properties',[],function(){\r\n\treturn {\r\n\t\t// activate skip block\r\n\t\tDEBUG: true,\r\n\r\n\t\t// Default stimulus properties\r\n\t\t// All optional\r\n\t\tfont: 'Arial',\r\n\t\tfontSize: '2em',\r\n\t\tfontColor: '#31b404',\r\n\t\tdefaultStimulus: {},\r\n\t\tinstructionsStimulus: {css:{'font-size':'1.3em',color:'black', lineHeight:1.2,'text-align':'left',margin:'25px'}},\r\n\r\n\t\t// optional of course, the same settings as the main API\r\n\t\tbackground : '#EEEEEE', // the default background (for both canvas background and the generic background)\r\n\t\tcanvas: {\r\n\t\t\tmaxWidth: 800,\r\n\t\t\tproportions : 0.8\r\n\t\t},\r\n\r\n\t\t// Interface.\r\n\t\tleft: 'e', // default: e\r\n\t\tright: 'i', // default: i\r\n\t\tleftTouch: undefined, // default: system\r\n\t\trightTouch: undefined, // default: system\r\n\t\tnotouch: true, // default: true\r\n\r\n\t\ttimeout: 0, // default: 0 - no timeout\r\n\r\n\t\t// behaviour\r\n\t\t// The duration after you removed the target stimulus but you still wait before moving to the next trial.\r\n\t\trandomize_order: true, // switch blocks 1/5 and 34/67\r\n\t\tIATversion: 'long', // Takes 'long'\\'short'. default: 'long'\r\n\r\n\t\tinter_trial_interval: 250,\r\n\t\tpost_instructions_interval: 500,\r\n\r\n\t\t// do we make the user correct errors? default: true\r\n\t\tcorrect_errors: true,\r\n\r\n\t\terror_feedback : {\r\n\t\t\tactive: true, // default: true\r\n\t\t\tmedia: 'X', // default: 'X'\r\n\t\t\tduration: 'static' // default 'static'\r\n\t\t},\r\n\r\n\t\tcorrect_feedback : {\r\n\t\t\tactive: false, // default: false\r\n\t\t\tmedia: 'OK', // default: 'OK'\r\n\t\t\tduration: 300 // default?\r\n\t\t},\r\n\r\n\t\ttimeout_feedback : {\r\n\t\t\tactive: true, // default: false\r\n\t\t\tmedia: 'X', // default: 'X'\r\n\t\t\tduration: 500 // default: 500\r\n\t\t},\r\n\r\n\t\t// pick the appropriate layout interface\r\n\t\tsimpleLayout: true,\r\n\r\n\t\tseparatorColor: 'black', // the separator color (for simple_layout)\r\n\t\tseparatorSize: '1em', // the separator size (for simple_layout)\r\n\r\n\t\t// category seperator (for the advanced layout)\r\n\t\tseparator: {\r\n\t\t\tmedia: 'or', // default: 'or'\r\n\t\t\theight: 5,\r\n\t\t\tcss : {fontSize:'1.2em'} // optional\r\n\t\t},\r\n\r\n\t\tendMedia: undefined, // if you want to replace the message at the end of the task, you can use this property... just set any media you like.\r\n\r\n\t\tpulse: 20,\r\n\r\n\t\timages_base_url: \"\",\r\n\t\ttemplates_base_url: \"extensions/iat/jst\"\r\n\r\n\t};\r\n});\n","define('extensions/iat/trial/input_decorator',['../data/properties'],function(properties){\r\n\r\n\tvar input_decorator = function input_decorator(trial){\r\n\t\tvar input = trial.input;\r\n\t\tvar interactions = trial.interactions;\r\n\r\n\t\t// skip trial input\r\n\t\t// ***********************************************************************************\r\n\t\tif (properties.DEBUG){\r\n\t\t\tinput.push({handle:'skip1',on:'keypressed', key:27});\r\n\t\t}\r\n\r\n\t\t// left input\r\n\t\t// ***********************************************************************************\r\n\t\tswitch (typeof properties.left) {\r\n\t\t\tcase 'undefined' :\r\n\t\t\t\tinput.push({handle:'left',on:'keypressed',key:'e'});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'string':\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'number':\r\n\t\t\t\tinput.push({handle:'left',on:'keypressed',key:properties.left});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tproperties.left.handle = 'left'; // make sure handle for object is correct\r\n\t\t\t\tinput.push(properties.left);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// right input\r\n\t\t// ***********************************************************************************\r\n\t\tswitch (typeof properties.right) {\r\n\t\t\tcase 'undefined' :\r\n\t\t\t\tinput.push({handle:'right',on:'keypressed',key:'i'});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'string':\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'number':\r\n\t\t\t\tinput.push({handle:'right',on:'keypressed',key:properties.right});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tproperties.right.handle = 'right'; // make sure handle for object is correct\r\n\t\t\t\tinput.push(properties.right);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// if touch is active\r\n\t\t// ***********************************************************************************\r\n\t\tif (!properties.notouch){\r\n\t\t\t// leftTouch\r\n\t\t\tswitch (typeof properties.leftTouch) {\r\n\t\t\t\tcase 'undefined' :\r\n\t\t\t\t\tinput.push({handle:'left',on:'leftTouch',touch:true});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tinput.push({\r\n\t\t\t\t\t\thandle:'left',\r\n\t\t\t\t\t\ton:'click',\r\n\t\t\t\t\t\telement:properties.leftTouch,\r\n\t\t\t\t\t\ttouch:true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// rightTouch\r\n\t\t\tswitch (typeof properties.rightTouch) {\r\n\t\t\t\tcase 'undefined' :\r\n\t\t\t\t\tinput.push({handle:'right',on:'rightTouch',touch:true});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tinput.push({\r\n\t\t\t\t\t\thandle:'right',\r\n\t\t\t\t\t\ton:'click',\r\n\t\t\t\t\t\telement:properties.rightTouch,\r\n\t\t\t\t\t\ttouch:true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Timout\r\n\t\t// ***********************************************************************************\r\n\t\tif (properties.timeout){\r\n\r\n\t\t\tinput.push({\r\n\t\t\t\thandle:'timeout',\r\n\t\t\t\ton:'timeout',\r\n\t\t\t\tduration:properties.timeout\r\n\t\t\t});\r\n\r\n\t\t\tinteractions.push({\r\n\t\t\t\tconditions: [\r\n\t\t\t\t\t{type:'inputEquals',value:'timeout'}\r\n\t\t\t\t],\r\n\t\t\t\tactions:[\r\n\t\t\t\t\t{type:'removeInput',handle:['left','right']},\r\n\t\t\t\t\t{type:'setTrialAttr', setter:{score:9}},\r\n\t\t\t\t\t{type:'log'},\r\n\t\t\t\t\t{type:'trigger',handle:'timeout_feedback'}\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn trial;\r\n\t};\r\n\r\n\treturn input_decorator;\r\n});\n","/*\r\n * Returns a decorator for trial objects that adds feedback interactions and stimuli\r\n */\r\ndefine('extensions/iat/trial/feedback_decorator',['../data/properties'],function(properties){\r\n\tvar decorator = function(trial){\r\n\t\tvar feedback_types = ['correct', 'error', 'timeout'];\r\n\t\tvar interactions = trial.interactions;\r\n\r\n\t\tfor (var i=0; i < feedback_types.length; i++){\r\n\t\t\tvar FBtype = feedback_types[i] + '_feedback';\r\n\t\t\tvar propertiesObj = properties[FBtype] || {};\r\n\r\n\t\t\t// if we're not going to display any feedback, trigger the end action imidiately\r\n\t\t\tif (!propertiesObj.active) {\r\n\t\t\t\tinteractions.push({\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value: FBtype}],\r\n\t\t\t\t\tactions: [{type:'trigger',handle : 'remove_' + FBtype}]\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// show feedback\r\n\t\t\t\tinteractions.push({\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value: FBtype}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'showStim',handle : FBtype},\r\n\t\t\t\t\t\t{type:'setInput',input:{handle:'remove_' + FBtype, on:'timeout', duration:propertiesObj.duration >= 0 ? propertiesObj.duration : 300}}\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\t\t\t} // end if FB is active\r\n\r\n\t\t\t// end trial if this isn't an error or if we don't need to correct errors\r\n\t\t\tif (FBtype !== 'error_feedback' || !properties.correct_errors) {\r\n\t\t\t\tinteractions.push({\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value: 'remove_' + FBtype}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'trigger',handle: 'end'}\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// if we need to correct errors\r\n\t\t\t\t// and the error feedback is temporary\r\n\t\t\t\tif (propertiesObj.duration !== 'static') {\r\n\t\t\t\t\tinteractions.push({\r\n\t\t\t\t\t\tconditions: [{type:'inputEquals',value: 'remove_' + FBtype}],\r\n\t\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t\t{type:'hideStim',handle : FBtype}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} // end FBtype loop\r\n\r\n\t\treturn trial;\r\n\t};\r\n\r\n\treturn decorator;\r\n\r\n});\n","define('extensions/iat/trial/default',['../data/properties','./input_decorator','./feedback_decorator'],function(properties,input_decorator,feedback_decorator){\r\n\r\n\tfunction defaultTrial(){\r\n\t\tvar trial = {\r\n\t\t\t// by default each trial is correct, this is modified in case of an error\r\n\t\t\tdata: {score:0},\r\n\t\t\tinput: [],\r\n\t\t\tlayout: [\r\n\t\t\t\t{inherit:{type:'byData',set:'layout',data:'left'}},\r\n\t\t\t\t{inherit:{type:'byData',set:'layout',data:'right'}}\r\n\t\t\t],\r\n\t\t\tinteractions: [\r\n\t\t\t\t// begin trial : display stimulus imidiately\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'begin'}],\r\n\t\t\t\t\tactions: [{type:'showStim',handle:'target'}]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// correct\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEqualsStim',property:'side',handle:'target'}],\t\t\t\t// check if the input handle is equal to the \"side\" attribute of stimulus.data\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'removeInput',handle:['left','right','timeout']},\r\n\t\t\t\t\t\t{type:'hideStim',handle:'error_feedback'},\r\n\t\t\t\t\t\t{type:'log'},\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// log this trial\r\n\t\t\t\t\t\t{type:'trigger',handle:'correct_feedback'}\t\t\t\t\t\t\t\t\t// trigger the correct feedback (and maybe endtrial)\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// end after ITI\r\n\t\t\t\t// the end action is called by actions added within the feedback module (even if feedback is not activated)\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'end'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'hideStim',handle:'All'},\r\n\t\t\t\t\t\t{type:'setInput',input:{handle:'endTrial', on:'timeout', duration:properties.inter_trial_interval || 0}}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'endTrial'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'endTrial'}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// skip block\r\n\t\t\t\t// activate skipping:\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip1'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'setInput',input:{handle:'skip2',on:'enter'}}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t// skip:\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip2'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'goto', destination: 'nextWhere', properties: {blockStart:true}},\r\n\t\t\t\t\t\t{type:'endTrial'}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tstimuli: []\r\n\t\t};\r\n\r\n\t\t// error interaction\r\n\t\tvar error = {\r\n\t\t\tconditions: [\r\n\t\t\t\t{type:'inputEqualsStim',property:'side',handle:'target',negate:true},\t\t\t\t// check if the input handle is unequal to the \"side\" attribute of stimulus.data\r\n\t\t\t\t{type:'inputEquals',value:['right','left']}\t\t\t\t\t\t\t\t\t// make sure this is a click interaction\r\n\t\t\t],\r\n\t\t\tactions: [\r\n\t\t\t\t{type:'trigger',handle:'error_feedback'},\t\t\t\t\t\t\t\t\t// trigger the error feedback (and maybe endtrial)\r\n\t\t\t\t{type:'setTrialAttr', setter:{score:1}}\t\t\t\t\t\t\t\t\t\t// set the score to 1\r\n\t\t\t]\r\n\t\t};\r\n\t\t// if we aren't correcting errors, lets remove all the interactions\r\n\t\tif (!properties.correct_errors){\r\n\t\t\terror.actions.unshift({type:'removeInput',handle:['left','right','timeout']});\r\n\t\t}\r\n\r\n\t\ttrial.interactions.push(error);\r\n\r\n\t\t// adds feedback specific interactions\r\n\t\tfeedback_decorator(trial);\r\n\r\n\t\t// adds input\r\n\t\tinput_decorator(trial);\r\n\r\n\t\treturn trial;\r\n\t}\r\n\r\n\treturn defaultTrial;\r\n});\n","define('extensions/iat/stimuli/separator',['../data/properties'], function(properties){\r\n\t// return new separator stimulus\r\n\treturn function Separator(side, marginTop){\r\n\t\tvar data = properties.separator\r\n\t\t\t, stimulus = {media : data.media, css: data.css || {color:'black'}}\r\n\t\t\t, margin = data.margin || 0;\r\n\r\n\t\tswitch (side) {\r\n\t\t\tcase 'left' :\r\n\t\t\t\tstimulus.location = {left: 2 + margin, top: marginTop};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right' :\r\n\t\t\t\tstimulus.location = {right: 2 + margin, top: marginTop};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'center' :\r\n\t\t\t\tstimulus.location = {top: marginTop};\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn stimulus;\r\n\t};\r\n\r\n});\n","define('extensions/iat/stimuli/category',['../data/categories'], function(categories){\r\n\r\n\treturn function Category(categoryName, side, marginTop){\r\n\t\tvar category = categories[categoryName]\r\n\t\t\t, margin = category.margin || 0;\r\n\t\tif (!category){\r\n\t\t\tthrow new Error(categoryName + ' is not a category name (or has not been loaded yet)');\r\n\t\t}\r\n\r\n\t\tvar media = category.title || category.name // the category media is preferably the title else the name.\r\n\t\t\t, stimulus = {media : media, css: category.titleCss || {fontSize:'1.3em', color:'black'}, height: category.height || 5};\r\n\r\n\t\tswitch (side) {\r\n\t\t\tcase 'left' :\r\n\t\t\t\tstimulus.location = {left: 2 + margin, top: marginTop};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right' :\r\n\t\t\t\tstimulus.location = {right: 2 + margin, top: marginTop};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'center' :\r\n\t\t\t\tstimulus.location = {top: marginTop};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('Unknow side in category');\r\n\t\t}\r\n\r\n\t\treturn stimulus;\r\n\t};\r\n\r\n});\n","define('extensions/iat/trial/layout',['underscore', '../data/properties','../stimuli/separator','../stimuli/category'],function(_, properties, Separator, Category){\r\n\r\n\t/*\r\n\t * Takes a map of the form {left: ['concept1'], right: ['concept2']}\r\n\t * Returns a layout array for a trial (with real stimuli, not inheritance)\r\n\t */\r\n\tvar layout = function layout(map){\r\n\t\tvar layoutArr = [];\r\n\r\n\t\t// for each side\r\n\t\t_.each(map, function(type,side){\r\n\t\t\tvar marginTop = 2; // this is the margin from the top\r\n\r\n\t\t\t_.each(type, function(category, index){\r\n\t\t\t\tvar separator, categoryStim;\r\n\r\n\t\t\t\t// if we need a separator push separator\r\n\t\t\t\tif (index > 0 && _.isObject(properties.separator)){\r\n\t\t\t\t\tseparator = new Separator(side,marginTop);\r\n\t\t\t\t\tlayoutArr.push(separator);\r\n\t\t\t\t\tmarginTop += properties.separator.height || 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// push category\r\n\t\t\t\tcategoryStim = new Category(category, side, marginTop);\r\n\t\t\t\tlayoutArr.push(categoryStim);\r\n\t\t\t\tmarginTop += categoryStim.height;\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t\treturn layoutArr;\r\n\t};\r\n\r\n\treturn layout;\r\n\r\n});\n","define('extensions/iat/trial/simple_layout',['underscore', '../data/properties','../data/categories'],function(_, properties, categories){\r\n\r\n\t/*\r\n\t * Takes a map of the form {left: ['concept1'], right: ['concept2']}\r\n\t * Returns a layout array for a trial (with real stimuli, not inheritance)\r\n\t * This function realises the simpleLayout layout which essentialy uses a\r\n\t */\r\n\tvar simpleLayout = function layout(map){\r\n\t\tvar layoutArr = [];\r\n\r\n\t\t// for each side\r\n\t\t_.each(map, function(type,side){\r\n\t\t\tvar categoryStim = {media:{template:'layout.jst'}, data:{separatorColor:properties.separatorColor, separatorSize: properties.separatorSize}}\r\n\t\t\t\t, data = categoryStim.data;\r\n\r\n\t\t\tswitch (side){\r\n\t\t\t\tcase 'left' : categoryStim.location = {left: 2, top:2}; break;\r\n\t\t\t\tcase 'right' : categoryStim.location = {right: 2, top:2}; break;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('Unknow side');\r\n\t\t\t}\r\n\r\n\t\t\t// for each category\r\n\t\t\t_.each(type, function(category){\r\n\t\t\t\t// there can be only one attribute/concept in each side, so we can drop the numbers...\r\n\t\t\t\tvar prefix = category.replace(/[0-9]/g, '');\r\n\t\t\t\tvar categoryObj = categories[category];\r\n\t\t\t\tvar name = _.isObject(categoryObj.title) ? categoryObj.title.word : categoryObj.title;\r\n\t\t\t\tif (!name){\r\n\t\t\t\t\tthrow new Error ('We are missing a title for ' + type + '. are you using an advanced media type by any chance?');\r\n\t\t\t\t}\r\n\t\t\t\tdata[prefix] = name;\r\n\t\t\t\tcategoryObj.titleColor && (data[prefix + 'Color'] = categoryObj.titleColor);\r\n\t\t\t\tcategoryObj.titleSize && (data[prefix + 'Size'] = categoryObj.titleSize);\r\n\t\t\t});\r\n\r\n\t\t\t// push category\r\n\t\t\tlayoutArr.push(categoryStim);\r\n\t\t});\r\n\r\n\t\treturn layoutArr;\r\n\t};\r\n\r\n\treturn simpleLayout;\r\n});\n","/*\r\n *\tReturns the layout array for the fitting block of the IAT\r\n *\tThis is the layout array that is used within the trials (with real stimuli, not inheritance)\r\n *\tThis function can return either the clasical layout theme or the the simpleLayout.\r\n */\r\ndefine('extensions/iat/trial/IATlayout',['../data/properties','./layout', './simple_layout'],function(properties, layout, simpleLayout){\r\n\r\n\tvar layoutArr = {\r\n\t\t1: {left:['concept1'],right:['concept2']},\r\n\t\t2: {left:['attribute1'],right:['attribute2']},\r\n\t\t3: {left:['attribute1','concept1'],right:['attribute2','concept2']},\r\n\t\t4: {left:['attribute1','concept1'],right:['attribute2','concept2']},\r\n\t\t5: {left:['concept2'],right:['concept1']},\r\n\t\t6: {left:['attribute1','concept2'],right:['attribute2','concept1']},\r\n\t\t7: {left:['attribute1','concept2'],right:['attribute2','concept1']}\r\n\t};\r\n\r\n\treturn function(block){\r\n\t\treturn properties.simpleLayout ? simpleLayout(layoutArr[block]) : layout(layoutArr[block]);\r\n\t};\r\n});\n","define('extensions/iat/trial/instructions',['underscore','../data/properties','../data/categories','./IATlayout'],function(_,properties,categories,layout){\r\n\t// the generic instruction trial\r\n\tfunction genericConstructor(){\r\n\t\tvar generic = {\r\n\t\t\tdata: {block:'generic'},\r\n\t\t\t// create user interface (just click to move on...)\r\n\t\t\tinput: [\r\n\t\t\t\t{handle:'space',on:'space'}\r\n\t\t\t],\r\n\r\n\t\t\tinteractions: [\r\n\t\t\t\t// display instructions\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'begin'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'showStim',handle:'All'}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// end after ITI\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'space'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'hideStim',handle:'All'},\r\n\t\t\t\t\t\t{type:'setInput',input:{handle:'endTrial', on:'timeout', duration: properties.post_instructions_interval || 0}}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'endTrial'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'endTrial'}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// skip block\r\n\t\t\t\t// activate skipping:\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip1'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'setInput',input:{handle:'skip2',on:'enter'}}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t// skip:\r\n\t\t\t\t{\r\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip2'}],\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{type:'goto', destination: 'nextWhere', properties: {blockStart:true}},\r\n\t\t\t\t\t\t{type:'endTrial'}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tif (properties.DEBUG){\r\n\t\t\tgeneric.input.push({handle:'skip1',on:'keypressed', key: 27});\r\n\t\t}\r\n\r\n\t\t// if touch is active add the touch input\r\n\t\tif (!properties.notouch){\r\n\t\t\tgeneric.input.push({handle:'space',on:'bottomTouch',touch:true});\r\n\t\t}\r\n\r\n\t\treturn generic;\r\n\t}\r\n\r\n\r\n\r\n\tvar last =  {\r\n\t\tdata: {block:'last'},\r\n\t\t// create user interface (just click to move on...)\r\n\t\tinput: [\r\n\t\t\t{handle:'space',on:'space'}\r\n\t\t],\r\n\r\n\t\tinteractions: [\r\n\t\t\t// display instructions\r\n\t\t\t{\r\n\t\t\t\tconditions: [{type:'begin'}],\r\n\t\t\t\tactions: [\r\n\t\t\t\t\t{type:'showStim',handle:'All'}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t// end\r\n\t\t\t{\r\n\t\t\t\tconditions: [{type:'inputEquals',value:'space'}],\r\n\t\t\t\tactions: [{type:'endTrial'}]\r\n\t\t\t}\r\n\t\t],\r\n\t\tstimuli: []\r\n\t};\r\n\r\n\t// this array will hold any user defined settings\r\n\tvar settingsArr = [];\r\n\r\n\t// build insructions array\r\n\tfunction buildInstructions(){\r\n\r\n\t\tvar generic = genericConstructor()\r\n\t\t\t, instructionsArr = [generic]\r\n\t\t\t, trial\r\n\t\t\t, stimulus\r\n\t\t\t, settings\r\n\t\t\t// The layout should depend on part and not on block.\r\n\t\t\t, customize = function(){\r\n\t\t\t\tthis.layout = layout(this.data.part);\r\n\t\t\t};\r\n\r\n\r\n\t\tfor (var i = 1; i <= 7; i++){\r\n\t\t\tsettings = settingsArr[i] || {};\r\n\t\t\t// default trial\r\n\t\t\ttrial = {\r\n\t\t\t\tdata: {block:i},\r\n\t\t\t\t//layout: layout(i),\r\n\t\t\t\tinherit: {set:'instructions', type:'byData', data: {block:'generic'}},\r\n\t\t\t\tcustomize: customize\r\n\t\t\t};\r\n\r\n\t\t\t// default stimulus\r\n\t\t\tstimulus = {\r\n\t\t\t\tinherit:'instructions',\r\n\t\t\t\tmedia: {template:'inst' + i + '.jst'}\r\n\t\t\t};\r\n\r\n\t\t\t// update trial/stimulus with user settings\r\n\t\t\tsettings.media && (stimulus.media = settings.media);\r\n\t\t\tsettings.template && (stimulus.media = {inlineTemplate: settings.template});\r\n\t\t\tsettings.css && (stimulus.css = settings.css);\r\n\t\t\tsettings.extend && (_.extend(trial,settings.extend));\r\n\r\n\t\t\ttrial.stimuli = [stimulus];\r\n\r\n\t\t\t// push trial into the instructions array\r\n\t\t\tinstructionsArr.push(trial);\r\n\t\t}\r\n\r\n\t\t// add the category types into the generic instructions data\r\n\t\t_.each(categories,function(category, categoryType){\r\n\t\t\t// set category names\r\n\t\t\tgeneric.data[categoryType] = category.name;\r\n\t\t\t// set category colors (mainly for the simple_layout)\r\n\t\t\tgeneric.data[categoryType + 'Color'] = category.titleColor;\r\n\t\t});\r\n\r\n\t\tlast.stimuli.push({\r\n\t\t\tinherit:'instructions',\r\n\t\t\tmedia: properties.endMedia || {html:'<div><p style=\"font-size:1.4em\"><color=\"#FFFAFA\">You have completed this task<br/><br/>Thank you very much for your participation.<br/><br/> Press \"space\" in order to continue.</p></div>'}\r\n\t\t});\r\n\r\n\t\tinstructionsArr.push(last);\r\n\r\n\r\n\t\treturn instructionsArr;\r\n\t} // end build instructions\r\n\r\n\t// this function returns the instructions array if it has no arguments\r\n\t// if it has arguments, it updates the instructions array\r\n\treturn function instructions(block,settings){\r\n\t\t// if there are no arguments return the instructions array\r\n\t\tif (!arguments.length) {\r\n\t\t\treturn buildInstructions();\r\n\t\t} else { // if there are arguments we need to save the settings\r\n\t\t\tsettingsArr[block] = settings;\r\n\t\t}\r\n\t};\r\n\r\n});\n","/*\r\n * Returns a trial sets object\r\n */\r\ndefine('extensions/iat/trial/trials',['../data/categories','./default', './instructions','./IATlayout'],function(categories,defaultTrial,instructions,layout){\r\n\treturn function trials(){\r\n\r\n\t\tvar trialSets = {}\r\n\t\t\t, attribute1 = categories.attribute1.name\r\n\t\t\t, attribute2 = categories.attribute2.name\r\n\t\t\t, concept1 = categories.concept1.name\r\n\t\t\t, concept2 = categories.concept2.name;\r\n\r\n\t\ttrialSets.Default = [defaultTrial()];\r\n\t\ttrialSets.instructions = instructions();\r\n\r\n\t\ttrialSets.IAT = [\r\n\t\t\t// block1\r\n\t\t\t{\r\n\t\t\t\tdata: {part:1, condition: concept1 + ',' + concept2},\r\n\t\t\t\tlayout: layout(1),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t// block2\r\n\t\t\t{\r\n\t\t\t\tdata: {part:2, condition: attribute1 + ',' + attribute2},\r\n\t\t\t\tlayout: layout(2),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t// block3\r\n\t\t\t{\r\n\t\t\t\tdata: {part:3, row:1, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'first'},\r\n\t\t\t\tlayout: layout(3),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tdata: {part:3, row:2, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'first'},\r\n\t\t\t\tlayout: layout(3),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t// block4 (same as 3)\r\n\t\t\t{\r\n\t\t\t\tdata: {part:4, row:1, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'second'},\r\n\t\t\t\tlayout: layout(4),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tdata: {part:4, row:2, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'second'},\r\n\t\t\t\tlayout: layout(4),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t// block5\r\n\t\t\t{\r\n\t\t\t\tdata: {part:5, condition: concept2 + ',' + concept1},\r\n\t\t\t\tlayout: layout(5),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_right'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t// block6\r\n\t\t\t{\r\n\t\t\t\tdata: {part:6, row:1, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1, parcel:'first'},\r\n\t\t\t\tlayout: layout(6),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_right'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tdata: {part:6, row:2, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1,parcel:'first'},\r\n\t\t\t\tlayout: layout(6),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t// block7  (same as 6)\r\n\t\t\t{\r\n\t\t\t\tdata: {part:7, row:1, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1, parcel:'second'},\r\n\t\t\t\tlayout: layout(7),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_right'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\tdata: {part:7, row:2, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1,parcel:'second'},\r\n\t\t\t\tlayout: layout(7),\r\n\t\t\t\tinherit: 'Default',\r\n\t\t\t\tstimuli: [\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\r\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\r\n\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\treturn trialSets;\r\n\t};\r\n\r\n});\n","define('extensions/iat/stimuli/stimuli',['underscore','../data/properties','../data/categories'],function(_,properties,categories){\r\n\r\n\treturn function stimuli(){\r\n\t\tvar stimSets = {}\r\n\t\t\t, defaultStim\r\n\t\t\t, defaultFBstim;\r\n\r\n\t\t// Build default stimulus\r\n\t\t// ***************************************************************\r\n\t\tdefaultStim = properties.defaultStimulus;\r\n\t\tdefaultStim.css = _.defaults(defaultStim.css || {}, {\r\n\t\t\tfont: properties.font,\r\n\t\t\tfontSize: properties.fontSize,\r\n\t\t\tcolor: properties.fontColor\r\n\t\t});\r\n\r\n\t\tstimSets.Default = [defaultStim];\r\n\t\tstimSets.instructions = [properties.instructionsStimulus];\r\n\r\n\t\t// Trial stimuli\r\n\t\t// ***************************************************************\r\n\r\n\t\t// create stimuli for each of the categories\r\n\t\tstimSets['attribute1'] = [_.extend(categories.attribute1.stimulus || {}, {inherit:'Default', css:categories.attribute1.css || defaultStim.css})];\r\n\t\tstimSets['attribute2'] = [_.extend(categories.attribute2.stimulus || {}, {inherit:'Default', css:categories.attribute2.css || defaultStim.css})];\r\n\t\tstimSets['concept1'] = [_.extend(categories.concept1.stimulus || {}, {inherit:'Default', css:categories.concept1.css || defaultStim.css})];\r\n\t\tstimSets['concept2'] = [_.extend(categories.concept2.stimulus || {}, {inherit:'Default', css:categories.concept2.css || defaultStim.css})];\r\n\r\n\t\t// add the trial stimuli 5 time so that the randomization has meaning\r\n\t\t// iterations are supposed to expand the current set\r\n\t\t_.extend(stimSets, {attribute1_left:[], attribute1_right:[], concept1_left:[], concept1_right:[]});\r\n\t\tfor (var i = 0; i <5; i++) {\r\n\t\t\tstimSets['attribute1_left'] = stimSets['attribute1_left'].concat([\r\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.attribute1.name}, inherit:'attribute1', media: {inherit:{type:'exRandom',set:'attribute1'}}},\r\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.attribute2.name}, inherit:'attribute2', media: {inherit:{type:'exRandom',set:'attribute2'}}}\r\n\t\t\t]);\r\n\t\t\tstimSets['attribute1_right'] = stimSets['attribute1_right'].concat([\r\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.attribute2.name}, inherit:'attribute2', media: {inherit:{type:'exRandom',set:'attribute2'}}},\r\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.attribute1.name}, inherit:'attribute1', media: {inherit:{type:'exRandom',set:'attribute1'}}}\r\n\t\t\t]);\r\n\t\t\tstimSets['concept1_left'] = stimSets['concept1_left'].concat([\r\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.concept1.name}, inherit:'concept1', media: {inherit:{type:'exRandom',set:'concept1'}}},\r\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.concept2.name}, inherit:'concept2', media: {inherit:{type:'exRandom',set:'concept2'}}}\r\n\t\t\t]);\r\n\t\t\tstimSets['concept1_right'] = stimSets['concept1_right'].concat([\r\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.concept2.name}, inherit:'concept2', media: {inherit:{type:'exRandom',set:'concept2'}}},\r\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.concept1.name}, inherit:'concept1', media: {inherit:{type:'exRandom',set:'concept1'}}}\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\t// Build feedback stimuli\r\n\t\t// ***************************************************************\r\n\t\t// default feedback stimuli\r\n\t\tdefaultFBstim = {\r\n\t\t\tcorrect: {handle:'correct_feedback', location: {top: 80}, css:{color:'green','font-size':'4em'}, media: {word:'OK'}, nolog:true},\r\n\t\t\terror: {handle:'error_feedback', location: {top: 80}, css:{color:'red','font-size':'4em'}, media: {word:'X'}, nolog:true},\r\n\t\t\ttimeout: {handle:'timeout_feedback', location: {top: 80}, css:{color:'red','font-size':'4em'}, media: {word:'X'}, nolog:true}\r\n\t\t};\r\n\r\n\t\t// get data from properties and create relevant stimuli\r\n\t\tstimSets['feedback'] = [];\r\n\t\t_.each(['correct','error','timeout'],function(type){\r\n\t\t\tvar stimulus =  defaultFBstim[type];\r\n\r\n\t\t\t// extend the default stimulus with any stimulus data from the properties object\r\n\t\t\tif (properties[type + '_feedback'].css){\r\n\t\t\t\tstimulus.css = properties[type + '_feedback'].css;\r\n\t\t\t}\r\n\r\n\t\t\t// if we have media object, use it instead of the default\r\n\t\t\tif (properties[type + '_feedback'].media){\r\n\t\t\t\tstimulus.media = properties[type + '_feedback'].media;\r\n\t\t\t}\r\n\r\n\t\t\tstimSets['feedback'].push(stimulus);\r\n\t\t});\r\n\r\n\t\treturn stimSets;\r\n\t};\r\n});\n","define('extensions/iat/data/sequence',['./properties'],function(properties){\r\n\r\n\t/**\r\n\t * Takes a sequence array and pushes in a block according to the settings in blockObj:\r\n\t * {\r\n\t *  part: 1,\r\n\t *  block: 1,\r\n\t *  twoRows: false,\r\n\t *  trials: 20\r\n\t * }\r\n\t *\r\n\t * Clarification: blocks are the order of the blocks. parts are the type of block...\r\n\t */\r\n\r\n\tvar addBlock = function addBlock(sequenceArr, blockObj){\r\n\r\n\t\t// push instructions\r\n\t\tsequenceArr.push({\r\n\t\t\tdata: {part:blockObj.part, block:blockObj.block, IATversion:properties.IATversion, blockStart:true},\r\n\t\t\tinherit: {set:'instructions', type:'byData', data: {block:blockObj.block}}\r\n\t\t});\r\n\r\n\t\t// push block trials\r\n\t\tsequenceArr.push({\r\n\t\t\tmixer : 'repeat',\r\n\t\t\ttimes : !blockObj.twoRows ? blockObj.trials : Math.floor(blockObj.trials/2),\r\n\t\t\tdata : !blockObj.twoRows ?\r\n\t\t\t\t// if we have one row\r\n\t\t\t\t[\r\n\t\t\t\t\t{inherit : {type:'byData', data:{part:blockObj.part}, set:'IAT'}, data: {block:blockObj.block}}\r\n\t\t\t\t]\r\n\t\t\t\t// if we have two rows\r\n\t\t\t\t: [\r\n\t\t\t\t\t{inherit : {type:'byData', data:{part:blockObj.part,row:1}, set:'IAT'}, data: {block:blockObj.block}},\r\n\t\t\t\t\t{inherit : {type:'byData', data:{part:blockObj.part,row:2}, set:'IAT'}, data: {block:blockObj.block}}\r\n\t\t\t\t]\r\n\t\t});\r\n\t};\r\n\r\n\tfunction getTrials(block, defaultTrials){\r\n\t\treturn properties.trialsPerBlock && (typeof properties.trialsPerBlock[block] == 'number') ? properties.trialsPerBlock[block] : defaultTrials;\r\n\t}\r\n\r\n\tfunction longIAT(){\r\n\t\tvar v1 = [], v2 = [];\r\n\r\n\t\t// build version 1\r\n\t\taddBlock(v1,{part:1,block:1,trials:getTrials(1,20),twoRows:false});\r\n\t\taddBlock(v1,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\r\n\t\taddBlock(v1,{part:3,block:3,trials:getTrials(3,20),twoRows:true});\r\n\t\taddBlock(v1,{part:4,block:4,trials:getTrials(4,40),twoRows:true});\r\n\t\taddBlock(v1,{part:5,block:5,trials:getTrials(5,40),twoRows:false});\r\n\t\taddBlock(v1,{part:6,block:6,trials:getTrials(6,20),twoRows:true});\r\n\t\taddBlock(v1,{part:7,block:7,trials:getTrials(7,40),twoRows:true});\r\n\r\n\t\t// build version 2\r\n\t\taddBlock(v2,{part:5,block:1,trials:getTrials(5,20),twoRows:false});\r\n\t\taddBlock(v2,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\r\n\t\taddBlock(v2,{part:6,block:3,trials:getTrials(6,20),twoRows:true});\r\n\t\taddBlock(v2,{part:7,block:4,trials:getTrials(7,40),twoRows:true});\r\n\t\taddBlock(v2,{part:1,block:5,trials:getTrials(1,40),twoRows:false});\r\n\t\taddBlock(v2,{part:3,block:6,trials:getTrials(3,20),twoRows:true});\r\n\t\taddBlock(v2,{part:4,block:7,trials:getTrials(4,40),twoRows:true});\r\n\r\n\t\treturn !properties.randomize_order ?\r\n\t\t\tv1\r\n\t\t\t: [\r\n\t\t\t\t{\r\n\t\t\t\t\tmixer: 'choose',\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t{mixer:'wrapper',data:v1},\r\n\t\t\t\t\t\t{mixer:'wrapper',data:v2}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t}\r\n\r\n\tfunction shortIAT(){\r\n\t\tvar v1 = [], v2 = [];\r\n\r\n\t\t// build version 1\r\n\t\taddBlock(v1,{part:1,block:1,trials:getTrials(1,20),twoRows:false});\r\n\t\taddBlock(v1,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\r\n\t\taddBlock(v1,{part:3,block:3,trials:getTrials(3,50),twoRows:true});\r\n\t\taddBlock(v1,{part:5,block:4,trials:getTrials(5,30),twoRows:false});\r\n\t\taddBlock(v1,{part:6,block:5,trials:getTrials(6,50),twoRows:true});\r\n\r\n\t\t// build version 2\r\n\t\taddBlock(v2,{part:5,block:1,trials:getTrials(5,20),twoRows:false});\r\n\t\taddBlock(v2,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\r\n\t\taddBlock(v2,{part:6,block:3,trials:getTrials(6,50),twoRows:true});\r\n\t\taddBlock(v2,{part:1,block:4,trials:getTrials(1,30),twoRows:false});\r\n\t\taddBlock(v2,{part:3,block:5,trials:getTrials(3,50),twoRows:true});\r\n\r\n\t\treturn !properties.randomize_order ?\r\n\t\t\tv1\r\n\t\t\t: [\r\n\t\t\t\t{\r\n\t\t\t\t\tmixer: 'choose',\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t{mixer:'wrapper',data:v1},\r\n\t\t\t\t\t\t{mixer:'wrapper',data:v2}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t}\r\n\r\n\treturn function sequence(){\r\n\t\tvar sequenceArr = properties.IATversion == 'short' ? shortIAT() : longIAT();\r\n\t\tsequenceArr.push({\r\n\t\t\tdata: {blockStart:true},\r\n\t\t\tinherit: {set:'instructions', type:'byData', data: {block:'last'}}\r\n\t\t});\r\n\r\n\t\treturn sequenceArr;\r\n\t};\r\n\r\n});\n","define('extensions/iat/component',['require','underscore','app/API','./data/properties','./data/categories','./trial/trials','./trial/instructions','./stimuli/stimuli','./data/sequence'],function(require){\r\n\r\n\tvar   _\t\t\t\t= require('underscore')\r\n\t\t, API\t\t\t= require('app/API')\r\n\t\t, properties\t= require('./data/properties')\r\n\t\t, categories\t= require('./data/categories')\r\n\t\t, trials\t\t= require('./trial/trials')\r\n\t\t, instructions\t= require('./trial/instructions')\r\n\t\t, stimuli\t\t= require('./stimuli/stimuli')\r\n\t\t, sequence\t\t= require('./data/sequence');\r\n\r\n\r\n\t// cache API play so we can extend it.\r\n\tvar APIplay = API.play;\r\n\r\n\t_.extend(API,{\r\n\t\tsetProperties: function setProperties(propertiesObj){\r\n\t\t\t_.extend(properties,propertiesObj);\r\n\t\t},\r\n\t\tsetCategory: function setCategory(name,categoryObj){\r\n\t\t\tvar allowed_names = ['concept1','concept2', 'attribute1', 'attribute2'];\r\n\t\t\tif (_.indexOf(allowed_names,name) === -1){\r\n\t\t\t\tthrow new Error (name + \" is not a valid category name, please use one of the folowing: 'concept1','concept2', 'attribute1', 'attribute2'.\");\r\n\t\t\t}\r\n\r\n\t\t\t// make sure we have a category name\r\n\t\t\tcategoryObj.name || (categoryObj.name = name);\r\n\t\t\t// make sure we have a category title\r\n\t\t\tcategoryObj.title || (categoryObj.title = categoryObj.name);\r\n\r\n\t\t\t// create appropriate media set\r\n\t\t\tif (!categoryObj.media || !categoryObj.media.length) {\r\n\t\t\t\tthrow new Error ('You must supply a media list for ' + name);\r\n\t\t\t}\r\n\t\t\tAPI.addMediaSets(name,categoryObj.media);\r\n\r\n\t\t\t// set category\r\n\t\t\tcategories[name] = categoryObj;\r\n\t\t},\r\n\t\tsetInstructions: function setInstructions(){\r\n\t\t\tinstructions.apply(this, arguments);\r\n\t\t},\r\n\t\tplay : function IATcomponentPlay(){\r\n\t\t\t// settings\r\n\t\t\tAPI.addSettings('canvas',_.defaults(properties.canvas,{\r\n\t\t\t\tbackground:properties.background,\r\n\t\t\t\tcanvasBackground:properties.background\r\n\t\t\t}));\r\n\t\t\tAPI.addSettings('base_url', {image:properties.images_base_url, template:properties.templates_base_url});\r\n\t\t\tAPI.addSettings('logger',{pulse: properties.pulse, url : properties.post_url});\r\n\t\t\tAPI.addSettings('redirect',properties.next_url);\r\n\r\n\t\t\t// trials and stimuli\r\n\t\t\tAPI.addTrialSets(trials());\r\n\t\t\tAPI.addStimulusSets(stimuli());\r\n\r\n\t\t\t// sequence\r\n\t\t\tAPI.addSequence(sequence());\r\n\r\n\t\t\t// call the original API play\r\n\t\t\tAPIplay.apply(this);\r\n\t\t}\r\n\t});\r\n\r\n\treturn API;\r\n});\n","define('extensions/iat/data/iatScorer',['underscore','extensions/dscore/Scorer','./properties','./categories'],function(_,scorer,properties,categories){\r\n\r\n\treturn function(){\r\n\t\t// get category names\r\n\t\tvar attribute1 = categories.attribute1.name\r\n\t\t\t, attribute2 = categories.attribute2.name\r\n\t\t\t, concept1 = categories.concept1.name\r\n\t\t\t, concept2 = categories.concept2.name;\r\n\r\n\t\t// scorer defaults\r\n\t\tvar computeDefaults = {\r\n\t\t\tErrorVar:'score',\r\n\t\t\tcondVar:\"condition\",\r\n\t\t\t//condition 1\r\n\t\t\tcond1VarValues: [\r\n\t\t\t\tattribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2\r\n\t\t\t],\r\n\t\t\t//condition 2\r\n\t\t\tcond2VarValues: [\r\n\t\t\t\tattribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1\r\n\t\t\t],\r\n\t\t\tparcelVar : \"parcel\",\r\n\t\t\tparcelValue : ['first','second'],\r\n\t\t\tfastRT : 150, //Below this reaction time, the latency is considered extremely fast.\r\n\t\t\tmaxFastTrialsRate : 0.1, //Above this % of extremely fast responses within a condition, the participant is considered too fast.\r\n\t\t\tminRT : 400, //Below this latency\r\n\t\t\tmaxRT : 10000, //above this\r\n\t\t\terrorLatency : {use:\"latency\", penalty:600, useForSTD:true},//ignore error respones\r\n\t\t\tpostSettings : {score:\"score\",msg:\"feedback\",url:\"/implicit/scorer\"}\r\n\t\t};\r\n\t\t// default messages\r\n\t\tvar messageDefaults = [\r\n\t\t\t{ cut:'-0.65', message:'Your data suggest a strong implicit preference for ' + concept2 + ' compared to ' + concept1 },\r\n\t\t\t{ cut:'-0.35', message:'Your data suggest a moderate implicit preference for ' + concept2 + ' compared to ' + concept1 },\r\n\t\t\t{ cut:'-0.15', message:'Your data suggest a slight implicit preference for ' + concept2 + ' compared to ' + concept1 },\r\n\t\t\t{ cut:'0.15', message:'Your data suggest little to no difference in implicit preference between ' + concept2 + ' and ' + concept1 },\r\n\t\t\t{ cut:'0.35', message:'Your data suggest a slight implicit preference for ' + concept1 + ' compared to ' + concept2 },\r\n\t\t\t{ cut:'0.65', message:'Your data suggest a moderate implicit preference for ' + concept1 + ' compared to ' + concept2 },\r\n\t\t\t{ cut:'3', message:'Your data suggest a strong implicit preference for ' + concept1 + ' compared to ' + concept2 }\r\n\t\t];\r\n\r\n\t\t// activate scorer\r\n\t\tscorer.addSettings('compute',_.defaults(properties.scorerObj || {},computeDefaults));\r\n\t\tscorer.addSettings('message', {\r\n\t\t\tMessageDef: properties.scorerMessage || messageDefaults\r\n\t\t});\r\n\r\n\t\treturn scorer;\r\n\t};\r\n});\n","/* global xGetCookie */\r\ndefine('extensions/iat/PIcomponent',['require','underscore','./component','./data/iatScorer'],function(require){\r\n\r\n\tvar   _\t\t\t\t= require('underscore')\r\n\t\t, IAT\t\t\t= require('./component')\r\n\t\t, scorerSetter\t= require('./data/iatScorer');\r\n\r\n\t// cache IAT play so we can extend it.\r\n\tvar IATplay = IAT.play;\r\n\r\n\tIAT.setProperties({\r\n\t\tpost_url: '/implicit/PiPlayerApplet'\r\n\t});\r\n\r\n\tIAT.addSettings('logger',{logger: (function(){\r\n\t\tvar current_block = 0;\r\n\t\tvar count = 0;\r\n\r\n\t\tvar defaultLogger = function(trialData, inputData, actionData,logStack){\r\n\t\t\tif (current_block != trialData.block){\r\n\t\t\t\tcurrent_block = trialData.block;\r\n\t\t\t\tcount = 0;\r\n\t\t\t} else {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\r\n\t\t\tvar stimList = this._stimulus_collection.get_stimlist();\r\n\t\t\tvar mediaList = this._stimulus_collection.get_medialist();\r\n\r\n\t\t\treturn {\r\n\t\t\t\tlog_serial : logStack.length,\r\n\t\t\t\ttrial_id: this.counter,\r\n\t\t\t\ttrial_number: count,\r\n\t\t\t\tname: this.name(),\r\n\t\t\t\tresponseHandle: inputData.handle,\r\n\t\t\t\tlatency: Math.floor(inputData.latency),\r\n\t\t\t\tstimuli: stimList,\r\n\t\t\t\tmedia: mediaList,\r\n\t\t\t\tdata: trialData\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn defaultLogger;\r\n\t})()});\r\n\r\n\t_.extend(IAT,{\r\n\t\tplay: function play(){\r\n\t\t\t// activate scorer\r\n\t\t\tvar scorer = scorerSetter();\r\n\r\n\t\t\t//What to do at the end of the task.\r\n\t\t\tIAT.addSettings('hooks',{\r\n\t\t\t\tendTask: function(){\r\n\r\n\t\t\t\t\t// get the block 3 condition so we can report it\r\n\t\t\t\t\tvar block3Cond = _(IAT.getLogs()).find(function(log){return log.data.block===3;});\r\n\t\t\t\t\tif (!block3Cond || !block3Cond.data.condition){\r\n\t\t\t\t\t\tblock3Cond = \"Block 3 condition was not found\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tblock3Cond = block3Cond.data.condition;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//Compute score\r\n\t\t\t\t\tvar DScoreObj = scorer.computeD();\r\n\t\t\t\t\tscorer.dynamicPost({\r\n\t\t\t\t\t\tscore: DScoreObj.DScore,\r\n\t\t\t\t\t\tfeedback: DScoreObj.FBMsg,\r\n\t\t\t\t\t\tblock3Cond: block3Cond\r\n\t\t\t\t\t}).always(function(){top.location.href = \"/implicit/Study?tid=\"+xGetCookie(\"tid\");});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tIATplay.apply(this);\r\n\t\t}\r\n\t});\r\n\r\n\treturn IAT;\r\n});\n","/**\r\n * @license RequireJS text 2.0.12 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.12',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) {}\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config && config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config && config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                if (errback) {\r\n                    errback(e);\r\n                }\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status || 0;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        if (errback) {\r\n                            errback(err);\r\n                        }\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes;\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\r\n\n","\ndefine('text!extensions/iat/jst/layout.jst',[],function () { return '<div>\\r\\n\\t<% if (stimulusData.attribute) { %>\\r\\n\\t\\t<span style=\"color:<%= stimulusData.attributeColor || \\'#31b404\\' %>; font-size:<%= stimulusData.attributeSize || \\'1.3em\\'%>\"><%= stimulusData.attribute%></span>\\r\\n\\t<%}%>\\r\\n\\t<% if (stimulusData.attribute && stimulusData.concept) { %>\\r\\n\\t\\t</br>\\r\\n\\t\\t<span style=\"color:<%= stimulusData.separatorColor %>; font-size:<%= stimulusData.separatorSize %>\">or</span>\\r\\n\\t\\t</br>\\r\\n\\t<%}%>\\r\\n\\t<% if (stimulusData.concept) { %>\\r\\n\\t\\t<span style=\"color:<%= stimulusData.conceptColor || \\'#0000FF\\' %>; font-size:<%= stimulusData.conceptSize || \\'1.3em\\'%>\"><%= stimulusData.concept%></span>\\r\\n\\t<%}%>\\r\\n</div>';});\n\n"]}